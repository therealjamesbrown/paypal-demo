{"version":3,"sources":["webpack:///src/app/pages/services/userprofile.service.ts","webpack:///src/app/pages/profile/update-account/update-account.component.ts","webpack:///src/app/pages/profile/update-account/update-account.component.html","webpack:///src/app/pages/administration/catalogmanagement/catalogmanagement.component.ts","webpack:///src/app/pages/administration/catalogmanagement/catalogmanagement.component.html","webpack:///src/app/pages/administration/dialogs/create-catalog-item/create-catalog-item.component.ts","webpack:///src/app/pages/administration/dialogs/create-catalog-item/create-catalog-item.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/administration/administration.component.ts","webpack:///src/app/pages/administration/administration.component.html","webpack:///src/app/shared/auth-layout/auth-layout.component.ts","webpack:///src/app/shared/auth-layout/auth-layout.component.html","webpack:///src/app/pages/create-account/create-account.component.ts","webpack:///src/app/pages/create-account/create-account.component.html","webpack:///src/app/pages/services/purchasehistory.service.ts","webpack:///src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.html","webpack:///src/app/pages/profile/dialogs/change-password/change-password.component.ts","webpack:///src/app/pages/profile/dialogs/change-password/change-password.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/pages/administration/services/user-creation.service.ts","webpack:///src/app/shared/auth.guard.ts","webpack:///src/app/pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component.html","webpack:///src/app/pages/reset-password/reset-password/reset-password.component.ts","webpack:///src/app/pages/reset-password/reset-password/reset-password.component.html","webpack:///src/app/pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component.html","webpack:///src/app/pages/home/dialogs/orderhistory/viewtransactiondialog/viewtransactiondialog.component.ts","webpack:///src/app/pages/home/dialogs/orderhistory/viewtransactiondialog/viewtransactiondialog.component.html","webpack:///src/app/pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component.ts","webpack:///src/app/pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component.html","webpack:///src/app/pages/home/dialogs/orderhistory/view-all-transactions-dialog/view-all-transactions-dialog.component.ts","webpack:///src/app/pages/home/dialogs/orderhistory/view-all-transactions-dialog/view-all-transactions-dialog.component.html","webpack:///src/app/pages/profile/dialogs/success/success.component.ts","webpack:///src/app/pages/profile/dialogs/success/success.component.html","webpack:///src/app/pages/administration/dialogs/update-catalog-item/update-catalog-item.component.ts","webpack:///src/app/pages/administration/dialogs/update-catalog-item/update-catalog-item.component.html","webpack:///src/app/pages/administration/dialogs/update-role-dialog/update-role-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/update-role-dialog/update-role-dialog.component.html","webpack:///src/app/pages/administration/rolemanagement/rolemanagement.component.ts","webpack:///src/app/pages/administration/rolemanagement/rolemanagement.component.html","webpack:///src/app/pages/home/orderhistory/orderhistory.component.ts","webpack:///src/app/pages/home/orderhistory/orderhistory.component.html","webpack:///src/app/pages/profile/dialogs/update-contact-dialog/update-contact-dialog.component.ts","webpack:///src/app/pages/profile/dialogs/update-contact-dialog/update-contact-dialog.component.html","webpack:///src/app/pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component.html","webpack:///src/app/pages/administration/services/role.service.ts","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app.component.ts","webpack:///src/app/pages/profile/userdetails/userdetails.component.ts","webpack:///src/app/pages/profile/userdetails/userdetails.component.html","webpack:///src/app/pages/signin/signin.component.ts","webpack:///src/app/pages/signin/signin.component.html","webpack:///src/app/pages/home/createorder/createorder.component.ts","webpack:///src/app/pages/home/createorder/createorder.component.html","webpack:///src/app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component.html","webpack:///src/app/pages/home/dialogs/invoice-review-dialog/invoice-review-dialog.component.ts","webpack:///src/app/pages/home/dialogs/invoice-review-dialog/invoice-review-dialog.component.html","webpack:///src/app/pages/contact/contact.component.ts","webpack:///src/app/pages/contact/contact.component.html","webpack:///src/app/pages/administration/services/security-question.service.ts","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/notfound/notfound.component.ts","webpack:///src/app/pages/notfound/notfound.component.html","webpack:///src/app/shared/error.interceptor.ts","webpack:///src/app/pages/administration/services/user-signup.ts","webpack:///src/app/pages/administration/purchasegraph/purchasegraph.component.ts","webpack:///src/app/pages/administration/purchasegraph/purchasegraph.component.html","webpack:///src/app/shared/role.guard.ts","webpack:///src/app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component.html","webpack:///src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.ts","webpack:///src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.html","webpack:///src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.ts","webpack:///src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.html","webpack:///src/app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component.html","webpack:///src/app/pages/administration/usermanagement/usermanagement.component.ts","webpack:///src/app/pages/administration/usermanagement/usermanagement.component.html","webpack:///src/app/pages/reset-password/verify-username/verify-username.component.ts","webpack:///src/app/pages/reset-password/verify-username/verify-username.component.html","webpack:///src/app/pages/about/about.component.ts","webpack:///src/app/pages/about/about.component.html","webpack:///src/app/pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component.ts","webpack:///src/app/pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component.html","webpack:///src/app/pages/administration/services/catalog.service.ts","webpack:///src/app/shared/base-layout/base-layout.component.ts","webpack:///src/app/shared/base-layout/base-layout.component.html","webpack:///src/app/pages/reset-password/reset-password-process/reset-password-process.component.ts","webpack:///src/app/pages/reset-password/reset-password-process/reset-password-process.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/pages/error/error.component.ts","webpack:///src/app/pages/error/error.component.html","webpack:///src/app/pages/reset-password/verify-security-questions/verify-security-questions.component.ts","webpack:///src/app/pages/reset-password/verify-security-questions/verify-security-questions.component.html","webpack:///src/app/pages/profile/dialogs/change-security-questions/change-security-questions.component.ts","webpack:///src/app/pages/profile/dialogs/change-security-questions/change-security-questions.component.html","webpack:///src/main.ts","webpack:///src/app/pages/home/purchase-history-graph/purchase-history-graph.component.ts","webpack:///src/app/pages/home/purchase-history-graph/purchase-history-graph.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["UserprofileService","http","username","get","password","post","userId","firstName","lastName","phoneNumber","address","email","role","put","invoice","console","log","lineItem","lineItems","partsAmount","laborAmount","lineItemTotal","total","userName","orderDate","providedIn","UpdateAccountComponent","dialog","userProfileServce","dialogRef","open","disableClose","width","changeUserPassword","changeUserSecurityQuestions","updateUserContactDetails","selector","templateUrl","styleUrls","CatalogmanagementComponent","catalogServce","displayedColumns","actions","findAllCatalogItems","subscribe","res","catalogDataSource","err","data","afterClosed","result","dialogHeader","catalogItem","dialogBody","title","_id","deleteCatalogItem","createCatalogItem","CreateCatalogItemComponent","catalogService","fb","createCatalogItemForm","group","required","price","controls","value","HomeComponent","cookieService","user","ad","adCookie","oderHistoryVisibility","historyDataNull","historyDataPresent","set","AdministrationComponent","AuthLayoutComponent","CreateAccountComponent","userSignUpService","router","firstFormGroup","secondFormGroup","securityQuestion1","securityQuestion1Answer","securityQuestion2","securityQuestion2Answer","securityQuestion3","securityQuestion3Answer","thirdFormGroup","getSecurityQuestions","securityQuestions","newUser","trim","Question1","Question1Answer","Question2","Question2Answer","Question3","Question3Answer","postUsers","signInUser","signIn","navigate","reset","provide","useValue","displayDefaultIndicatorType","registerAccount","setSecurityQuestions","providers","PurchasehistoryService","invoideId","patch","CreateRoleDialogComponent","roleServce","createRoleForm","text","createRole","alert","ChangePasswordComponent","_snackBar","verticalPosition","form","compose","errorMessage","openSnackBar","duration","panelClass","changePassword","environment","production","UserCreationService","id","AuthGuard","route","state","isAuthenticated","DeleteSecurityquestionDialogComponent","questionId","ResetPasswordComponent","snapshot","queryParamMap","form3","queryParams","skipLocationChange","successMessage","resetPassword","navigateSecurityQuestions","MoreVertDialogComponent","update","ViewtransactiondialogComponent","transaction","grandTotal","subtotal","discount","item","DeleteCatalogItemComponent","catalogItemId","ViewAllTransactionsDialogComponent","purchaseHistoryService","checked","findAllPurchasesByUserName","allPurchaseHistoryDataSource","SuccessComponent","UpdateCatalogItemComponent","options","isDisabled","updateCatalogItemForm","selected","updateCatalogItem","UpdateRoleDialogComponent","roleId","updateRoleForm","updateRole","RolemanagementComponent","findAllRoles","roleDataSource","deleteRole","OrderhistoryComponent","purchaseHistoryDataSource","nonArchivedPurchaseHistoryDataSource","push","invoiceId","archiveTransaction","viewAllTransactions","UpdateContactDialogComponent","userProfileService","updateContactForm","disabled","phone","getUserDetails","userData","contactPhone","contactAddress","contactEmail","changeUserContactDetails","UpdateSecurityquestionDialogComponent","SecurityQuestionService","securityQuestionId","updateSecurityQuestionForm","updateSecurityQuestion","RoleService","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","AppComponent","template","styles","UserdetailsComponent","userDetailsDataSource","dateCreated","date_created","httpOptions","headers","SigninComponent","signin","CreateorderComponent","allServices","activeServices","selectedServiceIds","entries","checkGroup","key","savedService","selectedService","parseFloat","parts","labor","reduce","prev","cur","subTotal","Date","createInvoice","submit","PutDialogComponent","userCreationService","roles","getAllUserRoles","rolesDataSource","filteredRolesDataSource","updatedUserForm","updatedUser","updateUser","InvoiceReviewDialogComponent","ContactComponent","ProfileComponent","AppModule","useClass","multi","declarations","imports","bootstrap","NotfoundComponent","ErrorInterceptor","next","handle","pipe","indexOf","status","error","message","statusText","UserSignUpService","PurchasegraphComponent","itemCount","labels","findPurchasesbyServiceGraph","purchases","count","datasets","backgroundColor","hoverBackgroundColor","RoleGuard","getUserRole","PostDialogComponent","createUserForm","createUser","cancel","DeleteRecordDialogComponentComponent","recordId","SecurityquestionmanagementComponent","securityQuestionService","findAllSecurityQuestions","deleteSecurityQuestion","createSecurityQuestion","PatchDialogComponent","getUserById","UserManagementComponent","roleService","users","VerifyUsernameComponent","form1","validateUsername","AboutComponent","CreateSecurityquestionDialogComponent","createSecurityQuestionForm","CatalogService","catalogId","BaseLayoutComponent","year","now","isVisible","deleteAll","singOut","ResetPasswordProcessComponent","stepOneComponent","stepTwoComponent","form2","stepThreeComponent","routes","path","component","children","canActivate","redirectTo","AppRoutingModule","forRoot","useHash","enableTracing","scrollPositionRestoration","ErrorComponent","VerifySecurityQuestionsComponent","questions","question1","questionText","question2","question3","answerToSecurityQuestion1","answerToSecurityQuestion2","answerToSecurityQuestion3","questionText1","questionText2","questionText3","answerText1","answerText2","answerText3","ChangeSecurityQuestionsComponent","getAllSecurityQuestions","securityQuestionsDataSource","filteredSecurityQuestionsDataSource","question","securityQuestionSeletedOne","securityQuestionOneAnswer","securityQuestionSeletedTwo","securityQuestionTwoAnswer","securityQuestionSeletedThree","securityQuestionThreeAnswer","answerText","changeSecurityQuestions","bootstrapModule","PurchaseHistoryGraphComponent","getUserPurchasesByGraph","length","webpackEmptyAsyncContext","Promise","then"],"mappings":"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","file":"main-es5.js","sourcesContent":["/**\n * \n * ================================\n * ; Title: userprofile.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/24/2020\n * ; Description: service responsible for services that relate to the profile page\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserprofileService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * \n   * GET USER DETAILS\n   * \n   */\n  getUserDetails(username: string): Observable<any>{\n    return this.http.get(`/api/users/username/${username}`);\n  }\n\n\n\n  /**\n   * \n   * CHANGE PASSWORD\n   * \n   */\n   changeUserPassword(username: string, password:string): Observable<any>{\n     return this.http.post(`/api/session/users/${username}/reset-password`,{\n       password\n     });\n   }\n\n   /**\n    * \n    * GetAllSecurityQuestions\n    * \n    */\n   getAllSecurityQuestions(): Observable<any>{\n     return this.http.get(`/api/securityQuestions`);\n   }\n   \n  /**\n   * \n   * CHANGE SECURITY QUESTIONS\n   * \n   */\n  updateUserContactDetails(userId, firstName, lastName, username, phoneNumber, address, email, role): Observable<any>{\n    return this.http.put(`api/users/${userId}`, {\n      firstName: firstName,\n      lastName: lastName,\n      username: username,\n      phoneNumber: phoneNumber,\n      address: address,\n      email: email,\n      role: role\n    })\n  }\n\n  /**\n   * \n   * Create Invoice\n   * \n   */\n  createInvoice(invoice){\n    console.log(invoice);\n    return this.http.post(`/api/invoices`, {\n      lineItem: invoice.lineItems,\n      partsAmount: invoice.partsAmount,\n      laborAmount: invoice.laborAmount,\n      lineItemTotal: invoice.lineItemTotal,\n      total: invoice.total,\n      username: invoice.userName,\n      orderDate: invoice.orderDate\n    })\n  }\n\n\n  /**\n   * \n   * Get purchases by graph for the user api\n   * \n   */\n  getUserPurchasesByGraph(username): Observable<any>{\n    return this.http.get(`/api/invoices/purchases-graph/user/${username}`);\n  }\n\n\n\n  /**\n   * \n   * Find User Role\n   * \n   */\n  getUserRole(username: string): Observable<any>{\n    return this.http.get(`/api/users/${username}/role`);\n  }\n}\n\n\n","/**\n * \n * ================================\n * ; Title: update-account.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for updating the user profile\n * ================================\n * \n */\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UserprofileService } from '../../services/userprofile.service';\nimport { ChangePasswordComponent } from '../dialogs/change-password/change-password.component'\nimport { ChangeSecurityQuestionsComponent } from '../dialogs/change-security-questions/change-security-questions.component';\nimport { UpdateContactDialogComponent } from '../dialogs/update-contact-dialog/update-contact-dialog.component';\n\n@Component({\n  selector: 'app-update-account',\n  templateUrl: './update-account.component.html',\n  styleUrls: ['./update-account.component.css']\n})\nexport class UpdateAccountComponent implements OnInit {\n\n  constructor(\n    private http: HttpClient, \n    private dialog: MatDialog, \n    private userProfileServce: UserprofileService ) { }\n\n  ngOnInit(): void {\n  }\n\n  \n  /**\n   * \n   * Change Password\n   * \n   */\n  changeUserPassword(){\n    const dialogRef = this.dialog.open(ChangePasswordComponent, {\n      disableClose: true,\n      width: \"800px\"\n    })\n  }\n\n\n  /**\n   * \n   * Change Security Questions\n   * \n   */\n  changeUserSecurityQuestions(){\n    const dialogRef = this.dialog.open(ChangeSecurityQuestionsComponent, {\n      disableClose: true,\n      width: \"800px\"\n    })\n  }\n\n\n  /**\n   * \n   * Update Contact Details\n   * \n   */\n\n  updateUserContactDetails(){\n    const dialogRef = this.dialog.open(UpdateContactDialogComponent, {\n      disableClose: true,\n      width: \"800px\"\n    })\n  }\n\n\n}\n","<div fxLayout=\"column\" class=\"personalInfo\">\n    <h1>Edit Account</h1><br />\n    <div fxFlex class=\"buttonStuff\">\n     <button mat-raised-button (click)=\"changeUserPassword()\">Change Password</button><br />\n     <button mat-raised-button (click)=\"changeUserSecurityQuestions()\">Change Security Questions</button><br />\n     <button mat-raised-button (click)=\"updateUserContactDetails()\">Update Contact Information</button><br /><br />\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: catalogmanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component responsible for catalog page\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateCatalogItemComponent } from '../dialogs/create-catalog-item/create-catalog-item.component';\nimport { DeleteCatalogItemComponent } from '../dialogs/delete-catalog-item/delete-catalog-item.component';\nimport { UpdateCatalogItemComponent } from '../dialogs/update-catalog-item/update-catalog-item.component';\nimport { Catalog } from '../interfaces/catalog.interface';\nimport { CatalogService } from '../services/catalog.service';\n\n@Component({\n  selector: 'app-catalogmanagement',\n  templateUrl: './catalogmanagement.component.html',\n  styleUrls: ['./catalogmanagement.component.css']\n})\nexport class CatalogmanagementComponent implements OnInit {\n\n  catalogDataSource: Catalog[];\n  displayedColumns: string[] = ['title', 'price', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private catalogServce: CatalogService) { \n    /**\n       * \n       * Find all Catalog Items\n       */\n      this.catalogServce.findAllCatalogItems().subscribe(res => {\n        this.catalogDataSource = res['data'];\n        //console.log(this.catalogDataSource);\n      }, err => {\n        console.log(err);\n      })\n  }\n\n  ngOnInit(): void {\n  }\n\n    /**\n   * \n   * SECTION FOR CATALOG APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   * \n   */\n\n  //createItem\n  createCatalogItem(){\n    const dialogRef = this.dialog.open(CreateCatalogItemComponent, {\n      data: {\n\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'create'){\n        //refresh the list\n        this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          //console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n      }\n    })\n  }\n\n  //updateItem\n  updateCatalogItem(data){\n    console.log(data);\n    const dialogRef = this.dialog.open(UpdateCatalogItemComponent, {\n      data: {\n        data,\n        dialogHeader: 'Update Catalog Item'\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result === 'update'){\n        //refresh the list\n        \n        this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n      }\n    })\n  }\n\n  //deleteItem\n  deleteCatalogItem(catalogItem){\n    const dialogRef = this.dialog.open(DeleteCatalogItemComponent, {\n      data: {\n        catalogItem,\n        dialogHeader: 'Disabling Item',\n        dialogBody: `Are you sure you want to disable ${catalogItem.title}`\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result === 'confirm'){\n        console.log(catalogItem._id);\n       this.catalogServce.deleteCatalogItem(catalogItem._id).subscribe( res => {\n         //make another call to update the list\n         this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          //console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }, err => {\n         console.log(err)\n       })\n        \n      }\n    })\n  }\n}\n","<p>Items<button mat-button class=\"crudButton\" (click)=\"createCatalogItem()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p> \n\n<table mat-table [dataSource]=\"catalogDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef> Title </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n    </ng-container>\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef> Price </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.price | currency}} </td>\n      </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateCatalogItem(element)\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item (click)=\"deleteCatalogItem(element)\">\n              <mat-icon>delete</mat-icon>\n              <span>Disable</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: createCatalogItemdialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n@Component({\n  selector: 'app-create-catalog-item',\n  templateUrl: './create-catalog-item.component.html',\n  styleUrls: ['./create-catalog-item.component.css']\n})\nexport class CreateCatalogItemComponent implements OnInit {\n\n  constructor(\n    private catalogService: CatalogService, \n    private http: HttpClient, \n    private fb: FormBuilder, \n    private dialogRef: MatDialogRef<CreateCatalogItemComponent>, \n    @Inject(MAT_DIALOG_DATA) data) { }\n\n//bring in our interface\ntext: any;\ncreateCatalogItemForm: FormGroup;\nenteredText:any [];\n\n  ngOnInit(): void {\n    this.createCatalogItemForm = this.fb.group({\n      title: ['', Validators.required],\n      price: ['', Validators.required]\n    })\n  }\n\n  createCatalogItem(){\n    const title = this.createCatalogItemForm.controls.title.value;\n    const price = this.createCatalogItemForm.controls.price.value;\n\n    this.catalogService.createCatalogItem(title, price).subscribe( res => {\n      title\n      price\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Catalog Item</mat-card-title>\n        <br />\n        <form [formGroup]=\"createCatalogItemForm\" (ngSubmit)=\"createCatalogItem()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"Enter item name\"\n                               formControlName=\"title\">\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input type=\"number\" \n                               matInput\n                               placeholder=\"Enter item price\"\n                               formControlName=\"price\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createCatalogItemForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n//get the user and welcome them\nuser: any = this.cookieService.get('sessionuser');\nad: Boolean = true; //show the add to begin with\nadCookie: any = this.cookieService.get('adCookie')\noderHistoryVisibility: Boolean = true; //init graph visibility, constructor will take care of the rest\nhistoryDataNull: string;\nhistoryDataPresent: string;\n\n  constructor(private cookieService: CookieService) {\n\n    //hide the graph if there's no data.\n    this.historyDataNull = this.cookieService.get('hidegraph');\n\n    //show the graph if data is present. \n    this.historyDataPresent = this.cookieService.get('showGraph');\n\n    if (this.historyDataPresent){\n      this.oderHistoryVisibility = true;      \n    } else if (this.historyDataNull){\n      this.oderHistoryVisibility = false;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n  hideAd(){\n    this.ad = false; //hide the add \n    //set a cookie so the ad doesn't come back until next session\n   this.cookieService.set('adCookie','true', 1)\n  }\n\n}\n","<div fxLayout=\"column\" class=\"outerContainer\">\n  <div fxFlex>\n    <mat-card>\n      <mat-card-content>\n        <div fxLayout=\"column\">\n          <div fxFlex class=\"childColumnContainers\">\n            <h1> Welcome, {{user}}!</h1>\n          </div>\n\n          <!--Ad Section-->\n          <div fxFlex class=\"childColumnContainers\" *ngIf=\"ad != false && !adCookie\">\n            <mat-card class=\"ad\">\n              <mat-card-content (click)=\"hideAd()\" >\n                Enjoy 10% off! This offer is automatically applied on new orders!\n                <button \n                mat-raised-button \n                class=\"adButton\">X</button>\n                <br>\n                <p>Terms and conditions apply.</p>\n              </mat-card-content>\n            </mat-card>\n          </div>\n\n          <!--Create Order Form-->\n          <div fxFlex class=\"childColumnContainers\">\n            <mat-card class=\"purchaseGraph\" style=\"background-color: #0d47a1; color: white;\">\n              <mat-card-content>\n                <app-createorder></app-createorder>\n              </mat-card-content>\n            </mat-card>\n          </div>\n\n          <!--Graph-->\n\n          <div fxFlex class=\"childColumnContainers\" *ngIf=\"oderHistoryVisibility != false\">\n            <mat-card class=\"purchaseGraph\" style=\"background-color: #0d47a1; color: white;\">\n              <mat-card-content>\n                <app-purchase-history-graph></app-purchase-history-graph>\n              </mat-card-content>\n            </mat-card>\n          </div>\n\n          <!--Order History-->\n          <div fxFlex class=\"childColumnContainers\" *ngIf=\"oderHistoryVisibility != false\">\n            <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n              <div fxFlex>\n                <mat-card>\n                  <mat-card-content>\n                    <app-orderhistory></app-orderhistory>\n                  </mat-card-content>\n                </mat-card>\n              \n              </div>\n            </div>\n          </div>\n\n          <!--Contact-->\n          <div fxFlex class=\"childColumnContainers\">\n            <mat-card class=\"contactContainer\">\n              <mat-card-content class=\"questions\">\n                <h3>Questions?</h3>\n                <p routerLink=\"/contact\" class=\"contact\">Contact</p>\n              </mat-card-content>\n            </mat-card>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: administration.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for administration page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.css']\n})\n\n\nexport class AdministrationComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n\n\n  constructor() { }\n  ngOnInit() { }   \n  \n}\n\n","\n<img src=\"./assets/contact.png\" class=\"logo\">\n<!--Original royalty free image obtained from https://i.pinimg.com/originals/94/00/17/94001795a3efc6330f4b6b835b68b989.png-->\n<h1>Administration Dashboard</h1>\n<div fxLayout=\"column\" class=\"outerContainer\">\n    <div fxFlex>\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-content>\n            <div fxLayout=\"column\">\n\n\n<!--Catalog and purchases graph column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"column wrap\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Purchases Graph goes here-->\n               <mat-card style=\"background-color: #0d47a1; color: white;\">\n                   <mat-card-content>\n                    <app-purchasegraph></app-purchasegraph>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        <div fxFlex class=\"childRowContainers\">\n<!--Catalog Goes here-->\n            <mat-card>\n                <mat-card-content>\n                    <app-catalogmanagement></app-catalogmanagement>\n                </mat-card-content>\n            </mat-card>\n            </div>\n        </div>\n    </div>\n\n    \n\n<!--Security questions and Role Management Column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Security questions go here-->\n<mat-card>\n    <mat-card-content>\n               <app-securityquestionmanagement></app-securityquestionmanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n\n        <div fxFlex class=\"childRowContainers\">\n<!--Role Management Goes here-->\n<mat-card>\n    <mat-card-content>   \n               <app-rolemanagement></app-rolemanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n        </div>\n    </div>\n\n\n\n\n<!--USER management column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxFlex><mat-card>\n        <mat-card-content>\n <app-usermanagement></app-usermanagement>\n</mat-card-content>\n</mat-card>\n    </div>\n</div>\n\n\n\n\n</div>\n</mat-card-content>\n</mat-card>\n</div>\n<br />\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ; Reference: Google Material Docs: https://material.angular.io/components/stepper/overview\n * ================================\n * \n */\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms'\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router'\nimport { CookieService } from 'ngx-cookie-service'\nimport { UserSignUpService } from '../administration/services/user-signup'\n\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class CreateAccountComponent implements OnInit {\n  firstFormGroup: FormGroup\n  secondFormGroup: FormGroup\n  thirdFormGroup: FormGroup\n  newUser: any\n  questions: any\n  securityQuestions: any\n  constructor(private userSignUpService: UserSignUpService, private cookieService: CookieService, private router: Router, private http: HttpClient, private fb: FormBuilder) { }\n  ngOnInit() {\n    this.firstFormGroup = this.fb.group({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n      firstName: new FormControl(null, Validators.required),\n      lastName: new FormControl(null, Validators.required),\n      phoneNumber: new FormControl(null, Validators.required),\n      address: new FormControl(null, Validators.required)\n    })\n    this.secondFormGroup = this.fb.group({\n      securityQuestion1: new FormControl(null, Validators.required),\n      securityQuestion1Answer: new FormControl(null, Validators.required),\n      securityQuestion2: new FormControl(null, Validators.required),\n      securityQuestion2Answer: new FormControl(null, Validators.required),\n      securityQuestion3: new FormControl(null, Validators.required),\n      securityQuestion3Answer: new FormControl(null, Validators.required),\n    })\n    this.thirdFormGroup = this.fb.group({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required)\n    })\n    this.userSignUpService.getSecurityQuestions().subscribe(res => {\n      this.securityQuestions = res['data']\n      console.log(this.securityQuestions)\n    })\n  }\n  registerAccount() {\n    this.newUser = {\n      username: this.firstFormGroup.get('username').value.trim(),\n      password: this.firstFormGroup.get('password').value.trim(),\n      firstName: this.firstFormGroup.get('firstName').value.trim(),\n      lastName: this.firstFormGroup.get('lastName').value.trim(),\n      phoneNumber: this.firstFormGroup.get('phoneNumber').value.trim(),\n      address: this.firstFormGroup.get('address').value.trim()\n    }\n  }\n  setSecurityQuestions() {\n   this.newUser['securityQuestions'] = {\n     Question1: this.secondFormGroup.controls.securityQuestion1.value,\n     Question1Answer: this.secondFormGroup.get('securityQuestion1Answer').value.trim(),\n     Question2: this.secondFormGroup.controls.securityQuestion2.value,\n     Question2Answer: this.secondFormGroup.get('securityQuestion2Answer').value.trim(),\n     Question3: this.secondFormGroup.controls.securityQuestion3.value,\n     Question3Answer: this.secondFormGroup.get('securityQuestion3Answer').value.trim()\n   }\n   console.log(this.newUser)\n   this.userSignUpService.postUsers(this.newUser).subscribe(err => {\n    if (err) {\n      console.log(err)\n    } else {\n      console.log(this.newUser)\n    }\n  })\n  }\n  signIn() {\n   let signInUser = {\n     username: this.thirdFormGroup.get('username').value.trim(),\n     password: this.thirdFormGroup.get('password').value.trim()\n   }\n   this.userSignUpService.signIn(signInUser).subscribe(res => {\n    if (res['data'].username) {\n      this.cookieService.set('sessionuser', res['data'].username, 1)\n      this.router.navigate(['/'])\n    }\n   })\n   this.secondFormGroup.reset()\n  }\n}","<mat-card>\n    <mat-card-title>\n        <p color=\"primary\" style=\"text-align: center\">Register For An Account</p>\n    </mat-card-title>\n</mat-card>\n<mat-horizontal-stepper #stepper>\n     <!-- Account Registration -->\n    <mat-step [stepControl]=\"firstFormGroup\">\n       <h1 style=\"text-align: center;\">Sign Up</h1>\n        <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Register Account</ng-template>\n            <mat-form-field>\n                <mat-label>Username</mat-label>\n                <input matInput placeholder=\"Ex. thespidermonkey25\" formControlName=\"username\" required>\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Password</mat-label>\n                <input matInput placeholder=\"Ex. root\" formControlName=\"password\" required> \n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>First Name</mat-label>\n                <input matInput placeholder=\"Ex. Peter\" formControlName=\"firstName\" required>\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Last Name</mat-label>\n                <input matInput placeholder=\"Ex. Parker\" formControlName=\"lastName\" required>\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Phone Number</mat-label>\n                <input matInput placeholder=\"Ex. 867 5309\" formControlName=\"phoneNumber\" required>\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Address</mat-label>\n                <input matInput placehodler=\"Ex. 12 Brooklyn Street\" formControlName=\"address\" required>\n            </mat-form-field>\n            <br>\n            <div>\n                <a routerLink=\"/session/signin\">Sign In</a>\n                <button mat-button (click)=\"registerAccount()\" matStepperNext>Next</button>\n            </div>\n        </form>\n    </mat-step>\n    <!-- Security Questions -->\n    <mat-step [stepControl]=\"secondFormGroup\" label=\"Security Questions\">\n        <form style=\"text-align: center;\" [formGroup]=\"secondFormGroup\" (ngSubmit)=\"setSecurityQuestions()\">\n            <mat-card-content>\n                <mat-card-title>Set Your Security Questions.</mat-card-title>\n                <mat-card-subtitle>So You Can Reset Your Password.</mat-card-subtitle>\n                <!-- Security Question 1 -->\n                    <mat-label>Security Question 1</mat-label>\n                    <div>\n                        <mat-select [formControl]=\"secondFormGroup.controls['securityQuestion1']\" >\n                            <mat-option *ngFor=\"let question of securityQuestions\" [value]=\"question.questionId\">{{ question.questionId }}</mat-option>\n                        </mat-select>\n                    </div>\n                <mat-form-field>\n                <input matInput type=\"text\" formControlName=\"securityQuestion1Answer\" required>\n                </mat-form-field>\n                <br>\n                <!-- Security Question 2 -->\n                    <mat-label>Security Question 2</mat-label>\n                    <div>\n                        <mat-select [formControl]=\"secondFormGroup.controls['securityQuestion2']\">\n                            <mat-option *ngFor=\"let question of securityQuestions\" [value]=\"question.questionId\">{{ question.questionId }}</mat-option>\n                        </mat-select>\n                    </div>\n                <mat-form-field>\n                <input matInput type=\"text\" formControlName=\"securityQuestion2Answer\" required>\n                 </mat-form-field>\n                <br>\n                <!-- Security Question 3 -->\n                    <mat-label>Security Question 3</mat-label>\n                    <div>\n                        <mat-select [formControl]=\"secondFormGroup.controls['securityQuestion3']\">\n                            <mat-option *ngFor=\"let question of securityQuestions\" [value]=\"question.questionId\">{{ question.questionId }}</mat-option>\n                        </mat-select>\n                    </div>\n                <mat-form-field>\n                <input matInput type=\"text\" formControlName=\"securityQuestion3Answer\" required>\n                </mat-form-field>\n            </mat-card-content>\n            <br>\n            <!-- Security Question 3 End -->\n            <div>\n                <button mat-button matStepPrevious>Back</button>\n                <button type=\"submit\" mat-button matStepperNext>Set Questions</button>\n            </div>\n        </form>\n    </mat-step>\n     <!-- Sign In -->\n    <mat-step [stepControl]=\"thirdFormGroup\" label=\"Sign In\">\n        <h1 style=\"text-align: center;\">Sign In</h1>\n        <form [formGroup]=\"thirdFormGroup\">\n        <mat-form-field>\n            <mat-label>Username</mat-label>\n            <input style=\"text-align: center;\" matInput formControlName=\"username\" placeholder=\"Ex. spidermonkey25\" required>\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <mat-label>Password</mat-label>\n            <input style=\"text-align: center;\" matInput formControlName=\"password\" placeholder=\"Ex. Password\" required>\n        </mat-form-field>\n        <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button (click)=\"signIn()\" matStepperNext>Sign In</button>\n        </div>\n    </form>\n</mat-step>\n</mat-horizontal-stepper>","/**\n * \n * ================================\n * ; Title: purchasehistory.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: service for purchase history api requests\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchasehistoryService {\n\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   * \n   * Find all purchases from invoice collection\n   * \n   */\n\n   findAllPurchasesByUserName(username): Observable<any>{\n     return this.http.get(`/api/invoices/user/${username}`)\n   }\n\n\n   /**\n    * \n    * Archive Transactions\n    * \n    */\n    archiveTransaction(invoideId): Observable<any>{\n      return this.http.patch(`/api/invoices/${invoideId}`,{\n        //no need to pass any body\n      })\n    }\n\n  findPurchasesbyServiceGraph() {\n    return this.http.get ('/api/invoices/purchases-graph');\n  }\n\n\n}\n","/**\n * \n * ================================\n * ; Title: createRoledialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Role } from '../../interfaces/role.interface';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\n\n\n@Component({\n  selector: 'app-create-role-dialog',\n  templateUrl: './create-role-dialog.component.html',\n  styleUrls: ['./create-role-dialog.component.css']\n})\nexport class CreateRoleDialogComponent implements OnInit {\n\nconstructor(\n  private roleServce: RoleService, \n  private http: HttpClient, \n  private fb: FormBuilder, \n  private dialogRef: MatDialogRef<CreateRoleDialogComponent>, \n  @Inject(MAT_DIALOG_DATA) data) { }\n\n//bring in our interface\ntext: any;\ncreateRoleForm: FormGroup;\nenteredText:any [];\n\n  ngOnInit(): void {\n    this.createRoleForm = this.fb.group({\n      text: ['', Validators.required]\n    })\n  }\n\n  //create the role and insert it into the db\n createRole(){\n  \n  const text = this.createRoleForm.controls.text.value;\n  console.log(text);\n  this.roleServce.createRole(text).subscribe( res => {\n    text\n  }, err => {\n    console.log(err)\n    alert(`There was an issue creating the role. Please ensure the role doesnt already exist. If this issue is reoccurring, please contact the system admin.`);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Role</mat-card-title>\n        <br />\n        <form [formGroup]=\"createRoleForm\" (ngSubmit)=\"createRole()\" #form=\"ngForm\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"enter role name\"\n                               formControlName=\"text\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createRoleForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: changePassword.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for changin the user password in the profile page\n * ================================\n * \n */\n\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { UserprofileService } from 'src/app/pages/services/userprofile.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar, \n  MatSnackBarVerticalPosition \n } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SuccessComponent } from '../success/success.component';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  form: FormGroup;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(\n    private userProfileServce: UserprofileService,\n    private fb: FormBuilder, \n    private http: HttpClient,\n    private _snackBar: MatSnackBar,\n    private cookieService: CookieService,\n    private dialog: MatDialog ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      password: [null, Validators.compose([Validators.required])]\n    });\n  }\n\nchangePassword(){\n  const username = this.cookieService.get('sessionuser');\n  const password = this.form.controls.password.value;\n\n  //console.log(username);\n  //console.log(password);\n\n  this.userProfileServce.changeUserPassword(username, password).subscribe(res =>{\n    console.log(res)\n    if(res['message'] === 'Success!'){\n      //open new dialog\n      const dialogRef = this.dialog.open(SuccessComponent, {\n        width: \"100px\"\n      })\n\n    } else {\n      //call snackbar and display failure\n      this.errorMessage = 'Something went wrong.';\n        this.openSnackBar(this.errorMessage);\n\n    }\n  }, err => {\n    console.log(err);\n  })\n}\n\nopenSnackBar(errorMessage: string) {\n  this._snackBar.open(errorMessage, 'Close', {\n    duration: 7000,\n    verticalPosition: 'top',\n    panelClass: 'error'\n  });\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Changing Password</mat-card-title>\n        <br />\n        <form [formGroup]=\"form\" \n                      (ngSubmit)=\"changePassword(); form.reset()\" \n                      #loginForm=\"ngForm\">\n                      <mat-card-content>\n                          <div fxLayout=\"column\">\n                    <mat-form-field>\n                        <mat-label>New Password</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['password']\" \n                               placeholder=\"password\" \n                               type=\"password\" >\n                      </mat-form-field>\n                    </div>\n                    </mat-card-content>\n                      <mat-card-actions align=\"end\">\n                        <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                        <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!form.valid\">Change Password</button>\n                      </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/**\n * \n * ================================\n * ; Title: user-creation service\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Brendan Mulhen\n * ; Date: 11/9/2020\n * ; Description: User Creation Service\n * ================================\n * \n */\nimport { HttpClient} from '@angular/common/http'\nimport { Injectable } from '@angular/core';\nimport { User } from '../interfaces/user.interface'\nimport { Observable } from 'rxjs'\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserCreationService {\n\n  constructor(private http: HttpClient) { }\n  get(): Observable<User[]> {\n    return this.http.get<User[]>('/api/users')\n  }\n  getUserById(id): Observable<User> {\n    return this.http.get<User>(`/api/users/${id}`)\n  }\n  post(data): Observable<User> {\n    return this.http.post<User>('/api/users', data)\n  }\n  put(id, data): Observable<User> {\n    return this.http.put<User>(`/api/users/${id}`, data)\n  }\n  patch(id, data): Observable<User> {\n    return this.http.patch<User>(`/api/users/${id}`, data)\n  }\n\n  getAllUserRoles(): Observable<any>{\n    return this.http.get('/api/roles/');\n  }\n}\n","/**\n * \n * ================================\n * ; Title: auth.guard.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: file used for checking if a cookie was set/\n *                user has authorization to access a given page. \n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  //import our cookie service and router so we can use them with this guard\n  constructor(private router: Router, private cookieService: CookieService){\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isAuthenticated = this.cookieService.get('sessionuser');\n    if(isAuthenticated){\n      return true;\n    } else {\n    //if no sessionUser is present, then redirect them to the signin page.\n    this.router.navigate(['/session/signin']);\n    return false;\n   }\n  }\n}\n","/**\n * \n * ================================\n * ; Title: delete-security-question-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/26/2020\n * ; Description: Security Question Soft Delete Dialog Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-delete-securityquestion-dialog',\n  templateUrl: './delete-securityquestion-dialog.component.html',\n  styleUrls: ['./delete-securityquestion-dialog.component.css']\n})\nexport class DeleteSecurityquestionDialogComponent implements OnInit {\n\n  questionId: string;\n  //_id: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n\n  constructor(private dialogRef: MatDialogRef<DeleteSecurityquestionDialogComponent>,   \n    @Inject(MAT_DIALOG_DATA) data) { \n\n    //this._id = data._id;\n    this.questionId = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n\n<div mat-dialog-content>\n  <p> {{ dialogBody }} </p>\n</div>\n\n<hr />\n\n<div mat-dialog-actions align=\"end\">\n  <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n  <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\" cdkFocusInitial>Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: reset-password.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/31/2020\n * ; Description: component for managing password reset\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { MatSnackBar, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n//import { UserInterface } from '../../../shared/user.interface';\nimport { ViewChild } from '@angular/core';\nimport { VerifySecurityQuestionsComponent } from '../verify-security-questions/verify-security-questions.component';\nimport { VerifyUsernameComponent } from '../verify-username/verify-username.component';  \n\n\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class ResetPasswordComponent implements OnInit {\n\n   isAuthenticated: string;\n   username: string;\n   form3: FormGroup;  \n   successMessage: string;\n   verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n/*\n //begin add\n   @ViewChild(VerifyUsernameComponent) stepOneComponent: VerifyUsernameComponent;\n   @ViewChild(VerifySecurityQuestionsComponent) stepTwoComponent: VerifySecurityQuestionsComponent;\n   @ViewChild(ResetPasswordComponent) stepThreeComponent: ResetPasswordComponent;\n \n   get frmStepOne() {\n      return this.stepOneComponent ? this.stepOneComponent.form1 : null;\n   }\n \n   get frmStepTwo() {\n      return this.stepTwoComponent ? this.stepTwoComponent.form2 : null;\n   }\n \n   get frmStepThree() {\n      return this.stepThreeComponent ? this.stepThreeComponent.form3 : null;\n   }\n //end add\n */\n\nconstructor(private http: HttpClient, private route: ActivatedRoute, private router: Router, private fb: FormBuilder, private cookieService: CookieService, private _snackBar: MatSnackBar) {\n   this.isAuthenticated = this.route.snapshot.queryParamMap.get('isAuthenticated');\n   this.username = this.route.snapshot.queryParamMap.get('username');\n   console.log(this.username);\n\n//   if(!this.isAuthenticated) {\n//     this.router.navigate(['/session/signin'])\n//   }\n  }\n\n ngOnInit() {\n   this.form3 = this.fb.group({\n     password: [null, Validators.compose([Validators.required])]\n   });\n }\n\n navigateSecurityQuestions(){\n  this.router.navigate(['/session/verify-security-questions'], {queryParams: {username: this.username}, skipLocationChange: true});\n }\n\n resetPassword() {\n   console.log(this.username)\n   this.http.post('/api/session/users/' + this.username + '/reset-password', {\n     password: this.form3.controls['password'].value\n   }).subscribe(res => {\n     //user authenticated\n     this.cookieService.set('sessionuser', this.username, 1);  \n\n     this.successMessage = 'Password reset success. You will be redirected to the login screen.';\n     this.openSnackBar(this.successMessage);\n\n     this.router.navigate(['/']);\n   }, err => {\n     console.log(err);\n   })\n }\n openSnackBar(errorMessage: string) {\n  this._snackBar.open(errorMessage, 'Close', {\n    duration: 7000,\n    verticalPosition: 'top',\n    panelClass: 'error'\n  });\n}\n}","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n  <div fxFlex>\n    <h1>Reset Password</h1>\n    <mat-card class=\"mat-elevation-z8\">\n      <mat-card-content>\n        <!--inner container-->\n        <div fxLayout=\"column\" class=\"singinInnerContainer\">\n          <!--LOGO-->\n          <div fxFlex>\n            <img src=\"./assets/logo.png\" class=\"logo\" />\n          </div>\n          <h2>Enter New Password</h2>\n<!--\n          <mat-horizontal-stepper #stepper>\n            <mat-step [stepControl]=\"form3\">-->\n              <form\n                [formGroup]=\"form3\"\n                (ngSubmit)=\"resetPassword()\"\n                #resetPasswordForm\n              >\n              <!--<ng-template matStepLabel>Create New Password</ng-template>-->\n                <mat-card-content fxLayout=\"column\">\n                  <mat-form-field fxFlex>\n                    <input\n                      matInput\n                      type=\"password\"\n                      [formControl]=\"form3.controls['password']\"\n                      placeholder=\"Example: C10wn$ho3s\"\n                    />\n                  </mat-form-field>\n                  <br /><br />\n                  <div fxLayoutAlign=\"end\" fxLayoutGap=\"10px\">\n                    <a fxFlex fxLayoutAlign=\"start\" (click)=\"navigateSecurityQuestions()\">\n                      <mat-icon>west</mat-icon>\n                      </a>\n                      <button type=\"button\" mat-raised-button color=\"primary\" routerLink=\"/session/signin\">Cancel</button>\n                    <button mat-raised-button \n                    [disabled]=\"!form3.valid\"\n                    color=\"primary\">Submit</button>\n                  </div>\n                </mat-card-content>\n              </form>\n  <!--          </mat-step>\n          </mat-horizontal-stepper>-->\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: more-vert-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User more-vert-dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PutDialogComponent } from '../../../user-admin-put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../../../user-admin-patch-dialog/patch-dialog.component'\n\n@Component({\n  selector: 'app-more-vert-dialog',\n  templateUrl: './more-vert-dialog.component.html',\n  styleUrls: ['./more-vert-dialog.component.css']\n})\nexport class MoreVertDialogComponent implements OnInit {\n\n  constructor(private dialog: MatDialog, private cookieService: CookieService) { }\n\n  ngOnInit(): void {\n  }\n  update() {\n    this.dialog.open(PutDialogComponent)\n   }\n   delete() {\n    this.dialog.open(PatchDialogComponent)\n  } \n}\n","<mat-card>\n    <mat-card-title>\n        <p>User Actions</p>\n    </mat-card-title>\n    <mat-card-actions style=\"align-items: center\">\n        <button mat-button mat-dialog-close (click)=\"update()\"><mat-icon class=\"material-icons\">update</mat-icon></button>\n        <button mat-button mat-dialog-close (click)=\"delete()\"><mat-icon class=\"material-icons\">delete</mat-icon></button>\n    </mat-card-actions>","/**\n * \n * ================================\n * ; Title: viewTransactionDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for viewing a sepcific transaction\n * ================================\n * \n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-viewtransactiondialog',\n  templateUrl: './viewtransactiondialog.component.html',\n  styleUrls: ['./viewtransactiondialog.component.css']\n})\nexport class ViewtransactiondialogComponent implements OnInit {\n\n//variable declaration\ntransaction;\nlaborAmount;\nlineItem;\nlineItems;\nlineItemTotal;\norderDate;\npartsAmount;\ngrandTotal;\ndiscount;\nsubtotal;\n\n  constructor(\n    private dialogRef: MatDialogRef<ViewtransactiondialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data\n    ) {\n\n      \n      this.transaction = data;\n      this.laborAmount = data.laborAmount;\n      this.lineItem = data.lineItem;\n      this.lineItemTotal = data.lineItemTotal;\n      this.orderDate = data.orderDate;\n      this.partsAmount = data.partsAmount;\n      this.grandTotal = data.total;\n      \n\n      this.subtotal = this.laborAmount + this.lineItemTotal + this.partsAmount;\n      this.discount = this.subtotal * .10;\n      for(let item of this.lineItem){\n        //console.log(item.title);\n      }\n     }\n\n     \n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-content>\n<p><span class=\"title\">Order Details</span><span style=\"float: right;\">Order Date:<br />{{transaction.orderDate | date:'medium'}}</span></p>\n<mat-divider></mat-divider>\n<br />\n      <div fxLayout=\"column\">\n              <div fxFlex>\n                <div fxLayout=\"row\">\n                  <div fxFlex>\n                <strong>Line Items:</strong>\n                <ul *ngFor=\"let item of transaction.lineItem\">\n                    <li>\n                    Title:{{item.title}}<br />Amount:{{item.price | currency}}\n                  \n                  </li>\n                  </ul>\n                  <strong>Line Item Total:</strong><br /> {{transaction.lineItemTotal | currency}}\n                </div>\n                <div fxFlex>\n                  <div fxFlex>\n                    <ul>\n                      <li><strong>Parts Amount:</strong><br /> {{transaction.partsAmount | currency}}</li>\n                      <li><strong>Labor Amount:</strong><br /> {{transaction.laborAmount | currency}}</li>\n                  </ul>\n                  </div>\n                </div>\n                </div>\n            </div>\n    </div><br />\n    <div align=\"end\">\n      <ul>\n        <li><h3>----Summary----</h3></li>\n        <li><strong>Parts & Labor Total:</strong><br /> {{transaction.partsAmount + transaction.laborAmount | currency}}</li>\n        <li><strong>Line Item Total:</strong><br /> {{transaction.lineItemTotal | currency}}</li>\n        <li><strong>Subtotal:</strong><br /> {{transaction.lineItemTotal + transaction.partsAmount + transaction.laborAmount| currency}}</li>\n        <li><strong style=\"color: green;\">Discount:</strong><br />-{{discount | currency}}\n        </li>\n      </ul>\n    </div>\n<h3 align=\"end\" style=\"font-weight: 600; text-decoration: underline;\">Grand Total: {{transaction.total | currency}}</h3>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button [mat-dialog-close]=\"false\" color=\"primary\">Close</button>\n</mat-dialog-actions>\n</mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: deleteCatalogItemDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for deleting item\n * ================================\n * \n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n\n@Component({\n  selector: 'app-delete-catalog-item',\n  templateUrl: './delete-catalog-item.component.html',\n  styleUrls: ['./delete-catalog-item.component.css']\n})\nexport class DeleteCatalogItemComponent implements OnInit {\n\n  catalogItemId: string;\n  dialogHeader: string;\n  dialogBody: string;\n  constructor(private dialogRef: MatDialogRef<DeleteCatalogItemComponent>,\n    private catalogService: CatalogService,\n    @Inject(MAT_DIALOG_DATA) data) {\n      console.log(data.catalogItem._id);\n      this.catalogItemId = data.catalogItem._id;\n      this.dialogHeader = data.dialogHeader;\n      this.dialogBody = data.dialogBody;\n     }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n<div mat-dialog-content>\n    <p> {{ dialogBody }}</p>\n\n</div>\n\n\n<hr /> \n\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n    <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\">Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: viewAllTranrsactions.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for displaying all transactions (archived and not)\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { PurchasehistoryService } from 'src/app/pages/services/purchasehistory.service';\nimport { ViewtransactiondialogComponent } from '../viewtransactiondialog/viewtransactiondialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-view-all-transactions-dialog',\n  templateUrl: './view-all-transactions-dialog.component.html',\n  styleUrls: ['./view-all-transactions-dialog.component.css']\n})\nexport class ViewAllTransactionsDialogComponent implements OnInit {\n  allPurchaseHistoryDataSource: any;\n  displayedColumns: string[] = ['date', 'amount', 'action'];\n  //actions: string[] = ['update', 'disable'];\n  checked: any = false;\n  username: string = this.cookieService.get('sessionuser');\n\n  constructor(\n    private cookieService: CookieService,\n    private purchaseHistoryService: PurchasehistoryService,\n    private dialog: MatDialog\n  ) {\n    this.purchaseHistoryService.findAllPurchasesByUserName(this.username).subscribe(res => {\n      this.allPurchaseHistoryDataSource = res['data'];\n      console.log(this.allPurchaseHistoryDataSource);\n    }, err => {\n      console.log(err);\n    })\n   }\n  ngOnInit(): void {\n  }\n\n\n\n/*\nFunction that allows us to view transaction details for one transaction.\n*/\nviewTransactionDetails(transaction){\n  //console.log(transaction);\n  const dialogRef = this.dialog.open(ViewtransactiondialogComponent, {\n    data: transaction,\n    disableClose: true,\n    width: '800px'\n  })\n\n  dialogRef.afterClosed().subscribe(result => {\n   // console.log('closed');\n  })\n}\n\n}\n","\n<mat-card>\n    <mat-card-content>\n<p>All Orders</p>\n<mat-dialog-content>\n<table mat-table [dataSource]=\"allPurchaseHistoryDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef>Date</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.orderDate | date:'medium'}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"amount\">\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.total | currency}} </td>\n      </ng-container>\n\n      <!-- Action Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"viewTransactionDetails(element)\">\n              <mat-icon>pageview</mat-icon>\n              <span>View Details</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n  </table>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button [mat-dialog-close]=\"false\" color=\"primary\">Close</button>\n  </mat-dialog-actions>\n</mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: success.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: reusable component responsible displaying a successful dialog\n * ================================\n * \n */\n\n\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css']\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div style=\"text-align: center; justify-content: center;\">\n<span class=\"material-icons\" style=\"color: green;\">\n            done_outline\n</span>\n<p>Success!</p>\n</div>","/**\n * \n * ================================\n * ; Title: updateCatalogItemDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for updating item\n * ================================\n * \n */\n\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n@Component({\n  selector: 'app-update-catalog-item',\n  templateUrl: './update-catalog-item.component.html',\n  styleUrls: ['./update-catalog-item.component.css']\n})\nexport class UpdateCatalogItemComponent implements OnInit {\n  title;\n  price;\n  catalogItemId;\n  isDisabled;\n  updateCatalogItemForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n\n  constructor(\n    private catalogService: CatalogService, \n    private http: HttpClient,\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<UpdateCatalogItemComponent>,\n    @Inject(MAT_DIALOG_DATA) data){ \n\n      //set the values passed from the parent component\n      this.title = data.data.title;\n      this.price = data.data.price;\n      this.catalogItemId = data.data._id;\n      this.isDisabled = data.data.isDisabled;\n\n      this.updateCatalogItemForm = this.fb.group({\n      //pass the values into the form\n        title: [this.title, Validators.required],\n        price: [this.price, Validators.required],\n        catalogItemId: [this.catalogItemId],\n        isDisabled: [this.isDisabled, Validators.required]\n      })\n    }\n\n  ngOnInit(): void {\n  }\n\n  updateCatalogItem(){\n    //get the current values from the form\n    const title = this.updateCatalogItemForm.controls.title.value;\n    const price = this.updateCatalogItemForm.controls.price.value;\n    const catalogItemId = this.updateCatalogItemForm.controls.catalogItemId.value;\n    const isDisabled = this.selected;\n\n    //call the service and pass updated form values into the service\n    this.catalogService.updateCatalogItem(catalogItemId, title, price, isDisabled).subscribe( res =>{\n      catalogItemId\n      title\n      price\n      isDisabled\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Item</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateCatalogItemForm\" (ngSubmit)=\"updateCatalogItem()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"Enter item name\"\n                               formControlName=\"title\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"number\" \n                               matInput\n                               placeholder=\"Enter item price\"\n                               formControlName=\"price\">\n                    </mat-form-field>\n\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateCatalogItemForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: updateRoledialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for updating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RoleService } from '../../services/role.service';\nimport { MatSelectModule } from '@angular/material/select'\n\n@Component({\n  selector: 'app-update-role-dialog',\n  templateUrl: './update-role-dialog.component.html',\n  styleUrls: ['./update-role-dialog.component.css']\n})\nexport class UpdateRoleDialogComponent implements OnInit {\n  text;\n  roleId;\n  isDisabled;\n  updateRoleForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n  constructor(private roleServce: RoleService, private http: HttpClient, private fb: FormBuilder, private dialogRef: MatDialogRef<UpdateRoleDialogComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.text = data.data.text;\n    this.roleId = data.data._id;\n    this.isDisabled = data.data.isDisabled;\n    \n    this.updateRoleForm = this.fb.group({\n      text: [this.text, Validators.required],\n      roleId: [this.roleId],\n      isDisabled: [this.isDisabled, Validators.required]\n    });\n  }\n  \n\n  ngOnInit(): void {\n  }\n\nupdateRole(){\n  const text = this.updateRoleForm.controls.text.value;\n  const roleId = this.updateRoleForm.controls.roleId.value;\n  const isDisabled = this.selected;\n\n  this.roleServce.updateRole(roleId, text, isDisabled).subscribe( res => {\n    text\n    roleId\n    isDisabled\n  }, err => {\n    console.log(err);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Role</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateRoleForm\" (ngSubmit)=\"updateRole()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"enter role name\"\n                               formControlName=\"text\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateRoleForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: rolemanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for managing the role management table\n * ================================\n * \n */\n\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\nimport { Role } from '../interfaces/role.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HttpClient } from '@angular/common/http';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { DeleteRecordDialogComponentComponent } from './delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from '../dialogs/create-role-dialog/create-role-dialog.component';\nimport { UpdateRoleDialogComponent } from '../dialogs/update-role-dialog/update-role-dialog.component';\n\n//todo create a taskDialogComponent\n\n\n@Component({\n  selector: 'app-rolemanagement',\n  templateUrl: './rolemanagement.component.html',\n  styleUrls: ['./rolemanagement.component.css']\n})\n\n\n\nexport class RolemanagementComponent implements OnInit {\n  roleDataSource: Role[];\n  displayedColumns: string[] = ['role', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private roleServce: RoleService) { \n    \n    /**\n      * Find All Roles\n      */\n     this.roleServce.findAllRoles().subscribe(res => {\n       this.roleDataSource = res['data'];\n       //console.log(this.roleDataSource);\n     }, err => {\n       console.log(err);\n     })\n  }\n  ngOnInit(): void {\n  }\n\n  /**\n   * \n   * \n   * SECTION FOR ROLE API (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n \n   //createRoleDialog\n   createRole(){\n     const dialogRef = this.dialog.open(CreateRoleDialogComponent, {\n       data: {\n         \n       },\n       disableClose: true,\n       width: \"800px\"\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'create'){\n        //update the list\n        this.roleServce.findAllRoles().subscribe(res => {\n          this.roleDataSource = res['data'];\n          //console.log(this.roleDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }\n     })\n   }\n\n   \n   //updateRoleDialog\n   updateRole(data){\n     console.log(data);\n     const dialogRef = this.dialog.open(UpdateRoleDialogComponent, {\n       data: {\n         data,\n         dialogHeader: 'Updating Role'\n       },\n       disableClose: true,\n       width:'800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if(result === 'update') {\n        this.roleServce.findAllRoles().subscribe(res => {\n          this.roleDataSource = res['data'];\n          //console.log(this.roleDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }\n     })\n   }\n\n   //deleteRoleDialog\n  deleteRole(roleId){\n     const dialogRef = this.dialog.open(DeleteRecordDialogComponentComponent, {\n       data: {\n         roleId,\n         dialogHeader: 'Disabling Role',\n         dialogBody: `Are you sure you want to disable role ${roleId}?`\n       },\n       disableClose: true,\n       width: '800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'confirm') {\n         this.roleServce.deleteRole(roleId).subscribe(res => {\n           //console.log('Role successfully deleted')\n           //make another call to update the list\n           this.roleServce.findAllRoles().subscribe(res => {\n            this.roleDataSource = res['data'];\n            console.log(this.roleDataSource);\n          }, err => {\n            console.log(err);\n          })\n         })\n       }\n     })\n  }\n\n\n   \n}\n","\n<p>Roles <button mat-button class=\"crudButton\"(click)=\"createRole()\"><mat-icon class=\"matieral-icons\">library_add</mat-icon></button></p> \n\n<table mat-table [dataSource]=\"roleDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"role\">\n      <th mat-header-cell *matHeaderCellDef> Role </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.text}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateRole(element)\" [disabled]=\"element.text === 'Admin'\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item (click)=\"deleteRole(element._id)\" [disabled]=\"element.text === 'Admin'\">\n              <mat-icon>delete</mat-icon>\n              <span>Disable</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: orderhistory.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for purchase history management.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Invoice } from '../../../shared/invoice.interface';\nimport { PurchasehistoryService } from '../../services/purchasehistory.service';\nimport { ViewAllTransactionsDialogComponent } from '../dialogs/orderhistory/view-all-transactions-dialog/view-all-transactions-dialog.component';\nimport { ViewtransactiondialogComponent } from '../dialogs/orderhistory/viewtransactiondialog/viewtransactiondialog.component';\n\n\n@Component({\n  selector: 'app-orderhistory',\n  templateUrl: './orderhistory.component.html',\n  styleUrls: ['./orderhistory.component.css']\n})\nexport class OrderhistoryComponent implements OnInit {\n  purchaseHistoryDataSource: any;\n  displayedColumns: string[] = ['date', 'amount', 'action'];\n  actions: string[] = ['update', 'disable'];\n  checked: any = false;\n  username: string = this.cookieService.get('sessionuser');\n  nonArchivedPurchaseHistoryDataSource: any;\n\n  constructor(\n    private cookieService: CookieService, \n    private purchaseHistoryService: PurchasehistoryService,\n    private dialog: MatDialog) {\n   \n  //populate all the transactions for a user, but we'll filter out the archived ones on the html side\n  this.purchaseHistoryService.findAllPurchasesByUserName(this.username).subscribe(res => {\n    \n    //pull back all transactions\n    this.purchaseHistoryDataSource = res['data'];\n\n    //filter out the archived transractions and push them into a new datasource array\n    this.nonArchivedPurchaseHistoryDataSource = [];\n    for(let item of this.purchaseHistoryDataSource){\n      if(item.isDisabled != true ){\n        this.nonArchivedPurchaseHistoryDataSource.push(item);\n      }\n    }\n    //console.log(this.purchaseHistoryDataSource);\n  }, err => {\n    console.log(err);\n  })\n   }\n\n\n  ngOnInit(): void {\n  }\n\n/*\nFunction that allows us to view transaction details for one transaction.\n*/\nviewTransactionDetails(transaction){\n  //console.log(transaction);\n  const dialogRef = this.dialog.open(ViewtransactiondialogComponent, {\n    data: transaction,\n    disableClose: true,\n    width: '800px'\n  })\n\n  dialogRef.afterClosed().subscribe(result => {\n   // console.log('closed');\n  })\n}\n\n\n/**\n * \n * Function that launches a dialog to show all the users transactions\n * \n */\nviewAllTransactions(){\n  const dialogRef = this.dialog.open(ViewAllTransactionsDialogComponent, {\n    disableClose: true,\n    width: '800px'\n  })\n\n  dialogRef.afterClosed().subscribe(result => {\n    //console.log('closed.')\n  })\n}\n\n\n/**\n * \n * Function that archives a transaction\n * \n */\narchiveTransraction(invoiceId){\n  console.log(invoiceId);\n  this.purchaseHistoryService.archiveTransaction(invoiceId).subscribe(res => {\n    //after patch refresh the data.\n    this.purchaseHistoryService.findAllPurchasesByUserName(this.username).subscribe( res => {\n      //pull back all transactions\n    this.purchaseHistoryDataSource = res['data'];\n\n    //filter out the archived transractions and push them into a new datasource array\n    this.nonArchivedPurchaseHistoryDataSource = [];\n    for(let item of this.purchaseHistoryDataSource){\n      if(item.isDisabled != true ){\n        this.nonArchivedPurchaseHistoryDataSource.push(item);\n      }\n    }\n    })\n    \n   \n  }, err => {\n    console.log(err);\n  })\n\n  \n}\n}\n","<p>Recent Orders<button mat-raised-button (click)=\"viewAllTransactions()\" class=\"crudButton\">View All</button></p>\n\n\n\n<table mat-table [dataSource]=\"nonArchivedPurchaseHistoryDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef>Date</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.orderDate | date}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"amount\">\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.total | currency}} </td>\n      </ng-container>\n  \n    <!-- Action Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"viewTransactionDetails(element)\">\n              <mat-icon>pageview</mat-icon>\n              <span>View Details</span>\n            </button>\n            <button mat-menu-item (click)=\"archiveTransraction(element._id)\">\n              <mat-icon>delete</mat-icon>\n              <span>Archive</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: updateContactDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for changin the user password in the profile page\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MatSnackBar, \n  MatSnackBarVerticalPosition \n } from '@angular/material/snack-bar';\n import { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SuccessComponent } from '../success/success.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport  { UserprofileService } from '../../../services/userprofile.service';\n\n@Component({\n  selector: 'app-update-contact-dialog',\n  templateUrl: './update-contact-dialog.component.html',\n  styleUrls: ['./update-contact-dialog.component.css']\n})\nexport class UpdateContactDialogComponent implements OnInit {\n\n  \n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  user = this.cookieService.get('sessionuser');\n  userData: Object;\n  firstName: string;\n  lastName: string;\n  phone: string;\n  address: string;\n  email: string;\n  role: string;\n  updateContactForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder, \n    private http: HttpClient,\n    private _snackBar: MatSnackBar,\n    private cookieService: CookieService,\n    private dialog: MatDialog,\n    private userProfileService: UserprofileService ) {\n\n\n/**\n * \n * Initialize the form.\n * \n */\n    console.log(this.email);\n    this.updateContactForm = this.fb.group({\n      firstName: [{value: this.firstName, disabled: true}, Validators.required],\n      lastName: [{value: this.lastName, disabled: true}, Validators.required],\n      phone: [this.phone, Validators.required],\n      address: [this.address, Validators.required],\n      email: [this.email, Validators.required],\n      role: [{value: this.role, disabled: true}, Validators.required],\n    });\n\n   //make a call to get the user details and set are initialized form values\n   this.userProfileService.getUserDetails(this.user).subscribe( res => {\n    this.userData = res.data;\n    this.firstName = res.data.firstName;\n    this.lastName = res.data.lastName;\n    this.phone = res.data.phoneNumber;\n    this.address = res.data.address;\n    this.email = res.data.email;\n    this.role = res.data.role;\nconsole.log(res);\n    //map the values above into the form.\n    this.updateContactForm = this.fb.group({\n      firstName: [{value: this.firstName, disabled: true}, Validators.required],\n      lastName: [{value: this.lastName, disabled: true}, Validators.required],\n      phone: [this.phone, Validators.required],\n      address: [this.address, Validators.required],\n      email: [this.email, Validators.required],\n      role: [{value: this.role, disabled: true}, Validators.required],\n    });\n  });\n  \n     }\n\n\n  ngOnInit(): void {}\n\n\n  changeUserContactDetails(){\n    const userId = this.cookieService.get('userId');\n    const firstName = this.updateContactForm.controls.firstName.value;\n    const lastName = this.updateContactForm.controls.lastName.value;\n    const username = this.user; \n    const contactPhone = this.updateContactForm.controls.phone.value;\n    const contactAddress = this.updateContactForm.controls.address.value;\n    const contactEmail = this.updateContactForm.controls.email.value;\n    const role = this.updateContactForm.controls.role.value;\n  \n    this.userProfileService.updateUserContactDetails(\n                                                      userId,\n                                                      firstName,\n                                                      lastName,\n                                                      username,\n                                                      contactPhone,\n                                                      contactAddress,\n                                                      contactEmail,\n                                                      role).subscribe( res =>{\n                                                        //console.log(res);\n                                                        const dialogRef = this.dialog.open(SuccessComponent, {\n                                                          width: \"100px\"\n                                                        })\n                                                      }, err => {\n                                                        this.errorMessage = 'Something went wrong.';\n                                                        this.openSnackBar(this.errorMessage);\n                                                      });\n  }\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Updating Contact Information</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateContactForm\" (ngSubmit)=\"changeUserContactDetails()\">\n                      <mat-card-content>\n                          <div fxLayout=\"column\">\n                    <mat-form-field>\n                        <mat-label>First Name</mat-label>\n                        <input matInput \n                                formControlName=\"firstName\"\n                               [formControl]=\"updateContactForm.controls['firstName']\" \n                               placeholder=\"First Name\" >\n                      </mat-form-field>\n                      \n                      <mat-form-field>\n                        <mat-label>Last Name</mat-label>\n                        <input matInput \n                        formControlName=\"lastName\"\n                               [formControl]=\"updateContactForm.controls['lastName']\" \n                               placeholder=\"Last Name\" >\n                      </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>Phone</mat-label>\n                        <input matInput \n                        formControlName=\"phone\"\n                               [formControl]=\"updateContactForm.controls['phone']\" \n                               placeholder=\"phone\" >\n                      </mat-form-field>\n\n                      <mat-form-field>\n                        <mat-label>Address</mat-label>\n                        <input matInput \n                        formControlName=\"address\"\n                               [formControl]=\"updateContactForm.controls['address']\" \n                               placeholder=\"address\" >\n                      </mat-form-field>\n\n                      <mat-form-field>\n                        <mat-label>Email</mat-label>\n                        <input matInput \n                        formControlName=\"email\"\n                               [formControl]=\"updateContactForm.controls['email']\" \n                               placeholder=\"email\" >\n                      </mat-form-field>\n\n                      <mat-form-field>\n                        <mat-label>Role</mat-label>\n                        <input matInput \n                        formControlName=\"role\"\n                               [formControl]=\"updateContactForm.controls['role']\" \n                               placeholder=\"Role\" >\n                      </mat-form-field>\n                    \n\n                    </div>\n                    </mat-card-content>\n                      <mat-card-actions align=\"end\">\n                        <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                        <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateContactForm.valid\">Update Details</button>\n                      </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: update-securityquestion-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: Security Question Update Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SecurityQuestionService } from '../../services/security-question.service';\n\n\n\n@Component({\n  selector: 'app-update-securityquestion-dialog',\n  templateUrl: './update-securityquestion-dialog.component.html',\n  styleUrls: ['./update-securityquestion-dialog.component.css']\n})\nexport class UpdateSecurityquestionDialogComponent implements OnInit {\n\n  questionId;\n  securityQuestionId;\n  isDisabled;\n  updateSecurityQuestionForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n\n  constructor(private SecurityQuestionService: SecurityQuestionService, private http: HttpClient, private fb: FormBuilder, private dialogRef: MatDialogRef<UpdateSecurityquestionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) {\n\n      this.questionId = data.data.questionId;\n      this.securityQuestionId = data.data._id;\n      this.isDisabled = data.data.isDisabled;\n      this.updateSecurityQuestionForm = this.fb.group({\n        questionId: [this.questionId, Validators.required],\n        securityQuestionId: [this.securityQuestionId],\n        isDisabled: [this.isDisabled, Validators.required]\n      })\n     }\n\n  ngOnInit(): void {\n  }\n\n  updateSecurityQuestion() {\n    const questionId = this.updateSecurityQuestionForm.controls.questionId.value;\n    const securityQuestionId = this.updateSecurityQuestionForm.controls.securityQuestionId.value;\n    const isDisabled = this.selected;\n\n    this.SecurityQuestionService.updateSecurityQuestion(securityQuestionId, questionId, isDisabled).subscribe( res => {\n      securityQuestionId\n      questionId\n      isDisabled\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n\n\n\n\n\n\n\n \n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Security Question</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateSecurityQuestionForm\" (ngSubmit)=\"updateSecurityQuestion()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"questionId\" \n                               matInput\n                               placeholder=\"Enter security question\"\n                               formControlName=\"questionId\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateSecurityQuestionForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: role.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for interfacing with our apis for the role-management\n *  component\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Role } from '../interfaces/role.interface'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  //import http client\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   * \n   * Find All Roles\n   * \n   */\n   findAllRoles(): Observable<any>{\n     return this.http.get(`/api/roles/`);\n   }\n\n   /**\n   * \n   * Find Role By ID\n   * \n   */\n  findRoleById(roleId: string): Observable<any>{\n    return this.http.get(`/api/roles/${roleId}`)\n  }\n\n\n   /**\n    * \n    * Create Role\n    * \n    */\ncreateRole(text: Role): Observable<any>{\n  return this.http.post(`/api/roles/`, {\n    text: text \n  })\n}\n\n\n  /**\n   * \n   * Update Role\n   * \n   */\nupdateRole(roleId: String, text: Role, isDisabled: Boolean): Observable<any>{\n  return this.http.put(`/api/roles/${roleId}/update`, {\n    text,\n    isDisabled\n  })\n}\n\n  /**\n   * \n   * Delete Role\n   * \n   */\n  deleteRole(roleId: String): Observable<any>{\n    return this.http.patch(`/api/roles/${roleId}`,{\n      roleId\n    })\n  }\n}\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/**\n * \n * ================================\n * ; Title: userdetails.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/24/2020\n * ; Description: component responsible for populating the user details\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserprofileService } from '../../services/userprofile.service'\n\n@Component({\n  selector: 'app-userdetails',\n  templateUrl: './userdetails.component.html',\n  styleUrls: ['./userdetails.component.css']\n})\nexport class UserdetailsComponent implements OnInit {\n  username: string = this.cookieService.get('sessionuser');\n  userDetailsDataSource;\n  firstName;\n  lastName;\n  phone;\n  address;\n  email;\n  role;\n  dateCreated;\n  dateModified;\n\n\n  constructor(\n    private dialog: MatDialog, \n    private userProfileService: UserprofileService,\n    private cookieService: CookieService) {\n\n    /**\n     * \n     * Pull in the user details\n     * \n     */\n\n     this.userProfileService.getUserDetails(this.username).subscribe(res => {\n      this.userDetailsDataSource = res['data'];\n      this.firstName = this.userDetailsDataSource.firstName;\n      this.lastName = this.userDetailsDataSource.lastName;\n      this.phone = this.userDetailsDataSource.phoneNumber;\n      this.address = this.userDetailsDataSource.address;\n      this.email = this.userDetailsDataSource.email;\n      this.role = this.userDetailsDataSource.role;\n      this.dateCreated = this.userDetailsDataSource.date_created;\n\n      //console.log(this.userDetailsDataSource);\n     })\n   }\n\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"personalInfo\"> \n    <h1>Personal Details</h1>\n    <div class=\"innerPersonalDetails\">\n    <li style=\"padding-top: 10px;\">Username: {{username}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>First Name: {{firstName}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>Last Name: {{lastName}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>Phone: {{phone}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>Address: {{address}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>Email: {{email}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>Role: {{role}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>Date Created: {{dateCreated | date}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li style=\"padding-bottom: 10px;\">Date Modified: TODO</li>\n</div>\n<br />\n</div>","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, \n  MatSnackBarVerticalPosition \n } from '@angular/material/snack-bar'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  form: FormGroup;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(private router: Router, \n    private cookieService: CookieService, \n    private fb: FormBuilder, \n    private http: HttpClient,\n    private _snackBar: MatSnackBar) { \n\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n  signin(){\n    const username = this.form.controls.userName.value;\n    const password = this.form.controls.password.value;\n\n    //console.log(username);\n    //console.log(password);\n    \n\n    this.http.post('/api/session/signin', {\n      username,\n      password\n    }).subscribe(res => {\n      //console.log(res['data']._id);\n      if (res['data'].username){\n        //user authenticated\n        //set the username and ID cookies, we'll use these all over the application\n        this.cookieService.set('sessionuser', res['data'].username, 1);\n        this.cookieService.set('userId', res['data']._id, 1);\n        this.router.navigate(['/']);\n      }\n    }, err => {\n      this.errorMessage = 'Invalid username or password. Try again.';\n        this.openSnackBar(this.errorMessage);\n    });\n  }\n\n\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n  }\n}\n","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n        <!--inner container-->\n        <div fxLayout=\"column\" class=\"singinInnerContainer\">\n            <!--LOGO-->\n            <div fxFlex>\n                <img src=\"./assets/logo.png\" class=\"logo\">\n            </div>\n\n            <!--SigninForm-->\n            <div fxFlex class=\"signInFormStuff\">\n                <form [formGroup]=\"form\" \n                      (ngSubmit)=\"signin(); form.reset()\" \n                      #loginForm=\"ngForm\">\n                    <mat-form-field>\n                        <mat-label>Username</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['userName']\" \n                               placeholder=\"username\" >\n                      </mat-form-field><br />\n                      <mat-form-field>\n                        <mat-label>Password</mat-label>\n                        <input matInput \n                                type=\"password\"\n                               [formControl]=\"form.controls['password']\"\n                               placeholder=\"password\">\n                      </mat-form-field>\n                      <p>\n                        <button type=\"submit\" \n                                fxFlex \n                                mat-raised-button \n                                color=\"primary\"\n                                [disabled]=\"!form.valid\">Sign-in</button>\n                      </p>\n                </form>\n            </div>\n\n            <!--Forgot-->\n            <div fxFlex>\n               <a routerLink=\"/session/forgot/\">Forgot Password?</a>\n            </div>\n            \n\n            <!--Divider-->\n            <div fxFlex>\n                <hr class=\"divider\">\n            </div>\n\n             <!--Signup Password-->\n            <div fxFlex class=\"signUpSection\">\n                    <button type=\"submit\" \n                                fxFlex \n                                mat-raised-button \n                                color=\"primary\"\n                                routerLink=\"/session/createAccount\">Sign-Up</button>\n            </div>\n        </div>\n    </mat-card-content>\n    </mat-card>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: createOrder.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for creating new invoices/orders.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { CatalogService } from '../../administration/services/catalog.service';\nimport { Catalog } from '../../administration/interfaces/catalog.interface';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { InvoiceReviewDialogComponent } from '../dialogs/invoice-review-dialog/invoice-review-dialog.component';\nimport { UserprofileService } from '../../services/userprofile.service';\nimport { SuccessComponent } from '../../profile/dialogs/success/success.component';\nimport { MatSnackBar, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-createorder',\n  templateUrl: './createorder.component.html',\n  styleUrls: ['./createorder.component.css']\n})\nexport class CreateorderComponent implements OnInit {\nform: FormGroup;\nuserName: string;\nallServices: []; //all the services (disabled and enabled)\nactiveServices: []; //only enabled services\nlineItems: any[];\ndiscount: string;\nerrorMessage: string;\nverticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n\n  constructor(\n    private catalogService: CatalogService,\n    private cookieService: CookieService,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private router: Router,\n    private userProfileService: UserprofileService\n    ) {\n\n    //get the username\n    this.userName = this.cookieService.get('sessionuser');\n\n    /**\n     * \n     * Find all catalog items\n     * \n     */\n    this.catalogService.findAllCatalogItems().subscribe(res => {\n      this.allServices = (res['data']);\n      \n      //filter out the archived transractions and push them into a new datasource array\n    this.activeServices = [];\n    for(let item of this.allServices){\n      if(item['isDisabled'] != true ){\n        this.activeServices.push(item);\n      }\n    }\n    //console.log(this.activeServices);\n    }, err => {\n      console.log(err);\n    })\n\n   }\n\n  ngOnInit(): void {}\n\n  logform(){\n    console.log(this.form);\n    this.router.navigate(['/']);\n  }\n\n  submit(form){\n    console.log(form);\n    //console.log('form just got logged')\n    const selectedServiceIds = [];\n\n    for(const[key, value] of Object.entries(form.checkGroup)) {\n      if(value) {\n        selectedServiceIds.push({\n          id: key\n        })\n      }\n    }\n    //console.log(selectedServiceIds);\n    this.lineItems = [];\n\n    /**\n     * \n     * Build the invoice object\n     * \n     */\n     for(const savedService of this.activeServices){\n       for(const selectedService of selectedServiceIds) {\n         if(savedService['_id'] === selectedService.id){\n          this.lineItems.push({\n            title: savedService['title'],\n            price: savedService['price']\n          });\n         }\n       }\n     }\n     //console.log(this.lineItems);\n \n     const partsAmount = parseFloat(form.parts);\n     console.log(partsAmount);\n     const laborAmount = form.labor * 50;\n     const lineItemTotal = this.lineItems.reduce((prev, cur) => prev + cur.price, 0);\n     const subTotal = partsAmount + laborAmount + lineItemTotal;\n     const discount = parseFloat(subTotal) * .10;\n     const total = subTotal - discount\n     //console.log(total);\n\n     const invoice = {\n       userName: this.userName,\n       lineItems: this.lineItems,\n       partsAmount: partsAmount,\n       laborAmount: laborAmount,\n       lineItemTotal: lineItemTotal,\n       total: total,\n       orderDate: new Date()\n     } \n\n     //console.log(invoice);\n     const dialogRef = this.dialog.open(InvoiceReviewDialogComponent, {\n       data: {\n         invoice: invoice,\n         discount: discount\n       },\n       disableClose: true,\n       width: '800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'confirm') {\n         console.log('Invoice saved');\n         this.userProfileService.createInvoice(invoice).subscribe(res => {\n           console.log(res);\n           if(res['message'] === 'Successful POST Request'){\n            this.router.navigate(['/']);\n           this.dialog.open(SuccessComponent, {\n            width: \"100px\"\n           }\n           \n           \n           )} else {\n             //do something\n             console.log('something went wrong.')\n           }\n\n           \n         }, err => {\n           console.log(err);\n         });\n       } else if (result === 'cancel'){\n        //do something\n       console.log(form.parts)\n       }  \n     })     \n  }\n}\n","<p>Create Order</p> \n\n<mat-card>\n        <form \n        #serviceRepairForm=\"ngForm\" \n        (ngSubmit)=\"submit(serviceRepairForm.value); serviceRepairForm.reset();\">\n            <mat-card-content>\n                <div fxLayout=\"column\">\n                    <h3>Services</h3>\n                    <div fxFlex>\n                            <div fxFlex ngModelGroup=\"checkGroup\">\n                                <ul>\n                            <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly\"\n                            >\n                                <li *ngFor=\"let service of activeServices\">\n                                    <mat-checkbox name=\"{{service._id}}\" ngModel color=\"accent\">\n                                        {{service.title}} ({{service.price | currency}})\n                                    </mat-checkbox>\n                                </li>\n                            </div>\n                        </ul>\n                            </div>\n                    </div>\n                </div>\n                <mat-divider></mat-divider>\n                <br />\n                <!--Parts and Labor-->\n                <div fxLayout=\"column\">\n                    <h4 fxFlex>Standard Fees</h4>\n                    <mat-form-field style=\"width: 300px !important;\">\n                        <input matInput name=\"parts\" ngModel=\"0\" placeholder=\"Parts\" type=\"number\" min=\"0\" required/>\n                    </mat-form-field>\n\n                    <mat-form-field style=\"width: 300px !important;\">\n                        <input matInput name=\"labor\" ngModel=\"0\" placeholder=\"Labor @ 50.00/hr\" type=\"number\" min=\"0\" required/>\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <!--Form actions-->\n            <mat-divider></mat-divider>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button type=\"reset\" color=\"warn\" (click)=\"serviceRepairForm.reset();\">Reset</button>\n                <button mat-raised-button color=\"primary\" [disabled]=\"!serviceRepairForm.valid\">Submit</button>\n            </mat-card-actions>\n        </form>\n</mat-card>","/**\n * \n * ================================\n * ; Title: put-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User put dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\nimport { UserCreationService } from '../../services/user-creation.service'\nimport { UserprofileService } from 'src/app/pages/services/userprofile.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-put-dialog',\n  templateUrl: './put-dialog.component.html',\n  styleUrls: ['./put-dialog.component.css']\n})\nexport class PutDialogComponent implements OnInit {\n  updatedUserForm: FormGroup\n  user: any\n  roles: any\n  selected: any\n  rolesDataSource;\n  filteredRolesDataSource;\n\n  \n  constructor(private userCreationService: UserCreationService, private cookieService: CookieService, private http: HttpClient, private fb: FormBuilder, private userProfileService: UserprofileService) {\n\n   }\n  ngOnInit() {\n    this.userCreationService.get().subscribe(res => {\n      this.roles = res['data']\n      //console.log(this.roles);\n    });\n\n    \n    this.userCreationService.getAllUserRoles().subscribe(res =>{\n      console.log(res.data);\n      //get all the roles and set it to our initial data array\n      this.rolesDataSource = res.data;\n\n      //Initialize the new array, filter out the disabled ones, and pushed the active ones into the new array\n      this.filteredRolesDataSource = [];\n      for (let role of this.rolesDataSource){\n        if(role.isDisabled !== true){\n          this.filteredRolesDataSource.push(role);\n        }\n      }\n      //console.log(this.filteredSecurityQuestionsDataSource);\n    })\n\n\n    this.updatedUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])],\n      role: [null, Validators.required]\n    })\n   /* let id = this.cookieService.get('updateId')\n    this.http.get(`http://localhost:3000/api/user/${id}`).subscribe(user => {\n      this.user = user['data']\n    }) */\n  }\n  updateUser() {\n    let updatedUser = {\n      username: this.updatedUserForm.get('username').value,\n      password: this.updatedUserForm.get('password').value,\n      firstName: this.updatedUserForm.get('firstName').value,\n      lastName: this.updatedUserForm.get('lastName').value,\n      address: this.updatedUserForm.get('address').value,\n      email: this.updatedUserForm.get('email').value,\n      phoneNumber: this.updatedUserForm.get('phoneNumber').value,\n      role: this.updatedUserForm.controls.role.value\n    }\n    let id = this.cookieService.get('id')\n    this.userCreationService.put(id, updatedUser).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"UPDATE Success\")\n    })\n    this.updatedUserForm.reset();\n  }\n}\n","<mat-card class=\"text-center\">\n    <mat-card-content>\n        <form (ngSubmit)=\"updateUser()\" [formGroup]=\"updatedUserForm\">\n        <mat-card-title>\n            <h1>Update User</h1>\n        </mat-card-title>\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" formControlName=\"username\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Jerry\" formControlName=\"lastName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <div>\n                <mat-label>Role</mat-label>\n                <br>\n                <mat-select [formControl]=\"updatedUserForm.controls['role']\">\n                    <mat-option *ngFor=\"let role of filteredRolesDataSource\" [value]=\"role.text\">{{ role.text }}</mat-option>\n                </mat-select>\n            </div>\n            <mat-dialog-actions>\n                <button mat-button mat-dialog-close>Cancel</button>\n                <button type=\"submit\"mat-button mat-dialog-close>Update User</button>\n            </mat-dialog-actions>\n            <br>\n            <br>\n        </form>\n    </mat-card-content>\n    </mat-card>","/**\n * \n * ================================\n * ; Title: Invoice Dialog\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Component dialog responsible for invoice summary\n * ================================\n * \n */\n\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-invoice-review-dialog',\n  templateUrl: './invoice-review-dialog.component.html',\n  styleUrls: ['./invoice-review-dialog.component.css']\n})\nexport class InvoiceReviewDialogComponent implements OnInit {\ninvoice: any;  \ndiscount: any;\n\n  constructor(\n    private dialogRef: MatDialogRef<InvoiceReviewDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) { \n      this.invoice = data.invoice;\n      this.discount = data.discount;\n      console.log(this.discount);\n        }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-content>\n<p><span class=\"title\">Order Details</span><span style=\"float: right;\">Order Date:<br />{{invoice.orderDate | date:'medium'}}</span></p>\n<mat-divider></mat-divider>\n<br />\n      <div fxLayout=\"column\">\n              <div fxFlex>\n                <div fxLayout=\"row\">\n                  <div fxFlex>\n                <strong>Line Items:</strong>\n                <ul *ngFor=\"let item of invoice.lineItems\">\n                    <li>\n                    Title: {{item.title}}<br />Amount: {{item.price | currency}}\n                  </li>\n                  </ul>\n                  <strong>Line Item Total:</strong><br /> {{invoice.lineItemTotal | currency}}\n                </div>\n                <div fxFlex>\n                  <div fxFlex>\n                    <ul>\n                      <li><strong>Parts Amount:</strong><br /> {{invoice.partsAmount | currency}}</li>\n                      <li><strong>Labor @ $50 per/hour:</strong><br /> {{invoice.laborAmount | currency}}</li>\n                  </ul>\n                  </div>\n                </div>\n                </div>\n            </div>\n    </div><br />\n    <span style=\"text-align: center;\"><strong>10% off automatically applied!! </strong></span>\n    <div align=\"end\">\n      <ul>\n        <li><h3>----Summary----</h3></li>\n        <li><strong>Parts & Labor Total:</strong><br /> {{invoice.laborAmount + invoice.partsAmount | currency}}</li>\n        <li><strong>Line Item Total:</strong><br /> {{invoice.lineItemTotal | currency}}</li>\n        <li><strong>Subtotal:</strong><br /> {{invoice.lineItemTotal + invoice.laborAmount + invoice.partsAmount| currency}}</li>\n        <li><strong style=\"color: green;\">Discount:</strong><br />-{{discount | currency}}\n        </li>\n      </ul>\n    </div>\n<h3 align=\"end\" style=\"font-weight: 600; text-decoration: underline;\">Grand Total: {{invoice.total | currency}}</h3>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n  <button mat-raised-button matDialogClose=\"confirm\" color=\"primary\" cdkFocusInitial>Submit Order</button>\n</mat-dialog-actions>\n</mat-card-content>\n</mat-card>\n","/**\n * \n * ================================\n * ; Title: contact.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for contact page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"outerContainer\">\n    <div fxFlex>\n        <img src=\"./assets/contact2.png\" class=\"logo\">\n        <h1>Contact Us</h1><br />\n     <!--Image source for royaltyFreeImg.png\n        Black Line Background - Unlimited Download. cleanpng.com. (n.d.). Retrieved September 07, 2020, from https://www.cleanpng.com/png-computer-icons-certified-financial-planner-wrenche-2330581/\n      -->\n    </div>\n<div fxFlex>\n<mat-card>\n<mat-card-content>\n<div fxLayout=\"row\" fxLayoutGap=\"10px\">\n    <div fxFlex >\n       <mat-card>\n           <mat-card-content>\n               <h2>Options</h2>\n               <ul>\n                   <li>\n                    <span class=\"material-icons\">\n                        phone\n                        </span>\n                   </li>\n                   <li class=\"strong\">\n                       Phone:\n                   </li>\n                   <li>\n                    <a href=\"tel:402-555-3535\">402-555-4545</a>\n                   </li><br />\n\n                   <li>\n                    <span class=\"material-icons\">\n                        email\n                        </span>\n                   </li>\n                   <li class=\"strong\">\n                       Email:\n                   </li>\n                   <li>\n                    <a href = \"mailto: bob@bcrs.com\">bob@bcrs.com</a>\n                   </li>\n               </ul>\n           </mat-card-content>\n       </mat-card>\n    </div>\n    <div fxFlex>\n       <mat-card>\n           <mat-card-content>\n               <h2>Location</h2>\n               <ul>\n                   <li><span class=\"material-icons\">\n                    storefront\n                    </span></li>\n                   <li class=\"strong\">Address</li>\n                   <a href=\"https://goo.gl/maps/bN2ek2FugCCSoBAc8\">\n                   <li>123 test st</li>\n                   <li>Omaha, NE 68104</li>\n                   <li>Unidted States</li>\n                </a>\n               </ul>\n           </mat-card-content>\n       </mat-card>\n    </div>\n</div>\n</mat-card-content>\n</mat-card>\n</div>\n</div><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","/**\n * \n * ================================\n * ; Title: security-question.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/24/2020\n * ; Description: component responsible for interfacing with our apis for the security-question\n *  component\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecurityQuestionService {\n\n  constructor(private http: HttpClient) { }\n\n  \n  /**\n   * \n   * Find All Security Questions\n   * \n   */\n    findAllSecurityQuestions(): Observable<any> {\n      return this.http.get(`/api/securityQuestions/`);\n    }\n   /**\n   * \n   * Find Security Question by ID\n   * \n   */\n\n  findSecurityQuestionById(_id: string): Observable<any> {\n    return this.http.get('/api/securityQuestions/' + _id);\n  }\n  \n\n   /**\n    * \n    * Create Security Question\n    * \n    */\n\n createSecurityQuestion(questionId: string): Observable<any> {\n  return this.http.post('/api/securityQuestions/', {\n    questionId\n  })\n}\n\n  /**\n   * \n   * Update Security Question\n   * \n   */\n\n   updateSecurityQuestion(_id: string, questionId: string, isDisabled: boolean): Observable<any> {\n   return this.http.put('/api/securityQuestions/'+ _id, {\n    questionId,\n    isDisabled\n    })\n  }\n\n\n\n\n  /**\n   * \n   * Delete Security Question\n   * \n   */\n\n   deleteSecurityQuestion(questionId: string): Observable<any> {\n     return this.http.patch('/api/securityQuestions/' + questionId, {\n       //isDisabled: true\n       questionId\n     });\n   }\n\n}\n\n\n","/**\n * \n * ================================\n * ; Title: not-found.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for not found page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"./assets/profile.png\">\n<!--Royalty free image obtained from here, then altered by James. https://www.google.com/search?q=profile+placeholder+logo&tbm=isch&ved=2ahUKEwjBypCa4OTsAhUIOK0KHVHaDswQ2-cCegQIABAA&oq=profile+placeholder+logo&gs_lcp=CgNpbWcQAzoECCMQJzoGCAAQBRAeOgYIABAIEB46AggAUNpxWKR6YNN8aABwAHgAgAGOAYgBjQSSAQM1LjKYAQCgAQGqAQtnd3Mtd2l6LWltZ8ABAQ&sclient=img&ei=CHOgX8GmHYjwtAXRtLvgDA&bih=879&biw=1813#imgrc=8K7kbUE95iuy1M-->\n    <h1>Profile </h1>\n<div fxLayout=\"column\" class=\"outerContainer\">\n    <mat-card>\n        <mat-card-content>\n            <div fxFlex class=\"childColumnContainers\">\n                <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n                    <div fxFlex>\n                        <mat-card>\n                            <mat-card-content>\n                                <app-userdetails></app-userdetails>\n                            </mat-card-content>\n                    </mat-card>\n                    </div>\n                    <div fxFlex>\n                        <mat-card>\n                            <mat-card-content>\n                                <app-update-account></app-update-account>\n                            </mat-card-content>\n                        </mat-card>\n                    </div>\n                </div>\n            </div>\n        </mat-card-content>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { PostDialogComponent } from '../app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component';\nimport { PutDialogComponent } from '../app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component';\nimport { PatchDialogComponent } from '../app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component';\nimport { RolemanagementComponent } from './pages/administration/rolemanagement/rolemanagement.component';\nimport { CatalogmanagementComponent } from './pages/administration/catalogmanagement/catalogmanagement.component';\nimport { PurchasegraphComponent } from './pages/administration/purchasegraph/purchasegraph.component';\nimport { SecurityquestionmanagementComponent } from './pages/administration/securityquestionmanagement/securityquestionmanagement.component';\nimport { UserManagementComponent } from '../app/pages/administration/usermanagement/usermanagement.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DeleteRecordDialogComponentComponent } from './pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from './pages/administration/dialogs/create-role-dialog/create-role-dialog.component';\nimport { CreateSecurityquestionDialogComponent } from './pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component';\nimport { DeleteSecurityquestionDialogComponent } from './pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component';\nimport { UpdateRoleDialogComponent } from './pages/administration/dialogs/update-role-dialog/update-role-dialog.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MoreVertDialogComponent } from './pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CreateCatalogItemComponent } from './pages/administration/dialogs/create-catalog-item/create-catalog-item.component';\nimport { UpdateCatalogItemComponent } from './pages/administration/dialogs/update-catalog-item/update-catalog-item.component';\nimport { DeleteCatalogItemComponent } from './pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component';\nimport { UpdateSecurityquestionDialogComponent } from './pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component';\nimport { CreateAccountComponent } from './pages/create-account/create-account.component';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { ErrorInterceptor } from './shared/error.interceptor';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { CreateorderComponent } from './pages/home/createorder/createorder.component';\nimport { OrderhistoryComponent } from './pages/home/orderhistory/orderhistory.component';\nimport { DatePipe } from '@angular/common';\nimport { VerifyUsernameComponent } from './pages/reset-password/verify-username/verify-username.component';\nimport { VerifySecurityQuestionsComponent } from './pages/reset-password/verify-security-questions/verify-security-questions.component'; \nimport { ResetPasswordComponent } from './pages/reset-password/reset-password/reset-password.component';\nimport { ViewtransactiondialogComponent } from './pages/home/dialogs/orderhistory/viewtransactiondialog/viewtransactiondialog.component';\nimport { ViewAllTransactionsDialogComponent } from './pages/home/dialogs/orderhistory/view-all-transactions-dialog/view-all-transactions-dialog.component';\nimport { ResetPasswordProcessComponent } from './pages/reset-password/reset-password-process/reset-password-process.component';\nimport { UserdetailsComponent } from './pages/profile/userdetails/userdetails.component';\nimport { UpdateAccountComponent } from './pages/profile/update-account/update-account.component';\nimport { ChangePasswordComponent } from './pages/profile/dialogs/change-password/change-password.component';\nimport { SuccessComponent } from './pages/profile/dialogs/success/success.component';\nimport { ChangeSecurityQuestionsComponent } from './pages/profile/dialogs/change-security-questions/change-security-questions.component';\nimport { UpdateContactDialogComponent } from './pages/profile/dialogs/update-contact-dialog/update-contact-dialog.component';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { InvoiceReviewDialogComponent } from './pages/home/dialogs/invoice-review-dialog/invoice-review-dialog.component';\nimport { PurchaseHistoryGraphComponent } from './pages/home/purchase-history-graph/purchase-history-graph.component';\nimport { ChartModule } from 'primeng/chart';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    SigninComponent,\n    AdministrationComponent,\n    ProfileComponent,\n    ContactComponent,\n    AboutComponent,\n    PostDialogComponent,\n    PutDialogComponent,\n    PatchDialogComponent,\n    RolemanagementComponent,\n    CatalogmanagementComponent,\n    PurchasegraphComponent,\n    SecurityquestionmanagementComponent,\n    UserManagementComponent,\n    DeleteRecordDialogComponentComponent,\n    CreateRoleDialogComponent,\n    CreateSecurityquestionDialogComponent,\n    DeleteSecurityquestionDialogComponent,\n    UpdateRoleDialogComponent,\n    MoreVertDialogComponent,\n    CreateCatalogItemComponent,\n    UpdateCatalogItemComponent,\n    DeleteCatalogItemComponent,\n    UpdateSecurityquestionDialogComponent,\n    CreateAccountComponent,\n    ErrorComponent,\n    NotfoundComponent,\n    CreateorderComponent,\n    OrderhistoryComponent,\n    VerifyUsernameComponent,\n    VerifySecurityQuestionsComponent,\n    ResetPasswordComponent,\n    ViewtransactiondialogComponent,\n    ViewAllTransactionsDialogComponent,\n    ResetPasswordProcessComponent,\n    UserdetailsComponent,\n    UpdateAccountComponent,\n    ChangePasswordComponent,\n    SuccessComponent,\n    ChangeSecurityQuestionsComponent,\n    UpdateContactDialogComponent,\n    InvoiceReviewDialogComponent,\n    PurchaseHistoryGraphComponent\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatListModule,\n    MatTableModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatStepperModule,\n    ScrollingModule,\n    MatCheckboxModule,\n    ChartModule\n  ],\n  providers: [ {\n    provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true\n  },\n  CookieService,\n  DatePipe  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * \n * ================================\n * ; Title: notfound.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling 400 errors\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n    <div fxFlex>\n        <img src=\"./assets/404.png\" class=\"logo\" routerLink=\"/\">\n    </div><br /><br />\n    <div fxFlex>\n        <p>\n            The link you followed is probably broken or this page has been removed.\n        </p><br />\n        <p>\n            Click on the 404 to go home\n        </p>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: Error Interceptor.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: file is resopnsible for intercepting 500 server errors that are \n * returned to the client.\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private router: Router){\n\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(catchError(err => {\n            if ([404].indexOf(err.status) !== -1) {\n                this.router.navigate(['/session/404']);\n            }\n\n            if ([500].indexOf(err.status) !== -1){\n                this.router.navigate(['/session/500']);\n            }\n\n            //otherwise, catch error and trhow\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","/**\n * \n * ================================\n * ; Title: user admin service\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Brendan Mulhern\n * ; Date: 11/9/2020\n * ; Description: User Admin Service\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../interfaces/user.interface'\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserSignUpService {\n\n  constructor(private http: HttpClient) { }\n  getSecurityQuestions(): Observable<User[]> {\n    return this.http.get<User[]>('/api/securityQuestions')\n  }  \n  postUsers(newUser): Observable<User> {\n    return this.http.post<User>('/api/users', newUser)\n  }\n  signIn(data): Observable<User> {\n    return this.http.post<User>('/api/session/signin', data)\n  }\n}\n","/**\n * \n * ================================\n * ; Title: purchasegraph.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 11/6/2020\n * ; Description: component responsible for admin purchase graph\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { PurchasehistoryService } from '../../services/purchasehistory.service';\nimport { CatalogService } from './../services/catalog.service';\n\n@Component({\n  selector: 'app-purchasegraph',\n  templateUrl: './purchasegraph.component.html',\n  styleUrls: ['./purchasegraph.component.css']\n})\nexport class PurchasegraphComponent implements OnInit {\n  purchases: any;\n  data: any;\n  itemCount = [];\n  labels = [];\n\n  constructor(private PurchasehistoryService: PurchasehistoryService) { \n\n    this.PurchasehistoryService.findPurchasesbyServiceGraph().subscribe(res=> {\n      this.purchases = res['data'];\n      console.log(this.purchases);\n  \n  for (const item of this.purchases) {\n    this.labels.push(item._id.title);\n    this.itemCount.push(item.count);\n  }\n\n  this.data = {\n    labels: this.labels,\n    datasets: [\n      {\n      backgroundColor: [\n        '#ED0A3F',\n        '#FF8833',\n        '#5FA777',\n        '#0066CC',\n        '#6B3FA0',\n        '#AF593E',\n        '#6CDAE7',\n        '#F1B60E'\n      ],\n      hoverBackgroundColor: [\n        '#ED0A3F',\n        '#FF8833',\n        '#5FA777',\n        '#0066CC',\n        '#6B3FA0',\n        '#AF593E',\n        '#6CDAE7',\n        '#F1B60E'\n      ],\n      data: this.itemCount\n    },\n    ]\n  };\n\n  console.log('Data object');\n  console.log(this.data);\n  })\n}\n\n    /**\n       * Find All purchases\n       */\n  \n\n  ngOnInit(): void {\n  }\n\n   /**\n   * \n   * SECTION FOR PURCHASES APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n  \n\n}\n","<mat-card>\n    <mat-card-content>\n        <h1 style=\"font-weight: lighter; text-align: center\">Purchases by Service</h1>\n        <p-chart type='pie' [data]='data'></p-chart>\n    </mat-card-content>\n</mat-card>\n","/**\n * \n * ================================\n * ; Title: role.guard.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 11/5/2020\n * ; Description: Role Guard\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Observable } from 'rxjs';\n//import { RoleService} from '../pages/administration/services/role.service';\nimport { UserprofileService } from '../pages/services/userprofile.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  \n  //constructor(private router: Router, private cookieService: CookieService, private roleService: RoleService) {}\n  constructor(private router: Router, private cookieService: CookieService, private UserprofileService: UserprofileService) {}\n  \n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot)\n    {\n     // return this.roleService.findUserRole(this.cookieService.get('sessionuser')).pipe(map(res =>\n     return this.UserprofileService.getUserRole(this.cookieService.get('sessionuser')).pipe(map(res =>\n        {\n          if (res['data'].role === 'admin')\n          {\n            return true;\n          }\n          else{\n            //this.router.navigate(['/']);\n            return false;\n          }\n    }));\n  }\n  \n}\n\n","/**\n * \n * ================================\n * ; Title: post-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User post dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { UserCreationService } from '../../services/user-creation.service'\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n  createUserForm: any\n  roles: any\n  selected: any\n  role: any\n  rolesDataSource;\n  filteredRolesDataSource;\n\n  constructor(private userCreationService: UserCreationService, private fb: FormBuilder, private http: HttpClient) { }\n\n\n  ngOnInit() {\n    this.userCreationService.get().subscribe(res => {\n      this.roles = res['data']\n    })\n\n\n    this.userCreationService.getAllUserRoles().subscribe(res =>{\n      console.log(res.data);\n      //get all the roles and set it to our initial data array\n      this.rolesDataSource = res.data;\n\n      //Initialize the new array, filter out the disabled ones, and pushed the active ones into the new array\n      this.filteredRolesDataSource = [];\n      for (let role of this.rolesDataSource){\n        if(role.isDisabled !== true){\n          this.filteredRolesDataSource.push(role);\n        }\n      }\n      //console.log(this.filteredSecurityQuestionsDataSource);\n    })\n\n\n    this.createUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])],\n      role: [null, Validators.required]\n    })\n  }\n  createUser() {\n    let newUser = {\n      username: this.createUserForm.get('username').value,\n      password: this.createUserForm.get('password').value,\n      firstName: this.createUserForm.get('firstName').value,\n      lastName: this.createUserForm.get('lastName').value,\n      address: this.createUserForm.get('address').value,\n      email: this.createUserForm.get('email').value,\n      phoneNumber: this.createUserForm.get('phoneNumber').value,\n      role: this.createUserForm.controls.role.value\n    }\n    this.userCreationService.post(newUser).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"POST SUCCESS\")\n    }) \n    this.createUserForm.reset();\n  }\n  cancel() {\n\n  }\n}\n","<div fxLayout=\"column\">\n<mat-card class=\"mat-elevation-z8\">\n    <mat-card-title>Create User</mat-card-title>\n    <br />\n        <form (ngSubmit)=\"createUser()\" [formGroup]=\"createUserForm\">\n        <mat-card-content>\n            <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. rjackson25\" formControlName=\"username\" />\n            </mat-form-field>\n     \n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n            \n                <input matInput placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n      \n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n        \n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. Jerry\" formControlName=\"lastName\" />\n            </mat-form-field>\n       \n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n         \n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n       \n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <div>\n                <mat-label>Role</mat-label>\n                <br>\n                <mat-select [value]=\"selected\" [formControl]=\"createUserForm.controls['role']\">\n                    <mat-option *ngFor=\"let role of filteredRolesDataSource\" [value]=\"role.text\">{{ role.text }}</mat-option>\n                </mat-select>\n            </div>\n        </div>\n        </mat-card-content>\n       \n            <mat-dialog-actions align=\"end\">\n                <button mat-raised-button (click)=\"cancel()\" color=\"primary\" mat-dialog-close>Cancel</button>\n                <button type=\"submit\" mat-raised-button color=\"primary\" mat-dialog-close>Create User</button>\n            </mat-dialog-actions>\n            <br />\n        </form>\n    </mat-card>\n\n</div>","/**\n * \n * ================================\n * ; Title: deleteRecordDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete-record-dialog-component',\n  templateUrl: './delete-record-dialog-component.component.html',\n  styleUrls: ['./delete-record-dialog-component.component.css']\n})\nexport class DeleteRecordDialogComponentComponent implements OnInit {\n\n  recordId: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n  constructor(private dialogRef: MatDialogRef<DeleteRecordDialogComponentComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.recordId = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n<div mat-dialog-content>\n    <p> {{ dialogBody }}</p>\n\n</div>\n\n\n<hr /> \n\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n    <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\">Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: securityquestionmanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/25/2020\n * ; Description: component responsible for admin security question page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { SecurityQuestionService } from '../services/security-question.service';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\nimport { FormGroup } from '@angular/forms';\nimport { DeleteSecurityquestionDialogComponent } from '../dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component';\nimport { CreateSecurityquestionDialogComponent } from '../dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component';\nimport { UpdateSecurityquestionDialogComponent } from '../dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-securityquestionmanagement\",\n  templateUrl: \"./securityquestionmanagement.component.html\",\n  styleUrls: [\"./securityquestionmanagement.component.css\"],\n})\nexport class SecurityquestionmanagementComponent implements OnInit {\n  securityQuestions: SecurityQuestion[];\n  questionId: string;\n  displayedColumns: string[] = [\"question\", \"status\", \"action\"];\n\n  constructor(\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private securityQuestionService: SecurityQuestionService\n  ) {\n    /**\n     * Find all Security Questions\n     */\n\n    this.securityQuestionService.findAllSecurityQuestions().subscribe(\n      (res) => {\n        this.securityQuestions = res[\"data\"];\n        //console.log(res);\n        //console.log(this.securityQuestionService);\n      },\n      (err) => {\n       // console.log(err);\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   *\n   * SECTION FOR SECURITY QUESTION API CALLS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n\n  //createSecurityQuestionDialog\n  createSecurityQuestion(){\n    const dialogRef = this.dialog.open(CreateSecurityquestionDialogComponent, {\n      data: {\n        \n      },\n      disableClose: true,\n      width: \"800px\"\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'create'){\n\n       this.securityQuestionService.findAllSecurityQuestions().subscribe(res => {\n         this.securityQuestions = res['data'];\n         //console.log(this.securityQuestions);\n       }, err => {\n         console.log(err);\n       })\n      }\n    })\n  }\n\n\n\n  //updateSecurityQuestionDialog\n\n updateSecurityQuestion(data){\n  console.log(data);\n  const dialogRef = this.dialog.open(UpdateSecurityquestionDialogComponent, {\n    data: {\n      data,\n      dialogHeader: 'Update Security Question'\n    },\n    disableClose: true,\n    width: '800px'\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    if(result === 'update'){\n      \n      this.securityQuestionService.findAllSecurityQuestions().subscribe(res => {\n        this.securityQuestions = res['data'];\n        console.log(this.securityQuestions);\n      }, err => {\n        console.log(err);\n      })\n    }\n  })\n}\n\n\n\n  //deleteSecurityQuestionDialog\n\n  deleteSecurityQuestion(questionId){\n  const dialogRef = this.dialog.open(DeleteSecurityquestionDialogComponent, {\n    data: {\n      questionId,\n      dialogHeader: 'Disabling Question',\n      dialogBody: `Are you sure you want to disable security question ${questionId}?`\n    },\n    disableClose: true,\n    width: '800px'\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    if (result == 'confirm') {\n      console.log(questionId)\n      this.securityQuestionService.deleteSecurityQuestion(questionId).subscribe(res => {\n        console.log('Security question successfully disabled')\n        this.securityQuestionService.findAllSecurityQuestions().subscribe(res=> {\n          this.securityQuestions = res['data'];\n          console.log(this.securityQuestions);\n        }, err => {\n          console.log(err);\n        })\n      })\n    }\n  })\n\n}\n  \n}\n","<!--JB moved this p tag and button in here for grouping purposes-->\n<p>Security Questions<button mat-button class=\"crudButton\" (click)=\"createSecurityQuestion()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p> \n\n\n<table mat-table [dataSource]=\"securityQuestions\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"question\">\n    <th mat-header-cell *matHeaderCellDef> Question </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.questionId}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"action\">\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"updateSecurityQuestion(element)\">\n          <mat-icon>edit</mat-icon>\n          <span>Edit</span>\n        </button>\n        <button mat-menu-item (click)=\"deleteSecurityQuestion(element._id)\">\n          <mat-icon>delete</mat-icon>\n          <span>Disable</span>\n        </button>\n      </mat-menu>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","/**\n * \n * ================================\n * ; Title: patch-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User patch dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\nimport { UserCreationService } from '../../services/user-creation.service'\nimport { User } from '../../interfaces/user.interface'\n\n@Component({\n  selector: 'app-patch-dialog',\n  templateUrl: './patch-dialog.component.html',\n  styleUrls: ['./patch-dialog.component.css']\n})\nexport class PatchDialogComponent implements OnInit {\n  user: User\n  constructor(private userCreationService: UserCreationService, private cookieService: CookieService, private http: HttpClient) { }\n\n  ngOnInit() { }\n  cancel() {\n\n  }\n  delete() {\n    let id = this.cookieService.get('id')\n    this.userCreationService.getUserById(id).subscribe(res => {\n      if (res) {\n        this.user = res['data']\n      } else {\n        console.log(\"No User Found\")\n      }\n    })\n    this.userCreationService.patch(id, this.user).subscribe(err => {\n      if (err) console.log(err)\n     else console.log(\"DELETE Success\")\n   }) \n  }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title class=\"text-center\">\n            <h1>Delete User</h1>\n        </mat-card-title>\n        <mat-card-actions>\n            <button mat-button (click)=\"cancel()\" mat-dialog-close>Cancel</button>\n            <button mat-button (click)=\"delete()\" mat-dialog-close>Delete User</button>\n        </mat-card-actions>\n    </mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: usermanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User mgmt component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PostDialogComponent } from '../dialogs/user-admin-post-dialog/post-dialog.component'\nimport { PutDialogComponent } from '../dialogs/user-admin-put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../dialogs/user-admin-patch-dialog/patch-dialog.component'\nimport { RoleService } from '../services/role.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MoreVertDialogComponent } from '../dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component'\nimport { UserCreationService } from '../services/user-creation.service'\n@Component({\n  selector: 'app-usermanagement',\n  templateUrl: './usermanagement.component.html',\n  styleUrls: ['./usermanagement.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n  displayedColumns: any = [ 'username', 'fistName', 'lastName', 'phoneNumber', 'address','isDisabled', 'actions', 'roles']\n\n  constructor(private userCreationService: UserCreationService, public dialog: MatDialog, private http: HttpClient, private roleService: RoleService, private cookieService: CookieService) { }\n\n\n  ngOnInit() {\n    //Begin Brendans code\n    this.userCreationService.get().subscribe(data => {\n      this.users = data['data'];\n    })\n    //end Brendans code\n   }\n\n   /**Begin Brendans code */\n   post() {\n     const dialogRef = this.dialog.open(PostDialogComponent, {\n      disableClose: true,\n      width:'800px'});\n      //added by JB 10/28. After user is submitted, refresh the user list.\n      dialogRef.afterClosed().subscribe(result => {\n        this.userCreationService.get().subscribe(data => {\n      this.users = data['data'];\n    })\n      })\n   }\n  options(user) {\n    this.cookieService.set('id', user._id)\n    this.dialog.open(MoreVertDialogComponent)\n  }\n  }","<p>User Management\n        <button mat-button id=\"post\" (click)=\"post()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p>\n    <!--- Username Column -->\n    <table mat-table [dataSource]=\"users\" class=\"mat-elevation-z8\" >\n        <ng-container matColumnDef=\"username\">\n            <th mat-header-cell *matHeaderCellDef>Username</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.username }}\n            </td>\n        </ng-container>\n        <!--- First Name Column -->\n        <ng-container matColumnDef=\"fistName\">\n            <th mat-header-cell *matHeaderCellDef>First Name</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.firstName }}\n            </td>\n        </ng-container>\n        <!--- Last Name Column -->\n        <ng-container matColumnDef=\"lastName\">\n            <th mat-header-cell *matHeaderCellDef>Last Name</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.lastName }}\n            </td>\n        </ng-container>\n        <!--- Phone Number Column -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th mat-header-cell *matHeaderCellDef>Phone Number</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.phoneNumber }}\n            </td>\n        </ng-container>\n        <!--- Address Column -->\n        <ng-container matColumnDef=\"address\">\n            <th mat-header-cell *matHeaderCellDef>Address</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.address }}\n            </td>\n        </ng-container>\n        <!--- isDisabled Column -->\n        <ng-container matColumnDef=\"isDisabled\">\n            <th mat-header-cell *matHeaderCellDef>isDisabled?</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.isDisabled }}\n            </td>\n        </ng-container>\n        <!--- Roles Column -->\n        <ng-container matColumnDef=\"roles\">\n            <th mat-header-cell *matHeaderCellDef>Role</th>\n            <td mat-cell *matCellDef=\"let user\">{{ user.role }}</td>\n        </ng-container>\n        <!--- Actions Column -->\n        <ng-contaoner matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef></th>\n                <td mat-cell *matCellDef=\"let user\">\n                    <button mat-button (click)=\"options(user)\"><mat-icon>more_vert</mat-icon></button>\n                </td>\n        </ng-contaoner>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>","/**\n * \n * ================================\n * ; Title: verify-username.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/31/2020\n * ; Description: component for managing the verify username\n * ================================\n * \n */\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { VerifySecurityQuestionsComponent } from '../verify-security-questions/verify-security-questions.component';\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\nimport { ViewChild } from '@angular/core';  //add\n\n\n@Component({\n  selector: 'app-verify-username',\n  templateUrl: './verify-username.component.html',\n  styleUrls: ['./verify-username.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class VerifyUsernameComponent implements OnInit {\n  form1: FormGroup;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n /*\n//begin add\n  @ViewChild(VerifyUsernameComponent) stepOneComponent: VerifyUsernameComponent;\n  @ViewChild(VerifySecurityQuestionsComponent) stepTwoComponent: VerifySecurityQuestionsComponent;\n  @ViewChild(ResetPasswordComponent) stepThreeComponent: ResetPasswordComponent;\n\n  get frmStepOne() {\n     return this.stepOneComponent ? this.stepOneComponent.form1 : null;\n  }\n\n  get frmStepTwo() {\n     return this.stepTwoComponent ? this.stepTwoComponent.form2 : null;\n  }\n\n  get frmStepThree() {\n     return this.stepThreeComponent ? this.stepThreeComponent.form3 : null;\n  }\n//end add\n*/\n\n\n  constructor(private http: HttpClient, private fb: FormBuilder, private router: Router, private _snackBar: MatSnackBar) { \n  }\n  \n  ngOnInit() {\n\n    this.form1=this.fb.group({\n      username: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n\n\n  validateUsername() {\n    const username = this.form1.controls['username'].value;\n    console.log(username);\n\n    this.http.get('/api/session/verify/users/' + username).subscribe (res => {\n      //console.log(res['data'].username);\n      console.log(res);\n      //if we get data back, route to the next step\n      if (res['data']) {\n        this.router.navigate(['/session/verify-security-questions'], {queryParams: {username: username}, skipLocationChange: true});\n        //else if there is not res data or its null, we'll handle it here and in the err\n      } else if(!res['data']){\n        this.errorMessage = 'Invalid username or password. Try again.';\n      this.openSnackBar(this.errorMessage);\n      console.log('first error fired');\n      }\n    }, err => {\n      this.errorMessage = 'Invalid username or password. Try again.';\n      this.openSnackBar(this.errorMessage);\n      console.log(err);\n    });\n  }\n\n  \n    openSnackBar(errorMessage: string) {\n      this._snackBar.open(errorMessage, 'Close', {\n        duration: 7000,\n        verticalPosition: 'top',\n        panelClass: 'error'\n      });\n    \n    }\n\n}\n","<!--Outer container-->\n\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <h1>Reset Password</h1>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n                <!--inner container-->\n                <div fxLayout=\"column\" class=\"singinInnerContainer\">\n                    <!--LOGO-->\n                    <div fxFlex>\n                        <img src=\"./assets/logo.png\" class=\"logo\">\n                    </div>\n                    <h2>Enter Username</h2>\n                    <!--Stepper\n                    <mat-horizontal-stepper #stepper>\n                        <mat-step [stepControl]=\"form1\">-->\n\n                    <!--form-->    \n                    <form [formGroup]=\"form1\" (ngSubmit)=\"validateUsername()\" #validateUsernameForm>\n                      <!--  <ng-template matStepLabel>Verify Username</ng-template>-->\n\n                        <mat-card-content fxLayout=\"column\">\n                            <mat-form-field fxFlex>\n                                <input matInput type=\"text\" [formControl]=\"form1.controls['username']\"\n                                    placeholder=\"Example: bobsmith\">\n                            </mat-form-field>\n                            <br><br>\n                            <div fxLayoutAlign=\"end\" fxLayoutGap=\"10px\">\n                                <button type=\"button\" mat-raised-button color=\"primary\" routerLink=\"/session/signin\">Cancel</button>\n                                <button type=\"submit\" \n                                [disabled]=\"!form1.valid\"\n                                mat-raised-button color=\"primary\">Next</button>\n                            </div>\n                        </mat-card-content>\n                    </form>\n\n              <!--  </mat-step>\n            </mat-horizontal-stepper>-->\n\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n\n\n","/**\n * \n * ================================\n * ; Title: about.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for about page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"outerContainer\">\n        <div fxFlex>\n            <img src=\"./assets/about2.png\" class=\"logo\">\n            <h1>About Us</h1><br />\n            <!--Original royalty free image provided from https://www.pinclipart.com/picdir/middle/2-24114_wheel-clip-art-download-gear-icon-royalty-free.png-->\n        </div>\n    <div fxFlex>\n<mat-card>\n<mat-card-content>\n    <div fxLayout=\"column\">\n        <div fxFlex>\n            <img src=\"./assets/bob.jpg\" style=\"float: left; width: 200px; padding-right: 10px;\">\n            <img src=\"./assets/index.jpg\"style=\"float: right; width: 200px;  padding-left: 10px;\">\n            <!--Royalty Free Images From https://www.dreamstime.com-->\n            <br />\n            <p><strong>Bob's Computer Repair Shop has been in existence since 2020.</strong> It was founded primary for the reason being that people needed their computers fixed. Bob has the technical training requisite to be able to deliver a quality computer fix. Services offered include the fixing of broken computers; fixing of broken routers and phones. Bob really has a great skill of fixing things and is able to help you today! If you ever are in need of a computer fix or find yourself in a computer bind Bob will be there to save you time and money! Bob has the requisite skills in order to fix your computer!</p>\n            <mat-divider [inset]=\"true\"></mat-divider>\n            <p>How did Bob get into this business? It all started when Bob set out to build his own computer for online gaming. During this process, he sourced parts online and compiled the computer, piece by piece. It was during this project that Bob realized that he really enjoyed creating and repairing hardware. Since Bob enjoyed this activity so much, he began to repair all his friends devices. It got to the point where Bob was repairing devices almost 7 days a week. At this point, Bob came to the realization that he needed to make this business legitimate.  Fast forward a few years later, Bob now has his own company, Bob's Computer Repair Shop. </p>\n            <mat-divider [inset]=\"true\"></mat-divider>\n            <p>Bob has been in the Technology Business for 10 Years and has seen the times evolve as technology has changed. Not many people have the skills Bob has in order to fix computers. Bob has a degree in Computer Fixing from a renowned university. <strong>Bob has fixed over 1000 computers in his time as a Computer Technician.</strong></p>\n        </div>\n    </div>\n</mat-card-content>\n</mat-card>\n</div>\n</div><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","/**\n * \n * ================================\n * ; Title: create-securityquestion-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/26/2020\n * ; Description: Create Security Question Dialog Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SecurityQuestionService } from '../../services/security-question.service';\n\n\n\n@Component({\n  selector: 'app-create-securityquestion-dialog',\n  templateUrl: './create-securityquestion-dialog.component.html',\n  styleUrls: ['./create-securityquestion-dialog.component.css']\n})\nexport class CreateSecurityquestionDialogComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private SecurityQuestionService: SecurityQuestionService, private http: HttpClient, private dialogRef: MatDialogRef<CreateSecurityquestionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) { }\n\n    questionId: string;\n    createSecurityQuestionForm: FormGroup;\n    enteredQuestionId: any [];\n\n\n  ngOnInit(): void {\n    this.createSecurityQuestionForm = this.fb.group({\n      questionId: ['', Validators.required]\n    })\n  }\n\n createSecurityQuestion(){\n  \n  const questionId = this.createSecurityQuestionForm.controls.questionId.value;\n\n  console.log(questionId);\n  this.SecurityQuestionService.createSecurityQuestion(questionId).subscribe( res => {\n    questionId\n  }, err => {\n    console.log(err)\n    alert(`There was an issue creating the security question. Please ensure the question doesn't already exist. If this issue is reoccurring, please contact the system admin.`);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Security Question</mat-card-title>\n        <br />\n        <form [formGroup]=\"createSecurityQuestionForm\" (ngSubmit)=\"createSecurityQuestion()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"questionId\" \n                               matInput\n                               placeholder=\"Example: What was your first pet?\"\n                               formControlName=\"questionId\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createSecurityQuestionForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: catalog.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: service for catalog api requests\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Catalog } from '../interfaces/catalog.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n     * \n     * Find All Items\n     * \n     */\n    findAllCatalogItems(): Observable<any>{\n      return this.http.get('/api/catalog/');\n    }\n\n    /**\n     * \n     * Find Item By Id\n     * \n     */\n    findCatalogItemById(catalogId: string): Observable<any>{\n      return this.http.get(`/api/catalog/${catalogId}`)\n    }\n\n    /**\n     * \n     * Create Item\n     * \n     */\n    createCatalogItem(title: string, price: number): Observable<any>{\n      return this.http.post('/api/catalog/',{\n        title,\n        price\n      })\n    }\n\n    /**\n     * \n     * Update Item\n     * \n     */\n    updateCatalogItem(catalogItemId: string, title: string, price:number, isDisabled: boolean): Observable<any>{\n      return this.http.put(`/api/catalog/${catalogItemId}/update`,{\n        title,\n        price,\n        isDisabled\n      })\n    }\n\n    /**\n     * \n     * Delete Item\n     * \n     */\n    deleteCatalogItem(catalogId: string): Observable<any>{\n      return this.http.patch(`/api/catalog/${catalogId}`,{\n        //nothing needs to be passed since we have the disable written at the api level\n      })\n    }\n}\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserprofileService } from '../../pages/services/userprofile.service';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  year: number = Date.now();  \n\n  username: any = this.cookieService.get('sessionuser');\n  role: any;\n  isVisible: Boolean;\n  \n  constructor(private cookieService: CookieService, private router: Router, private userProfileService: UserprofileService) { \n\n    this.userProfileService.getUserRole(this.username).subscribe(res => {\n      this.username = res['data'];\n      console.log(this.username.role);\n\n      if(this.username.role === \"admin\"){\n        this.isVisible = true;\n        console.log(this.isVisible);\n        \n       } else {\n       this.isVisible = false;\n       console.log(this.isVisible);\n       }\n    })\n\n\n\n\n}\n  ngOnInit(): void {\n  }\n\n  singOut(){\n    this.cookieService.deleteAll();\n    this.router.navigate(['/session/signin']);\n  }\n\n  /*\n  hideAdminNav(){\n    if(this.username.role === \"admin\"){\n      // console.log('i fired first');\n      this.isVisible = true;\n      console.log(this.isVisible);\n      \n     } else if (this.username.role === \"standard\"){\n     this.isVisible = false;\n     console.log(this.isVisible);\n     \n     }\n*/\n\n  }\n\n\n//}\n","<div fxLayout=\"column\" class=\"pageContainer\">\n\n  <!-- navigation -->\n  <nav fxFlex> \n    <mat-toolbar fxFlex>\n      <img src=\"./assets/logo2.png\" class=\"brandLogo\" routerLink=\"/\">\n      <a class=\"navbar-link\" routerLink=\"/\">Home</a>\n      <a class=\"navbar-link\" routerLink=\"/about\">About</a>\n      <a class=\"navbar-link\" routerLink=\"/contact\">Contact Us</a>\n      <a class=\"navbar-link\" routerLink=\"/profile\">Profile</a>\n      <div class=\"navbar-link\" *ngIf = \"this.isVisible\">\n      <a class=\"navbar-link\" routerLink=\"/admin\">Administration</a>\n      </div>\n      <span></span>\n      <span class=\"example-spacer\"></span>\n      <a class=\"navbar-link\" routerLink=\"/\" (click)=\"singOut()\">Sign Out</a>\n    </mat-toolbar>\n  </nav>\n\n  <!-- main content -->\n  <div fxFlex>\n    <main class=\"main-content\" fxFlex=\"100%;\">\n      <br /><br />\n      <router-outlet></router-outlet>\n      <br /><br /><br />\n    </main>\n  </div>\n  <!-- footer -->\n  <div fxFlex >\n    <footer class=\"footer\">\n      <mat-toolbar class=\"footer-content footerStyle\">\n        <p>\n          &copy; {{year | date: 'yyyy'}} - Bob's Computer Repair Shop\n        </p>\n      </mat-toolbar>\n    </footer>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: reset-password-process.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/31/2020\n * ; Description: component for managing mat stepper\n * ================================\n * \n */\n\nimport { Component, ViewChild, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n//import { StepOneComponent } from './step-one.component';\nimport { VerifyUsernameComponent } from '../verify-username/verify-username.component';\n\n//import { StepTwoComponent } from './step-two.component';\nimport { VerifySecurityQuestionsComponent } from '../verify-security-questions/verify-security-questions.component';\n\n//import { StepThreeComponent } from './step-three.component';\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\n\n\n@Component({\n  selector: 'app-reset-password-process',\n  templateUrl: './reset-password-process.component.html',\n  styleUrls: ['./reset-password-process.component.css']\n})\nexport class ResetPasswordProcessComponent {\n\n  @ViewChild(VerifyUsernameComponent) stepOneComponent: VerifyUsernameComponent;\n  @ViewChild(VerifySecurityQuestionsComponent) stepTwoComponent: VerifySecurityQuestionsComponent;\n  @ViewChild(ResetPasswordComponent) stepThreeComponent: ResetPasswordComponent;\n\n  get form1() {\n     return this.stepOneComponent ? this.stepOneComponent.form1 : null;\n  }\n\n  get form2() {\n     return this.stepTwoComponent ? this.stepTwoComponent.form2 : null;\n  }\n\n  get form3() {\n     return this.stepThreeComponent ? this.stepThreeComponent.form3 : null;\n  }\n\n  constructor(private fb: FormBuilder) { }\n\n\n}\n\n\n\n\n\n","<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <h1>Reset Password</h1>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n                <!--inner container-->\n                <div fxLayout=\"column\" class=\"singinInnerContainer\">\n                    <!--LOGO-->\n                    <div fxFlex>\n                        <img src=\"./assets/logo.png\" class=\"logo\">\n                    </div>\n\n<mat-horizontal-stepper linear #stepper>\n\t<mat-step [stepControl]=\"form1\">\n\t\t<ng-template matStepLabel>Verify Username</ng-template>\n\t\t<app-verify-username></app-verify-username>\n\t</mat-step>\n\t<mat-step [stepControl]=\"form2\">\n\t\t<ng-template matStepLabel>Verify Security Questions</ng-template>\n\t\t<app-verify-security-questions></app-verify-security-questions>\n\t</mat-step>\n\t<mat-step [stepControl]=\"form3\">\n\t\t<ng-template matStepLabel>Create New Password</ng-template>\n\t\t<app-reset-password></app-reset-password>\n\t</mat-step>\n</mat-horizontal-stepper>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { AuthGuard } from './shared/auth.guard';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { CreateAccountComponent } from './pages/create-account/create-account.component';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { VerifyUsernameComponent } from './pages/reset-password/verify-username/verify-username.component';\nimport { VerifySecurityQuestionsComponent } from './pages/reset-password/verify-security-questions/verify-security-questions.component';\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password/reset-password.component';\nimport { ResetPasswordProcessComponent } from './pages/reset-password/reset-password-process/reset-password-process.component';\nimport { PurchasegraphComponent } from './pages/administration/purchasegraph/purchasegraph.component';\nimport { RoleGuard } from './shared/role.guard';\n\nconst routes: Routes = [\n  {//path for logged in users\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      },\n      {\n        path: 'contact',\n        component: ContactComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: 'admin',\n        component: AdministrationComponent,\n        canActivate: [RoleGuard]\n      },\n      {\n        path: 'not-found',\n        component: NotfoundComponent\n      }\n    ],\n        canActivate: [AuthGuard]\n  },\n  {//path for not logged in users\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'signin',\n        component: SigninComponent\n      },\n      {\n        path:'createAccount',\n        component: CreateAccountComponent\n      },\n      {\n        path: 'resetProcess',\n        component: ResetPasswordProcessComponent\n      },\n      {\n        path: 'forgot',\n        component: VerifyUsernameComponent\n      }, \n      {\n        path: 'verify-security-questions',\n        component: VerifySecurityQuestionsComponent\n      },\n      {\n        path: 'reset-password',\n        component: ResetPasswordComponent\n      },\n      {\n        path: '404',\n        component: NotfoundComponent\n      },\n      {\n        path: '500',\n        component: ErrorComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'session/404'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/**\n * \n * ================================\n * ; Title: error.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling 500 server errors\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n    <div fxFlex>\n        <img src=\"./assets/500.png\" class=\"logo\" routerLink=\"/\">\n    </div><br /><br />\n    <div fxFlex>\n        <p>\n            Screeeeech!  The server has crashed.  \n        </p><br />\n        <p>\n            Click on the 500 to go home\n        </p>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: verify-security-questions.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/31/2020\n * ; Description: component for managing security question verification\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { MatSnackBar, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { ViewChild } from '@angular/core';\nimport { VerifyUsernameComponent } from '../verify-username/verify-username.component';  //add\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component'; //add\n\n//import { SecurityQuestion } from '../../administration/interfaces/security-question.interface';\n//import { SelectedSecurityQuestionSchema } from '../../../../../server/schemas/SelectedSecurityQuestionSchema';\n\nimport { Securityquestionpwdreset } from '../../../shared/securityquestionpwdreset.interface';\n\n@Component({\n  selector: 'app-verify-security-questions',\n  templateUrl: './verify-security-questions.component.html',\n  styleUrls: ['./verify-security-questions.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class VerifySecurityQuestionsComponent implements OnInit {\n\n  securityQuestions: Securityquestionpwdreset[];\n  question1: string;\n  question2: string;\n  question3: string;\n  username: string;\n  form2: FormGroup;\n  questions;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  //begin add\n // @ViewChild(VerifyUsernameComponent) stepOneComponent: VerifyUsernameComponent;\n  //@ViewChild(VerifySecurityQuestionsComponent) stepTwoComponent: VerifySecurityQuestionsComponent;\n  //@ViewChild(ResetPasswordComponent) stepThreeComponent: ResetPasswordComponent;\n\n  //get frmStepOne() {\n  //   return this.stepOneComponent ? this.stepOneComponent.form1 : null;\n // }\n\n  //get frmStepTwo() {\n  //   return this.stepTwoComponent ? this.stepTwoComponent.form2 : null;\n  //}\n\n  //get frmStepThree() {\n //    return this.stepThreeComponent ? this.stepThreeComponent.form3 : null;\n // }\n//end add\n\n  constructor(private route: ActivatedRoute, private router: Router, private http: HttpClient, private fb: FormBuilder, private _snackBar: MatSnackBar) {\n    this.username=this.route.snapshot.queryParamMap.get('username');\n    console.log(this.username);\n\n    this.http.get('api/users/' + this.username + '/security-questions').subscribe(res => {\n      this.questions = res['data'];\n      //console.log(this.securityQuestions);\n      console.log(res);\n    }, err => {\n      console.log(err);\n    }, () => {\n      //console.log('i fired')\n      //console.log(this.questions.securityQuestions[0].questionText);\n      this.question1 = this.questions.securityQuestions[0].questionText;  \n      this.question2 = this.questions.securityQuestions[1].questionText;\n      this.question3 = this.questions.securityQuestions[2].questionText;\n\n/*\n      console.log(this.question1);\n      console.log(this.question2);\n      console.log(this.question3);*/\n    });\n   }\n\n  ngOnInit(): void {\n    this.form2 = this.fb.group({\n      answerToSecurityQuestion1: [null, Validators.compose([Validators.required])],\n      answerToSecurityQuestion2: [null, Validators.compose([Validators.required])],\n      answerToSecurityQuestion3: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n   verifySecurityQuestions() {\n    const answerToSecurityQuestion1 = this.form2.controls['answerToSecurityQuestion1'].value.trim();\n    const answerToSecurityQuestion2 = this.form2.controls['answerToSecurityQuestion2'].value.trim();\n    const answerToSecurityQuestion3 = this.form2.controls['answerToSecurityQuestion3'].value.trim();\n\n    console.log(answerToSecurityQuestion1 + answerToSecurityQuestion2 + answerToSecurityQuestion3);\n\n    this.http.post('/api/session/verify/users/' + this.username + '/security-questions', {\n      questionText1: this.question1,\n      questionText2: this.question2,\n      questionText3: this.question3,\n      answerText1: answerToSecurityQuestion1,\n      answerText2: answerToSecurityQuestion2,\n      answerText3: answerToSecurityQuestion3\n    }).subscribe( res => {\n      console.log(res);\n      if(res['message'] === 'Success!') {\n        this.router.navigate(['/session/reset-password'], {queryParams: {isAuthenticated: 'true', username: this.username}, skipLocationChange: true})\n      } else {\n        console.log('Unable to verify security question responses.')\n        this.errorMessage = 'Invalid security question answers. Try again.';\n        this.openSnackBar(this.errorMessage);\n\n      }\n    });\n  }\n\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n  }}","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n  <div fxFlex>\n      <h1>Reset Password</h1>\n      <mat-card class=\"mat-elevation-z8\">\n          <mat-card-content>\n              <!--inner container-->\n              <div fxLayout=\"column\" class=\"singinInnerContainer\">\n                  <!--LOGO-->\n                  <div fxFlex>\n                      <img src=\"./assets/logo.png\" class=\"logo\">\n                  </div>\n                  <h2>Verify Security Questions</h2>\n  <!--\n                  <mat-horizontal-stepper #stepper>\n                    <mat-step [stepControl]=\"form2\">-->\n  \n        <form *ngIf=\"questions\" [formGroup]=\"form2\" (ngSubmit)=\"verifySecurityQuestions()\" #usernameForm>\n\n       <!--   <ng-template matStepLabel>Verify Security Questions</ng-template>-->\n\n          <mat-card-content fxFlex fxLayout=\"column\">\n            <mat-list>\n              <mat-list-item>\n                {{ question1 }} &nbsp; &nbsp; &nbsp; &nbsp;\n                <mat-form-field fxFlex>\n                  <input matInput [formControl]=\"form2.controls['answerToSecurityQuestion1']\" placeholder=\"Answer 1\" />\n                </mat-form-field>\n              </mat-list-item>\n  \n              <mat-list-item>\n                {{ question2 }} &nbsp; &nbsp; &nbsp; &nbsp;\n                <mat-form-field fxFlex>\n                  <input matInput [formControl]=\"form2.controls['answerToSecurityQuestion2']\" placeholder=\"Answer 2\" />\n                </mat-form-field>\n              </mat-list-item>\n  \n              <mat-list-item>\n                {{ question3 }} &nbsp; &nbsp; &nbsp; &nbsp;\n                <mat-form-field fxFlex>\n                  <input matInput [formControl]=\"form2.controls['answerToSecurityQuestion3']\" placeholder=\"Answer 3\" />\n                </mat-form-field>\n              </mat-list-item>\n            </mat-list>\n            <br/><br/>\n  \n            <div fxFlex fxLayoutAlign=\"end\" fxLayoutGap=\"10px\">\n              <a fxFlex fxLayoutAlign=\"start\" routerLink=\"/session/forgot\">\n                <mat-icon>west</mat-icon>\n                </a>\n              <button type=\"button\" mat-raised-button color=\"primary\" routerLink=\"/session/signin\">Cancel</button>\n              <button type=\"submit\" \n              [disabled]=\"!form2.valid\"\n              mat-raised-button \n              color=\"primary\">Next</button>\n            </div>\n            \n          </mat-card-content>\n        </form>\n<!--\n      </mat-step>\n    </mat-horizontal-stepper>-->\n\n    </div>\n\n","/**\n * \n * ================================\n * ; Title: changeSecurityQuestions.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for changin the user security questions in the profile page\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserprofileService } from 'src/app/pages/services/userprofile.service';\nimport { SuccessComponent } from '../success/success.component';\n\n@Component({\n  selector: 'app-change-security-questions',\n  templateUrl: './change-security-questions.component.html',\n  styleUrls: ['./change-security-questions.component.css']\n})\nexport class ChangeSecurityQuestionsComponent implements OnInit {\n\nsecurityQuestionsDataSource: any[];\nfilteredSecurityQuestionsDataSource: any[];\nform: FormGroup;\nerrorMessage: string;\nverticalPosition: MatSnackBarVerticalPosition = 'bottom';\nusername: string =  this.cookieService.get('sessionuser');;\nuserId: string = this.cookieService.get('userId');;\n\n\n  constructor(\n    private userProfileService: UserprofileService,\n    private fb: FormBuilder, \n    private _snackBar: MatSnackBar,\n    private cookieService: CookieService,\n    private dialog: MatDialog,\n    private http: HttpClient) {\n    this.userProfileService.getAllSecurityQuestions().subscribe(res =>{\n      //console.log(res.data);\n      //get all the security questions and set it to our initial data array\n      this.securityQuestionsDataSource = res.data;\n\n      //Initialize the new array, filter out the disabled ones, and pushed the active ones into the new array\n      this.filteredSecurityQuestionsDataSource = [];\n      for (let question of this.securityQuestionsDataSource){\n        if(question.isDisabled !== true){\n          this.filteredSecurityQuestionsDataSource.push(question);\n        }\n      }\n      //console.log(this.filteredSecurityQuestionsDataSource);\n    })\n   }\n\n  ngOnInit(): void {\n    //set the form up so we can get access to the selected questions and entered answers\n    this.form = this.fb.group({\n      securityQuestionSeletedOne: [null, Validators.compose([Validators.required])],\n      securityQuestionOneAnswer: [null, Validators.compose([Validators.required])],\n      securityQuestionSeletedTwo: [null, Validators.compose([Validators.required])],\n      securityQuestionTwoAnswer: [null, Validators.compose([Validators.required])],\n      securityQuestionSeletedThree: [null, Validators.compose([Validators.required])],\n      securityQuestionThreeAnswer: [null, Validators.compose([Validators.required])],\n    });\n  }\n\n  changeSecurityQuestions(){\n    const securityQuestionSeletedOne = this.form.controls.securityQuestionSeletedOne.value;\n    const securityQuestionOneAnswer =  this.form.controls.securityQuestionOneAnswer.value;\n    const securityQuestionSeletedTwo = this.form.controls.securityQuestionSeletedTwo.value;\n    const securityQuestionTwoAnswer = this.form.controls.securityQuestionTwoAnswer.value;\n    const securityQuestionSeletedThree = this.form.controls.securityQuestionSeletedThree.value;\n    const securityQuestionThreeAnswer = this.form.controls.securityQuestionThreeAnswer.value;\n\n    /*\n    console.log(securityQuestionOneAnswer);\n    console.log(securityQuestionSeletedOne);\n    console.log(securityQuestionSeletedTwo);\n    console.log(securityQuestionTwoAnswer);\n    console.log(securityQuestionSeletedThree);\n    console.log(securityQuestionThreeAnswer);\n    */\n\n    /**\n     * \n     * Make the post request to update the questions\n     * \n     */\n    this.http.put(`api/users/${this.username}/security-questions`, {\n      securityQuestions: [\n        {\n          questionText: securityQuestionSeletedOne,\n          answerText: securityQuestionOneAnswer\n        },\n        {\n          questionText: securityQuestionSeletedTwo,\n          answerText: securityQuestionTwoAnswer\n        },\n        {\n          questionText: securityQuestionSeletedThree,\n          answerText: securityQuestionThreeAnswer\n        }\n      ]\n    }).subscribe(res => {\n      //console.log(res);\n      if(res['message'] === 'Success!'){\n        //open new dialog\n        const dialogRef = this.dialog.open(SuccessComponent, {\n          width: \"100px\"\n        })\n  \n      } else {\n        //call snackbar and display failure\n   //call snackbar and display failure\n   this.errorMessage = 'Something went wrong.';\n   this.openSnackBar(this.errorMessage);\n  \n      }\n    })\n    \n  }\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Change Security Questions</mat-card-title>\n        <br />\n        <form [formGroup]=\"form\" \n                      (ngSubmit)=\"changeSecurityQuestions(); form.reset()\" \n                      #updateQuestionsform=\"ngForm\">\n                      <mat-card-content>\n                          <div fxLayout=\"column\">\n<!--Question 1-->\n<h3>Question 1</h3>\n                    <mat-form-field>\n                        <mat-label>Available Questions</mat-label>\n                            <mat-select name=\"question\" [formControl]=\"form.controls['securityQuestionSeletedOne']\">\n                                <mat-option *ngFor=\"let question of filteredSecurityQuestionsDataSource\" [value]=\"question.questionId\">\n                                      {{question.questionId}}\n                                    </mat-option>\n                            </mat-select>\n                    </mat-form-field>\n                 \n                    \n<!--Answer 1-->\n                    <mat-form-field>\n                        <mat-label>Enter Answer</mat-label>\n                        <input matInput placeholder=\"Question Answer\" [formControl]=\"form.controls['securityQuestionOneAnswer']\">\n                      </mat-form-field>\n\n                      <br />\n\n\n<!--Question 2-->\n<h3>Question 2</h3>\n                    <mat-form-field>\n                        <mat-label>Available Questions</mat-label>\n                            <mat-select name=\"question\" [formControl]=\"form.controls['securityQuestionSeletedTwo']\">\n                                <mat-option *ngFor=\"let question of filteredSecurityQuestionsDataSource\" [value]=\"question.questionId\">\n                                      {{question.questionId}}\n                                    </mat-option>\n                            </mat-select>\n                    </mat-form-field>\n                 \n                    \n<!--Answer 2-->\n                    <mat-form-field>\n                        <mat-label>Enter Answer</mat-label>\n                        <input matInput placeholder=\"Question Answer\" [formControl]=\"form.controls['securityQuestionTwoAnswer']\">\n                      </mat-form-field>\n\n                      <br />\n\n\n\n\n\n<!--Question 3-->\n<h3>Question 3</h3>\n                    <mat-form-field>\n                        <mat-label>Available Questions</mat-label>\n                            <mat-select name=\"question\" [formControl]=\"form.controls['securityQuestionSeletedThree']\">\n                                <mat-option *ngFor=\"let question of filteredSecurityQuestionsDataSource\" [value]=\"question.questionId\">\n                                      {{question.questionId}}\n                                    </mat-option>\n                            </mat-select>\n                    </mat-form-field>\n                 \n                    \n<!--Answer 3-->\n                    <mat-form-field>\n                        <mat-label>Enter Answer</mat-label>\n                        <input matInput placeholder=\"Question Answer\" [formControl]=\"form.controls['securityQuestionThreeAnswer']\">\n                      </mat-form-field>\n\n                    </div>\n<!--Buttons to submit/cancel the form-->\n                    </mat-card-content>\n                      <mat-card-actions align=\"end\">\n                        <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                        <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!form.valid\">Update Questions</button>\n                      </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/**\n * \n * ================================\n * ; Title: Purchase-history-graph\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for purchase history graph \n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserprofileService } from '../../services/userprofile.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Component({\n  selector: 'app-purchase-history-graph',\n  templateUrl: './purchase-history-graph.component.html',\n  styleUrls: ['./purchase-history-graph.component.css']\n})\nexport class PurchaseHistoryGraphComponent implements OnInit {\n\n  purchases: any;\n  data: any;\n  itemCount = [];\n  labels = [];\n  username: any = this.cookieService.get('sessionuser');\n\n  constructor(\n    private userProfileService: UserprofileService,\n    private cookieService: CookieService) {\n\n    //call the purchaseGraph api\n    //console.log('i fired')\n    //console.log(this.username);\n      this.userProfileService.getUserPurchasesByGraph(this.username).subscribe(res => {\n        this.purchases = res['data'];\n        console.log(this.purchases);\n        //set a cookie that we'll grab from the parent component to hide the graph if no data is present.\n        //this is helpful for new users.\n        if(this.purchases.length === 0){\n          this.cookieService.set('hidegraph', 'nodata', 1);\n          //console.log('i fired');\n        } else {\n          this.cookieService.set('showGraph', 'true', 1);\n        }\n\n        //loop the purchases\n        for (const item of this.purchases){\n          this.labels.push(item._id.title);\n          this.itemCount.push(item.count);\n        }\n\n        this.data = {\n          labels: this.labels,\n          datasets: [\n            //graph object\n            {\n              data: this.itemCount,\n              backgroundColor: [\n                '#ED0A3F',\n                '#FF8833',\n                '#5FA777',\n                '#0066CC',\n                '#6B3FA0',\n                '#AF593E',\n                '#6CDAE7',\n                '#F1B60E'\n              ],\n              hoverBackgroundColor: [\n                '#ED0A3F',\n                '#FF8833',\n                '#5FA777',\n                '#0066CC',\n                '#6B3FA0',\n                '#AF593E',\n                '#6CDAE7',\n                '#F1B60E'\n              ],\n            }\n          ]\n        };\n      })\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-content>\n        <h1 style=\"font-weight: lighter; text-align: center\">Your Purchases</h1>\n        <p-chart type='pie' [data]='data'></p-chart>\n    </mat-card-content>\n</mat-card>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}