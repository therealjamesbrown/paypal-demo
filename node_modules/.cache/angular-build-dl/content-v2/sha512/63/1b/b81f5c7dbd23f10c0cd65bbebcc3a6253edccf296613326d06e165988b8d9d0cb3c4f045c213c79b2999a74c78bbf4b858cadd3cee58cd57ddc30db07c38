{"version":3,"sources":["./src/app/pages/services/userprofile.service.ts","./src/app/pages/profile/update-account/update-account.component.ts","./src/app/pages/profile/update-account/update-account.component.html","./src/app/pages/administration/catalogmanagement/catalogmanagement.component.ts","./src/app/pages/administration/catalogmanagement/catalogmanagement.component.html","./src/app/pages/administration/dialogs/create-catalog-item/create-catalog-item.component.ts","./src/app/pages/administration/dialogs/create-catalog-item/create-catalog-item.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/administration/administration.component.ts","./src/app/pages/administration/administration.component.html","./src/app/shared/auth-layout/auth-layout.component.ts","./src/app/shared/auth-layout/auth-layout.component.html","./src/app/pages/create-account/create-account.component.ts","./src/app/pages/create-account/create-account.component.html","./src/app/pages/services/purchasehistory.service.ts","./src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.ts","./src/app/pages/administration/dialogs/create-role-dialog/create-role-dialog.component.html","./src/app/pages/profile/dialogs/change-password/change-password.component.ts","./src/app/pages/profile/dialogs/change-password/change-password.component.html","./src/environments/environment.ts","./src/app/pages/administration/services/user-creation.service.ts","./src/app/shared/auth.guard.ts","./src/app/pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component.ts","./src/app/pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component.html","./src/app/pages/reset-password/reset-password/reset-password.component.ts","./src/app/pages/reset-password/reset-password/reset-password.component.html","./src/app/pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component.ts","./src/app/pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component.html","./src/app/pages/home/dialogs/orderhistory/viewtransactiondialog/viewtransactiondialog.component.ts","./src/app/pages/home/dialogs/orderhistory/viewtransactiondialog/viewtransactiondialog.component.html","./src/app/pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component.ts","./src/app/pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component.html","./src/app/pages/home/dialogs/orderhistory/view-all-transactions-dialog/view-all-transactions-dialog.component.ts","./src/app/pages/home/dialogs/orderhistory/view-all-transactions-dialog/view-all-transactions-dialog.component.html","./src/app/pages/profile/dialogs/success/success.component.ts","./src/app/pages/profile/dialogs/success/success.component.html","./src/app/pages/administration/dialogs/update-catalog-item/update-catalog-item.component.ts","./src/app/pages/administration/dialogs/update-catalog-item/update-catalog-item.component.html","./src/app/pages/administration/dialogs/update-role-dialog/update-role-dialog.component.ts","./src/app/pages/administration/dialogs/update-role-dialog/update-role-dialog.component.html","./src/app/pages/administration/rolemanagement/rolemanagement.component.ts","./src/app/pages/administration/rolemanagement/rolemanagement.component.html","./src/app/pages/home/orderhistory/orderhistory.component.ts","./src/app/pages/home/orderhistory/orderhistory.component.html","./src/app/pages/profile/dialogs/update-contact-dialog/update-contact-dialog.component.ts","./src/app/pages/profile/dialogs/update-contact-dialog/update-contact-dialog.component.html","./src/app/pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component.ts","./src/app/pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component.html","./src/app/pages/administration/services/role.service.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/pages/profile/userdetails/userdetails.component.ts","./src/app/pages/profile/userdetails/userdetails.component.html","./src/app/pages/signin/signin.component.ts","./src/app/pages/signin/signin.component.html","./src/app/pages/home/createorder/createorder.component.ts","./src/app/pages/home/createorder/createorder.component.html","./src/app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component.ts","./src/app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component.html","./src/app/pages/home/dialogs/invoice-review-dialog/invoice-review-dialog.component.ts","./src/app/pages/home/dialogs/invoice-review-dialog/invoice-review-dialog.component.html","./src/app/pages/contact/contact.component.ts","./src/app/pages/contact/contact.component.html","./src/app/pages/administration/services/security-question.service.ts","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/app.module.ts","./src/app/pages/notfound/notfound.component.ts","./src/app/pages/notfound/notfound.component.html","./src/app/shared/error.interceptor.ts","./src/app/pages/administration/services/user-signup.ts","./src/app/pages/administration/purchasegraph/purchasegraph.component.ts","./src/app/pages/administration/purchasegraph/purchasegraph.component.html","./src/app/shared/role.guard.ts","./src/app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component.ts","./src/app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component.html","./src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.ts","./src/app/pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component.html","./src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.ts","./src/app/pages/administration/securityquestionmanagement/securityquestionmanagement.component.html","./src/app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component.ts","./src/app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component.html","./src/app/pages/administration/usermanagement/usermanagement.component.ts","./src/app/pages/administration/usermanagement/usermanagement.component.html","./src/app/pages/reset-password/verify-username/verify-username.component.ts","./src/app/pages/reset-password/verify-username/verify-username.component.html","./src/app/pages/about/about.component.ts","./src/app/pages/about/about.component.html","./src/app/pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component.ts","./src/app/pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component.html","./src/app/pages/administration/services/catalog.service.ts","./src/app/shared/base-layout/base-layout.component.ts","./src/app/shared/base-layout/base-layout.component.html","./src/app/pages/reset-password/reset-password-process/reset-password-process.component.ts","./src/app/pages/reset-password/reset-password-process/reset-password-process.component.html","./src/app/app-routing.module.ts","./src/app/pages/error/error.component.ts","./src/app/pages/error/error.component.html","./src/app/pages/reset-password/verify-security-questions/verify-security-questions.component.ts","./src/app/pages/reset-password/verify-security-questions/verify-security-questions.component.html","./src/app/pages/profile/dialogs/change-security-questions/change-security-questions.component.ts","./src/app/pages/profile/dialogs/change-security-questions/change-security-questions.component.html","./src/main.ts","./src/app/pages/home/purchase-history-graph/purchase-history-graph.component.ts","./src/app/pages/home/purchase-history-graph/purchase-history-graph.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["/**\n * \n * ================================\n * ; Title: userprofile.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/24/2020\n * ; Description: service responsible for services that relate to the profile page\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserprofileService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * \n   * GET USER DETAILS\n   * \n   */\n  getUserDetails(username: string): Observable<any>{\n    return this.http.get(`/api/users/username/${username}`);\n  }\n\n\n\n  /**\n   * \n   * CHANGE PASSWORD\n   * \n   */\n   changeUserPassword(username: string, password:string): Observable<any>{\n     return this.http.post(`/api/session/users/${username}/reset-password`,{\n       password\n     });\n   }\n\n   /**\n    * \n    * GetAllSecurityQuestions\n    * \n    */\n   getAllSecurityQuestions(): Observable<any>{\n     return this.http.get(`/api/securityQuestions`);\n   }\n   \n  /**\n   * \n   * CHANGE SECURITY QUESTIONS\n   * \n   */\n  updateUserContactDetails(userId, firstName, lastName, username, phoneNumber, address, email, role): Observable<any>{\n    return this.http.put(`api/users/${userId}`, {\n      firstName: firstName,\n      lastName: lastName,\n      username: username,\n      phoneNumber: phoneNumber,\n      address: address,\n      email: email,\n      role: role\n    })\n  }\n\n  /**\n   * \n   * Create Invoice\n   * \n   */\n  createInvoice(invoice){\n    console.log(invoice);\n    return this.http.post(`/api/invoices`, {\n      lineItem: invoice.lineItems,\n      partsAmount: invoice.partsAmount,\n      laborAmount: invoice.laborAmount,\n      lineItemTotal: invoice.lineItemTotal,\n      total: invoice.total,\n      username: invoice.userName,\n      orderDate: invoice.orderDate\n    })\n  }\n\n\n  /**\n   * \n   * Get purchases by graph for the user api\n   * \n   */\n  getUserPurchasesByGraph(username): Observable<any>{\n    return this.http.get(`/api/invoices/purchases-graph/user/${username}`);\n  }\n\n\n\n  /**\n   * \n   * Find User Role\n   * \n   */\n  getUserRole(username: string): Observable<any>{\n    return this.http.get(`/api/users/${username}/role`);\n  }\n}\n\n\n","/**\n * \n * ================================\n * ; Title: update-account.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for updating the user profile\n * ================================\n * \n */\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UserprofileService } from '../../services/userprofile.service';\nimport { ChangePasswordComponent } from '../dialogs/change-password/change-password.component'\nimport { ChangeSecurityQuestionsComponent } from '../dialogs/change-security-questions/change-security-questions.component';\nimport { UpdateContactDialogComponent } from '../dialogs/update-contact-dialog/update-contact-dialog.component';\n\n@Component({\n  selector: 'app-update-account',\n  templateUrl: './update-account.component.html',\n  styleUrls: ['./update-account.component.css']\n})\nexport class UpdateAccountComponent implements OnInit {\n\n  constructor(\n    private http: HttpClient, \n    private dialog: MatDialog, \n    private userProfileServce: UserprofileService ) { }\n\n  ngOnInit(): void {\n  }\n\n  \n  /**\n   * \n   * Change Password\n   * \n   */\n  changeUserPassword(){\n    const dialogRef = this.dialog.open(ChangePasswordComponent, {\n      disableClose: true,\n      width: \"800px\"\n    })\n  }\n\n\n  /**\n   * \n   * Change Security Questions\n   * \n   */\n  changeUserSecurityQuestions(){\n    const dialogRef = this.dialog.open(ChangeSecurityQuestionsComponent, {\n      disableClose: true,\n      width: \"800px\"\n    })\n  }\n\n\n  /**\n   * \n   * Update Contact Details\n   * \n   */\n\n  updateUserContactDetails(){\n    const dialogRef = this.dialog.open(UpdateContactDialogComponent, {\n      disableClose: true,\n      width: \"800px\"\n    })\n  }\n\n\n}\n","<div fxLayout=\"column\" class=\"personalInfo\">\n    <h1>Edit Account</h1><br />\n    <div fxFlex class=\"buttonStuff\">\n     <button mat-raised-button (click)=\"changeUserPassword()\">Change Password</button><br />\n     <button mat-raised-button (click)=\"changeUserSecurityQuestions()\">Change Security Questions</button><br />\n     <button mat-raised-button (click)=\"updateUserContactDetails()\">Update Contact Information</button><br /><br />\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: catalogmanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component responsible for catalog page\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateCatalogItemComponent } from '../dialogs/create-catalog-item/create-catalog-item.component';\nimport { DeleteCatalogItemComponent } from '../dialogs/delete-catalog-item/delete-catalog-item.component';\nimport { UpdateCatalogItemComponent } from '../dialogs/update-catalog-item/update-catalog-item.component';\nimport { Catalog } from '../interfaces/catalog.interface';\nimport { CatalogService } from '../services/catalog.service';\n\n@Component({\n  selector: 'app-catalogmanagement',\n  templateUrl: './catalogmanagement.component.html',\n  styleUrls: ['./catalogmanagement.component.css']\n})\nexport class CatalogmanagementComponent implements OnInit {\n\n  catalogDataSource: Catalog[];\n  displayedColumns: string[] = ['title', 'price', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private catalogServce: CatalogService) { \n    /**\n       * \n       * Find all Catalog Items\n       */\n      this.catalogServce.findAllCatalogItems().subscribe(res => {\n        this.catalogDataSource = res['data'];\n        //console.log(this.catalogDataSource);\n      }, err => {\n        console.log(err);\n      })\n  }\n\n  ngOnInit(): void {\n  }\n\n    /**\n   * \n   * SECTION FOR CATALOG APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   * \n   */\n\n  //createItem\n  createCatalogItem(){\n    const dialogRef = this.dialog.open(CreateCatalogItemComponent, {\n      data: {\n\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'create'){\n        //refresh the list\n        this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          //console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n      }\n    })\n  }\n\n  //updateItem\n  updateCatalogItem(data){\n    console.log(data);\n    const dialogRef = this.dialog.open(UpdateCatalogItemComponent, {\n      data: {\n        data,\n        dialogHeader: 'Update Catalog Item'\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result === 'update'){\n        //refresh the list\n        \n        this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n      }\n    })\n  }\n\n  //deleteItem\n  deleteCatalogItem(catalogItem){\n    const dialogRef = this.dialog.open(DeleteCatalogItemComponent, {\n      data: {\n        catalogItem,\n        dialogHeader: 'Disabling Item',\n        dialogBody: `Are you sure you want to disable ${catalogItem.title}`\n      },\n      disableClose: true,\n      width: '800px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result === 'confirm'){\n        console.log(catalogItem._id);\n       this.catalogServce.deleteCatalogItem(catalogItem._id).subscribe( res => {\n         //make another call to update the list\n         this.catalogServce.findAllCatalogItems().subscribe(res => {\n          this.catalogDataSource = res['data'];\n          //console.log(this.catalogDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }, err => {\n         console.log(err)\n       })\n        \n      }\n    })\n  }\n}\n","<p>Items<button mat-button class=\"crudButton\" (click)=\"createCatalogItem()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p> \n\n<table mat-table [dataSource]=\"catalogDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef> Title </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n    </ng-container>\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef> Price </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.price | currency}} </td>\n      </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateCatalogItem(element)\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item (click)=\"deleteCatalogItem(element)\">\n              <mat-icon>delete</mat-icon>\n              <span>Disable</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: createCatalogItemdialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n@Component({\n  selector: 'app-create-catalog-item',\n  templateUrl: './create-catalog-item.component.html',\n  styleUrls: ['./create-catalog-item.component.css']\n})\nexport class CreateCatalogItemComponent implements OnInit {\n\n  constructor(\n    private catalogService: CatalogService, \n    private http: HttpClient, \n    private fb: FormBuilder, \n    private dialogRef: MatDialogRef<CreateCatalogItemComponent>, \n    @Inject(MAT_DIALOG_DATA) data) { }\n\n//bring in our interface\ntext: any;\ncreateCatalogItemForm: FormGroup;\nenteredText:any [];\n\n  ngOnInit(): void {\n    this.createCatalogItemForm = this.fb.group({\n      title: ['', Validators.required],\n      price: ['', Validators.required]\n    })\n  }\n\n  createCatalogItem(){\n    const title = this.createCatalogItemForm.controls.title.value;\n    const price = this.createCatalogItemForm.controls.price.value;\n\n    this.catalogService.createCatalogItem(title, price).subscribe( res => {\n      title\n      price\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Catalog Item</mat-card-title>\n        <br />\n        <form [formGroup]=\"createCatalogItemForm\" (ngSubmit)=\"createCatalogItem()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"Enter item name\"\n                               formControlName=\"title\">\n                    </mat-form-field>\n                    <mat-form-field>\n                        <input type=\"number\" \n                               matInput\n                               placeholder=\"Enter item price\"\n                               formControlName=\"price\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createCatalogItemForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n//get the user and welcome them\nuser: any = this.cookieService.get('sessionuser');\nad: Boolean = true; //show the add to begin with\nadCookie: any = this.cookieService.get('adCookie')\noderHistoryVisibility: Boolean = true; //init graph visibility, constructor will take care of the rest\nhistoryDataNull: string;\nhistoryDataPresent: string;\n\n  constructor(private cookieService: CookieService) {\n\n    //hide the graph if there's no data.\n    this.historyDataNull = this.cookieService.get('hidegraph');\n\n    //show the graph if data is present. \n    this.historyDataPresent = this.cookieService.get('showGraph');\n\n    if (this.historyDataPresent){\n      this.oderHistoryVisibility = true;      \n    } else if (this.historyDataNull){\n      this.oderHistoryVisibility = false;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n  hideAd(){\n    this.ad = false; //hide the add \n    //set a cookie so the ad doesn't come back until next session\n   this.cookieService.set('adCookie','true', 1)\n  }\n\n}\n","<div fxLayout=\"column\" class=\"outerContainer\">\n  <div fxFlex>\n    <mat-card>\n      <mat-card-content>\n        <div fxLayout=\"column\">\n          <div fxFlex class=\"childColumnContainers\">\n            <h1> Welcome, {{user}}!</h1>\n          </div>\n\n          <!--Ad Section-->\n          <div fxFlex class=\"childColumnContainers\" *ngIf=\"ad != false && !adCookie\">\n            <mat-card class=\"ad\">\n              <mat-card-content (click)=\"hideAd()\" >\n                Enjoy 10% off! This offer is automatically applied on new orders!\n                <button \n                mat-raised-button \n                class=\"adButton\">X</button>\n                <br>\n                <p>Terms and conditions apply.</p>\n              </mat-card-content>\n            </mat-card>\n          </div>\n\n          <!--Create Order Form-->\n          <div fxFlex class=\"childColumnContainers\">\n            <mat-card class=\"purchaseGraph\" style=\"background-color: #0d47a1; color: white;\">\n              <mat-card-content>\n                <app-createorder></app-createorder>\n              </mat-card-content>\n            </mat-card>\n          </div>\n\n          <!--Graph-->\n\n          <div fxFlex class=\"childColumnContainers\" *ngIf=\"oderHistoryVisibility != false\">\n            <mat-card class=\"purchaseGraph\" style=\"background-color: #0d47a1; color: white;\">\n              <mat-card-content>\n                <app-purchase-history-graph></app-purchase-history-graph>\n              </mat-card-content>\n            </mat-card>\n          </div>\n\n          <!--Order History-->\n          <div fxFlex class=\"childColumnContainers\" *ngIf=\"oderHistoryVisibility != false\">\n            <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n              <div fxFlex>\n                <mat-card>\n                  <mat-card-content>\n                    <app-orderhistory></app-orderhistory>\n                  </mat-card-content>\n                </mat-card>\n              \n              </div>\n            </div>\n          </div>\n\n          <!--Contact-->\n          <div fxFlex class=\"childColumnContainers\">\n            <mat-card class=\"contactContainer\">\n              <mat-card-content class=\"questions\">\n                <h3>Questions?</h3>\n                <p routerLink=\"/contact\" class=\"contact\">Contact</p>\n              </mat-card-content>\n            </mat-card>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: administration.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for administration page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.css']\n})\n\n\nexport class AdministrationComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n\n\n  constructor() { }\n  ngOnInit() { }   \n  \n}\n\n","\n<img src=\"./assets/contact.png\" class=\"logo\">\n<!--Original royalty free image obtained from https://i.pinimg.com/originals/94/00/17/94001795a3efc6330f4b6b835b68b989.png-->\n<h1>Administration Dashboard</h1>\n<div fxLayout=\"column\" class=\"outerContainer\">\n    <div fxFlex>\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-content>\n            <div fxLayout=\"column\">\n\n\n<!--Catalog and purchases graph column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"column wrap\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Purchases Graph goes here-->\n               <mat-card style=\"background-color: #0d47a1; color: white;\">\n                   <mat-card-content>\n                    <app-purchasegraph></app-purchasegraph>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        <div fxFlex class=\"childRowContainers\">\n<!--Catalog Goes here-->\n            <mat-card>\n                <mat-card-content>\n                    <app-catalogmanagement></app-catalogmanagement>\n                </mat-card-content>\n            </mat-card>\n            </div>\n        </div>\n    </div>\n\n    \n\n<!--Security questions and Role Management Column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n        <div fxFlex class=\"childRowContainers\">\n<!--Security questions go here-->\n<mat-card>\n    <mat-card-content>\n               <app-securityquestionmanagement></app-securityquestionmanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n\n        <div fxFlex class=\"childRowContainers\">\n<!--Role Management Goes here-->\n<mat-card>\n    <mat-card-content>   \n               <app-rolemanagement></app-rolemanagement>\n            </mat-card-content>\n            </mat-card>\n            </div>\n        </div>\n    </div>\n\n\n\n\n<!--USER management column-->\n<div fxFlex class=\"childColumnContainers\">\n    <div fxFlex><mat-card>\n        <mat-card-content>\n <app-usermanagement></app-usermanagement>\n</mat-card-content>\n</mat-card>\n    </div>\n</div>\n\n\n\n\n</div>\n</mat-card-content>\n</mat-card>\n</div>\n<br />\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ; Reference: Google Material Docs: https://material.angular.io/components/stepper/overview\n * ================================\n * \n */\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms'\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router'\nimport { CookieService } from 'ngx-cookie-service'\nimport { UserSignUpService } from '../administration/services/user-signup'\n\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class CreateAccountComponent implements OnInit {\n  firstFormGroup: FormGroup\n  secondFormGroup: FormGroup\n  thirdFormGroup: FormGroup\n  newUser: any\n  questions: any\n  securityQuestions: any\n  constructor(private userSignUpService: UserSignUpService, private cookieService: CookieService, private router: Router, private http: HttpClient, private fb: FormBuilder) { }\n  ngOnInit() {\n    this.firstFormGroup = this.fb.group({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required),\n      firstName: new FormControl(null, Validators.required),\n      lastName: new FormControl(null, Validators.required),\n      phoneNumber: new FormControl(null, Validators.required),\n      address: new FormControl(null, Validators.required)\n    })\n    this.secondFormGroup = this.fb.group({\n      securityQuestion1: new FormControl(null, Validators.required),\n      securityQuestion1Answer: new FormControl(null, Validators.required),\n      securityQuestion2: new FormControl(null, Validators.required),\n      securityQuestion2Answer: new FormControl(null, Validators.required),\n      securityQuestion3: new FormControl(null, Validators.required),\n      securityQuestion3Answer: new FormControl(null, Validators.required),\n    })\n    this.thirdFormGroup = this.fb.group({\n      username: new FormControl(null, Validators.required),\n      password: new FormControl(null, Validators.required)\n    })\n    this.userSignUpService.getSecurityQuestions().subscribe(res => {\n      this.securityQuestions = res['data']\n      console.log(this.securityQuestions)\n    })\n  }\n  registerAccount() {\n    this.newUser = {\n      username: this.firstFormGroup.get('username').value.trim(),\n      password: this.firstFormGroup.get('password').value.trim(),\n      firstName: this.firstFormGroup.get('firstName').value.trim(),\n      lastName: this.firstFormGroup.get('lastName').value.trim(),\n      phoneNumber: this.firstFormGroup.get('phoneNumber').value.trim(),\n      address: this.firstFormGroup.get('address').value.trim()\n    }\n  }\n  setSecurityQuestions() {\n   this.newUser['securityQuestions'] = {\n     Question1: this.secondFormGroup.controls.securityQuestion1.value,\n     Question1Answer: this.secondFormGroup.get('securityQuestion1Answer').value.trim(),\n     Question2: this.secondFormGroup.controls.securityQuestion2.value,\n     Question2Answer: this.secondFormGroup.get('securityQuestion2Answer').value.trim(),\n     Question3: this.secondFormGroup.controls.securityQuestion3.value,\n     Question3Answer: this.secondFormGroup.get('securityQuestion3Answer').value.trim()\n   }\n   console.log(this.newUser)\n   this.userSignUpService.postUsers(this.newUser).subscribe(err => {\n    if (err) {\n      console.log(err)\n    } else {\n      console.log(this.newUser)\n    }\n  })\n  }\n  signIn() {\n   let signInUser = {\n     username: this.thirdFormGroup.get('username').value.trim(),\n     password: this.thirdFormGroup.get('password').value.trim()\n   }\n   this.userSignUpService.signIn(signInUser).subscribe(res => {\n    if (res['data'].username) {\n      this.cookieService.set('sessionuser', res['data'].username, 1)\n      this.router.navigate(['/'])\n    }\n   })\n   this.secondFormGroup.reset()\n  }\n}","<mat-card>\n    <mat-card-title>\n        <p color=\"primary\" style=\"text-align: center\">Register For An Account</p>\n    </mat-card-title>\n</mat-card>\n<mat-horizontal-stepper #stepper>\n     <!-- Account Registration -->\n    <mat-step [stepControl]=\"firstFormGroup\">\n       <h1 style=\"text-align: center;\">Sign Up</h1>\n        <form [formGroup]=\"firstFormGroup\">\n            <ng-template matStepLabel>Register Account</ng-template>\n            <mat-form-field>\n                <mat-label>Username</mat-label>\n                <input matInput placeholder=\"Ex. thespidermonkey25\" formControlName=\"username\" required>\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Password</mat-label>\n                <input matInput placeholder=\"Ex. root\" formControlName=\"password\" required> \n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>First Name</mat-label>\n                <input matInput placeholder=\"Ex. Peter\" formControlName=\"firstName\" required>\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Last Name</mat-label>\n                <input matInput placeholder=\"Ex. Parker\" formControlName=\"lastName\" required>\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Phone Number</mat-label>\n                <input matInput placeholder=\"Ex. 867 5309\" formControlName=\"phoneNumber\" required>\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Address</mat-label>\n                <input matInput placehodler=\"Ex. 12 Brooklyn Street\" formControlName=\"address\" required>\n            </mat-form-field>\n            <br>\n            <div>\n                <a routerLink=\"/session/signin\">Sign In</a>\n                <button mat-button (click)=\"registerAccount()\" matStepperNext>Next</button>\n            </div>\n        </form>\n    </mat-step>\n    <!-- Security Questions -->\n    <mat-step [stepControl]=\"secondFormGroup\" label=\"Security Questions\">\n        <form style=\"text-align: center;\" [formGroup]=\"secondFormGroup\" (ngSubmit)=\"setSecurityQuestions()\">\n            <mat-card-content>\n                <mat-card-title>Set Your Security Questions.</mat-card-title>\n                <mat-card-subtitle>So You Can Reset Your Password.</mat-card-subtitle>\n                <!-- Security Question 1 -->\n                    <mat-label>Security Question 1</mat-label>\n                    <div>\n                        <mat-select [formControl]=\"secondFormGroup.controls['securityQuestion1']\" >\n                            <mat-option *ngFor=\"let question of securityQuestions\" [value]=\"question.questionId\">{{ question.questionId }}</mat-option>\n                        </mat-select>\n                    </div>\n                <mat-form-field>\n                <input matInput type=\"text\" formControlName=\"securityQuestion1Answer\" required>\n                </mat-form-field>\n                <br>\n                <!-- Security Question 2 -->\n                    <mat-label>Security Question 2</mat-label>\n                    <div>\n                        <mat-select [formControl]=\"secondFormGroup.controls['securityQuestion2']\">\n                            <mat-option *ngFor=\"let question of securityQuestions\" [value]=\"question.questionId\">{{ question.questionId }}</mat-option>\n                        </mat-select>\n                    </div>\n                <mat-form-field>\n                <input matInput type=\"text\" formControlName=\"securityQuestion2Answer\" required>\n                 </mat-form-field>\n                <br>\n                <!-- Security Question 3 -->\n                    <mat-label>Security Question 3</mat-label>\n                    <div>\n                        <mat-select [formControl]=\"secondFormGroup.controls['securityQuestion3']\">\n                            <mat-option *ngFor=\"let question of securityQuestions\" [value]=\"question.questionId\">{{ question.questionId }}</mat-option>\n                        </mat-select>\n                    </div>\n                <mat-form-field>\n                <input matInput type=\"text\" formControlName=\"securityQuestion3Answer\" required>\n                </mat-form-field>\n            </mat-card-content>\n            <br>\n            <!-- Security Question 3 End -->\n            <div>\n                <button mat-button matStepPrevious>Back</button>\n                <button type=\"submit\" mat-button matStepperNext>Set Questions</button>\n            </div>\n        </form>\n    </mat-step>\n     <!-- Sign In -->\n    <mat-step [stepControl]=\"thirdFormGroup\" label=\"Sign In\">\n        <h1 style=\"text-align: center;\">Sign In</h1>\n        <form [formGroup]=\"thirdFormGroup\">\n        <mat-form-field>\n            <mat-label>Username</mat-label>\n            <input style=\"text-align: center;\" matInput formControlName=\"username\" placeholder=\"Ex. spidermonkey25\" required>\n        </mat-form-field>\n        <br>\n        <mat-form-field>\n            <mat-label>Password</mat-label>\n            <input style=\"text-align: center;\" matInput formControlName=\"password\" placeholder=\"Ex. Password\" required>\n        </mat-form-field>\n        <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button (click)=\"signIn()\" matStepperNext>Sign In</button>\n        </div>\n    </form>\n</mat-step>\n</mat-horizontal-stepper>","/**\n * \n * ================================\n * ; Title: purchasehistory.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: service for purchase history api requests\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchasehistoryService {\n\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   * \n   * Find all purchases from invoice collection\n   * \n   */\n\n   findAllPurchasesByUserName(username): Observable<any>{\n     return this.http.get(`/api/invoices/user/${username}`)\n   }\n\n\n   /**\n    * \n    * Archive Transactions\n    * \n    */\n    archiveTransaction(invoideId): Observable<any>{\n      return this.http.patch(`/api/invoices/${invoideId}`,{\n        //no need to pass any body\n      })\n    }\n\n  findPurchasesbyServiceGraph() {\n    return this.http.get ('/api/invoices/purchases-graph');\n  }\n\n\n}\n","/**\n * \n * ================================\n * ; Title: createRoledialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Role } from '../../interfaces/role.interface';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\n\n\n@Component({\n  selector: 'app-create-role-dialog',\n  templateUrl: './create-role-dialog.component.html',\n  styleUrls: ['./create-role-dialog.component.css']\n})\nexport class CreateRoleDialogComponent implements OnInit {\n\nconstructor(\n  private roleServce: RoleService, \n  private http: HttpClient, \n  private fb: FormBuilder, \n  private dialogRef: MatDialogRef<CreateRoleDialogComponent>, \n  @Inject(MAT_DIALOG_DATA) data) { }\n\n//bring in our interface\ntext: any;\ncreateRoleForm: FormGroup;\nenteredText:any [];\n\n  ngOnInit(): void {\n    this.createRoleForm = this.fb.group({\n      text: ['', Validators.required]\n    })\n  }\n\n  //create the role and insert it into the db\n createRole(){\n  \n  const text = this.createRoleForm.controls.text.value;\n  console.log(text);\n  this.roleServce.createRole(text).subscribe( res => {\n    text\n  }, err => {\n    console.log(err)\n    alert(`There was an issue creating the role. Please ensure the role doesnt already exist. If this issue is reoccurring, please contact the system admin.`);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Role</mat-card-title>\n        <br />\n        <form [formGroup]=\"createRoleForm\" (ngSubmit)=\"createRole()\" #form=\"ngForm\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"enter role name\"\n                               formControlName=\"text\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createRoleForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: changePassword.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for changin the user password in the profile page\n * ================================\n * \n */\n\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { UserprofileService } from 'src/app/pages/services/userprofile.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar, \n  MatSnackBarVerticalPosition \n } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SuccessComponent } from '../success/success.component';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  form: FormGroup;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(\n    private userProfileServce: UserprofileService,\n    private fb: FormBuilder, \n    private http: HttpClient,\n    private _snackBar: MatSnackBar,\n    private cookieService: CookieService,\n    private dialog: MatDialog ) { }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      password: [null, Validators.compose([Validators.required])]\n    });\n  }\n\nchangePassword(){\n  const username = this.cookieService.get('sessionuser');\n  const password = this.form.controls.password.value;\n\n  //console.log(username);\n  //console.log(password);\n\n  this.userProfileServce.changeUserPassword(username, password).subscribe(res =>{\n    console.log(res)\n    if(res['message'] === 'Success!'){\n      //open new dialog\n      const dialogRef = this.dialog.open(SuccessComponent, {\n        width: \"100px\"\n      })\n\n    } else {\n      //call snackbar and display failure\n      this.errorMessage = 'Something went wrong.';\n        this.openSnackBar(this.errorMessage);\n\n    }\n  }, err => {\n    console.log(err);\n  })\n}\n\nopenSnackBar(errorMessage: string) {\n  this._snackBar.open(errorMessage, 'Close', {\n    duration: 7000,\n    verticalPosition: 'top',\n    panelClass: 'error'\n  });\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Changing Password</mat-card-title>\n        <br />\n        <form [formGroup]=\"form\" \n                      (ngSubmit)=\"changePassword(); form.reset()\" \n                      #loginForm=\"ngForm\">\n                      <mat-card-content>\n                          <div fxLayout=\"column\">\n                    <mat-form-field>\n                        <mat-label>New Password</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['password']\" \n                               placeholder=\"password\" \n                               type=\"password\" >\n                      </mat-form-field>\n                    </div>\n                    </mat-card-content>\n                      <mat-card-actions align=\"end\">\n                        <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                        <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!form.valid\">Change Password</button>\n                      </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/**\n * \n * ================================\n * ; Title: user-creation service\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Brendan Mulhen\n * ; Date: 11/9/2020\n * ; Description: User Creation Service\n * ================================\n * \n */\nimport { HttpClient} from '@angular/common/http'\nimport { Injectable } from '@angular/core';\nimport { User } from '../interfaces/user.interface'\nimport { Observable } from 'rxjs'\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserCreationService {\n\n  constructor(private http: HttpClient) { }\n  get(): Observable<User[]> {\n    return this.http.get<User[]>('/api/users')\n  }\n  getUserById(id): Observable<User> {\n    return this.http.get<User>(`/api/users/${id}`)\n  }\n  post(data): Observable<User> {\n    return this.http.post<User>('/api/users', data)\n  }\n  put(id, data): Observable<User> {\n    return this.http.put<User>(`/api/users/${id}`, data)\n  }\n  patch(id, data): Observable<User> {\n    return this.http.patch<User>(`/api/users/${id}`, data)\n  }\n\n  getAllUserRoles(): Observable<any>{\n    return this.http.get('/api/roles/');\n  }\n}\n","/**\n * \n * ================================\n * ; Title: auth.guard.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: file used for checking if a cookie was set/\n *                user has authorization to access a given page. \n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  //import our cookie service and router so we can use them with this guard\n  constructor(private router: Router, private cookieService: CookieService){\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isAuthenticated = this.cookieService.get('sessionuser');\n    if(isAuthenticated){\n      return true;\n    } else {\n    //if no sessionUser is present, then redirect them to the signin page.\n    this.router.navigate(['/session/signin']);\n    return false;\n   }\n  }\n}\n","/**\n * \n * ================================\n * ; Title: delete-security-question-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/26/2020\n * ; Description: Security Question Soft Delete Dialog Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-delete-securityquestion-dialog',\n  templateUrl: './delete-securityquestion-dialog.component.html',\n  styleUrls: ['./delete-securityquestion-dialog.component.css']\n})\nexport class DeleteSecurityquestionDialogComponent implements OnInit {\n\n  questionId: string;\n  //_id: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n\n  constructor(private dialogRef: MatDialogRef<DeleteSecurityquestionDialogComponent>,   \n    @Inject(MAT_DIALOG_DATA) data) { \n\n    //this._id = data._id;\n    this.questionId = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n\n<div mat-dialog-content>\n  <p> {{ dialogBody }} </p>\n</div>\n\n<hr />\n\n<div mat-dialog-actions align=\"end\">\n  <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n  <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\" cdkFocusInitial>Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: reset-password.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/31/2020\n * ; Description: component for managing password reset\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { MatSnackBar, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n//import { UserInterface } from '../../../shared/user.interface';\nimport { ViewChild } from '@angular/core';\nimport { VerifySecurityQuestionsComponent } from '../verify-security-questions/verify-security-questions.component';\nimport { VerifyUsernameComponent } from '../verify-username/verify-username.component';  \n\n\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class ResetPasswordComponent implements OnInit {\n\n   isAuthenticated: string;\n   username: string;\n   form3: FormGroup;  \n   successMessage: string;\n   verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n/*\n //begin add\n   @ViewChild(VerifyUsernameComponent) stepOneComponent: VerifyUsernameComponent;\n   @ViewChild(VerifySecurityQuestionsComponent) stepTwoComponent: VerifySecurityQuestionsComponent;\n   @ViewChild(ResetPasswordComponent) stepThreeComponent: ResetPasswordComponent;\n \n   get frmStepOne() {\n      return this.stepOneComponent ? this.stepOneComponent.form1 : null;\n   }\n \n   get frmStepTwo() {\n      return this.stepTwoComponent ? this.stepTwoComponent.form2 : null;\n   }\n \n   get frmStepThree() {\n      return this.stepThreeComponent ? this.stepThreeComponent.form3 : null;\n   }\n //end add\n */\n\nconstructor(private http: HttpClient, private route: ActivatedRoute, private router: Router, private fb: FormBuilder, private cookieService: CookieService, private _snackBar: MatSnackBar) {\n   this.isAuthenticated = this.route.snapshot.queryParamMap.get('isAuthenticated');\n   this.username = this.route.snapshot.queryParamMap.get('username');\n   console.log(this.username);\n\n//   if(!this.isAuthenticated) {\n//     this.router.navigate(['/session/signin'])\n//   }\n  }\n\n ngOnInit() {\n   this.form3 = this.fb.group({\n     password: [null, Validators.compose([Validators.required])]\n   });\n }\n\n navigateSecurityQuestions(){\n  this.router.navigate(['/session/verify-security-questions'], {queryParams: {username: this.username}, skipLocationChange: true});\n }\n\n resetPassword() {\n   console.log(this.username)\n   this.http.post('/api/session/users/' + this.username + '/reset-password', {\n     password: this.form3.controls['password'].value\n   }).subscribe(res => {\n     //user authenticated\n     this.cookieService.set('sessionuser', this.username, 1);  \n\n     this.successMessage = 'Password reset success. You will be redirected to the login screen.';\n     this.openSnackBar(this.successMessage);\n\n     this.router.navigate(['/']);\n   }, err => {\n     console.log(err);\n   })\n }\n openSnackBar(errorMessage: string) {\n  this._snackBar.open(errorMessage, 'Close', {\n    duration: 7000,\n    verticalPosition: 'top',\n    panelClass: 'error'\n  });\n}\n}","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n  <div fxFlex>\n    <h1>Reset Password</h1>\n    <mat-card class=\"mat-elevation-z8\">\n      <mat-card-content>\n        <!--inner container-->\n        <div fxLayout=\"column\" class=\"singinInnerContainer\">\n          <!--LOGO-->\n          <div fxFlex>\n            <img src=\"./assets/logo.png\" class=\"logo\" />\n          </div>\n          <h2>Enter New Password</h2>\n<!--\n          <mat-horizontal-stepper #stepper>\n            <mat-step [stepControl]=\"form3\">-->\n              <form\n                [formGroup]=\"form3\"\n                (ngSubmit)=\"resetPassword()\"\n                #resetPasswordForm\n              >\n              <!--<ng-template matStepLabel>Create New Password</ng-template>-->\n                <mat-card-content fxLayout=\"column\">\n                  <mat-form-field fxFlex>\n                    <input\n                      matInput\n                      type=\"password\"\n                      [formControl]=\"form3.controls['password']\"\n                      placeholder=\"Example: C10wn$ho3s\"\n                    />\n                  </mat-form-field>\n                  <br /><br />\n                  <div fxLayoutAlign=\"end\" fxLayoutGap=\"10px\">\n                    <a fxFlex fxLayoutAlign=\"start\" (click)=\"navigateSecurityQuestions()\">\n                      <mat-icon>west</mat-icon>\n                      </a>\n                      <button type=\"button\" mat-raised-button color=\"primary\" routerLink=\"/session/signin\">Cancel</button>\n                    <button mat-raised-button \n                    [disabled]=\"!form3.valid\"\n                    color=\"primary\">Submit</button>\n                  </div>\n                </mat-card-content>\n              </form>\n  <!--          </mat-step>\n          </mat-horizontal-stepper>-->\n        </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: more-vert-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User more-vert-dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PutDialogComponent } from '../../../user-admin-put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../../../user-admin-patch-dialog/patch-dialog.component'\n\n@Component({\n  selector: 'app-more-vert-dialog',\n  templateUrl: './more-vert-dialog.component.html',\n  styleUrls: ['./more-vert-dialog.component.css']\n})\nexport class MoreVertDialogComponent implements OnInit {\n\n  constructor(private dialog: MatDialog, private cookieService: CookieService) { }\n\n  ngOnInit(): void {\n  }\n  update() {\n    this.dialog.open(PutDialogComponent)\n   }\n   delete() {\n    this.dialog.open(PatchDialogComponent)\n  } \n}\n","<mat-card>\n    <mat-card-title>\n        <p>User Actions</p>\n    </mat-card-title>\n    <mat-card-actions style=\"align-items: center\">\n        <button mat-button mat-dialog-close (click)=\"update()\"><mat-icon class=\"material-icons\">update</mat-icon></button>\n        <button mat-button mat-dialog-close (click)=\"delete()\"><mat-icon class=\"material-icons\">delete</mat-icon></button>\n    </mat-card-actions>","/**\n * \n * ================================\n * ; Title: viewTransactionDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for viewing a sepcific transaction\n * ================================\n * \n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-viewtransactiondialog',\n  templateUrl: './viewtransactiondialog.component.html',\n  styleUrls: ['./viewtransactiondialog.component.css']\n})\nexport class ViewtransactiondialogComponent implements OnInit {\n\n//variable declaration\ntransaction;\nlaborAmount;\nlineItem;\nlineItems;\nlineItemTotal;\norderDate;\npartsAmount;\ngrandTotal;\ndiscount;\nsubtotal;\n\n  constructor(\n    private dialogRef: MatDialogRef<ViewtransactiondialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data\n    ) {\n\n      \n      this.transaction = data;\n      this.laborAmount = data.laborAmount;\n      this.lineItem = data.lineItem;\n      this.lineItemTotal = data.lineItemTotal;\n      this.orderDate = data.orderDate;\n      this.partsAmount = data.partsAmount;\n      this.grandTotal = data.total;\n      \n\n      this.subtotal = this.laborAmount + this.lineItemTotal + this.partsAmount;\n      this.discount = this.subtotal * .10;\n      for(let item of this.lineItem){\n        //console.log(item.title);\n      }\n     }\n\n     \n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-content>\n<p><span class=\"title\">Order Details</span><span style=\"float: right;\">Order Date:<br />{{transaction.orderDate | date:'medium'}}</span></p>\n<mat-divider></mat-divider>\n<br />\n      <div fxLayout=\"column\">\n              <div fxFlex>\n                <div fxLayout=\"row\">\n                  <div fxFlex>\n                <strong>Line Items:</strong>\n                <ul *ngFor=\"let item of transaction.lineItem\">\n                    <li>\n                    Title:{{item.title}}<br />Amount:{{item.price | currency}}\n                  \n                  </li>\n                  </ul>\n                  <strong>Line Item Total:</strong><br /> {{transaction.lineItemTotal | currency}}\n                </div>\n                <div fxFlex>\n                  <div fxFlex>\n                    <ul>\n                      <li><strong>Parts Amount:</strong><br /> {{transaction.partsAmount | currency}}</li>\n                      <li><strong>Labor Amount:</strong><br /> {{transaction.laborAmount | currency}}</li>\n                  </ul>\n                  </div>\n                </div>\n                </div>\n            </div>\n    </div><br />\n    <div align=\"end\">\n      <ul>\n        <li><h3>----Summary----</h3></li>\n        <li><strong>Parts & Labor Total:</strong><br /> {{transaction.partsAmount + transaction.laborAmount | currency}}</li>\n        <li><strong>Line Item Total:</strong><br /> {{transaction.lineItemTotal | currency}}</li>\n        <li><strong>Subtotal:</strong><br /> {{transaction.lineItemTotal + transaction.partsAmount + transaction.laborAmount| currency}}</li>\n        <li><strong style=\"color: green;\">Discount:</strong><br />-{{discount | currency}}\n        </li>\n      </ul>\n    </div>\n<h3 align=\"end\" style=\"font-weight: 600; text-decoration: underline;\">Grand Total: {{transaction.total | currency}}</h3>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button [mat-dialog-close]=\"false\" color=\"primary\">Close</button>\n</mat-dialog-actions>\n</mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: deleteCatalogItemDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for deleting item\n * ================================\n * \n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n\n@Component({\n  selector: 'app-delete-catalog-item',\n  templateUrl: './delete-catalog-item.component.html',\n  styleUrls: ['./delete-catalog-item.component.css']\n})\nexport class DeleteCatalogItemComponent implements OnInit {\n\n  catalogItemId: string;\n  dialogHeader: string;\n  dialogBody: string;\n  constructor(private dialogRef: MatDialogRef<DeleteCatalogItemComponent>,\n    private catalogService: CatalogService,\n    @Inject(MAT_DIALOG_DATA) data) {\n      console.log(data.catalogItem._id);\n      this.catalogItemId = data.catalogItem._id;\n      this.dialogHeader = data.dialogHeader;\n      this.dialogBody = data.dialogBody;\n     }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n<div mat-dialog-content>\n    <p> {{ dialogBody }}</p>\n\n</div>\n\n\n<hr /> \n\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n    <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\">Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: viewAllTranrsactions.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for displaying all transactions (archived and not)\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { PurchasehistoryService } from 'src/app/pages/services/purchasehistory.service';\nimport { ViewtransactiondialogComponent } from '../viewtransactiondialog/viewtransactiondialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-view-all-transactions-dialog',\n  templateUrl: './view-all-transactions-dialog.component.html',\n  styleUrls: ['./view-all-transactions-dialog.component.css']\n})\nexport class ViewAllTransactionsDialogComponent implements OnInit {\n  allPurchaseHistoryDataSource: any;\n  displayedColumns: string[] = ['date', 'amount', 'action'];\n  //actions: string[] = ['update', 'disable'];\n  checked: any = false;\n  username: string = this.cookieService.get('sessionuser');\n\n  constructor(\n    private cookieService: CookieService,\n    private purchaseHistoryService: PurchasehistoryService,\n    private dialog: MatDialog\n  ) {\n    this.purchaseHistoryService.findAllPurchasesByUserName(this.username).subscribe(res => {\n      this.allPurchaseHistoryDataSource = res['data'];\n      console.log(this.allPurchaseHistoryDataSource);\n    }, err => {\n      console.log(err);\n    })\n   }\n  ngOnInit(): void {\n  }\n\n\n\n/*\nFunction that allows us to view transaction details for one transaction.\n*/\nviewTransactionDetails(transaction){\n  //console.log(transaction);\n  const dialogRef = this.dialog.open(ViewtransactiondialogComponent, {\n    data: transaction,\n    disableClose: true,\n    width: '800px'\n  })\n\n  dialogRef.afterClosed().subscribe(result => {\n   // console.log('closed');\n  })\n}\n\n}\n","\n<mat-card>\n    <mat-card-content>\n<p>All Orders</p>\n<mat-dialog-content>\n<table mat-table [dataSource]=\"allPurchaseHistoryDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef>Date</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.orderDate | date:'medium'}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"amount\">\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.total | currency}} </td>\n      </ng-container>\n\n      <!-- Action Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"viewTransactionDetails(element)\">\n              <mat-icon>pageview</mat-icon>\n              <span>View Details</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n  </table>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-raised-button [mat-dialog-close]=\"false\" color=\"primary\">Close</button>\n  </mat-dialog-actions>\n</mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: success.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: reusable component responsible displaying a successful dialog\n * ================================\n * \n */\n\n\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css']\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div style=\"text-align: center; justify-content: center;\">\n<span class=\"material-icons\" style=\"color: green;\">\n            done_outline\n</span>\n<p>Success!</p>\n</div>","/**\n * \n * ================================\n * ; Title: updateCatalogItemDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for updating item\n * ================================\n * \n */\n\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CatalogService } from '../../services/catalog.service';\n\n@Component({\n  selector: 'app-update-catalog-item',\n  templateUrl: './update-catalog-item.component.html',\n  styleUrls: ['./update-catalog-item.component.css']\n})\nexport class UpdateCatalogItemComponent implements OnInit {\n  title;\n  price;\n  catalogItemId;\n  isDisabled;\n  updateCatalogItemForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n\n  constructor(\n    private catalogService: CatalogService, \n    private http: HttpClient,\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<UpdateCatalogItemComponent>,\n    @Inject(MAT_DIALOG_DATA) data){ \n\n      //set the values passed from the parent component\n      this.title = data.data.title;\n      this.price = data.data.price;\n      this.catalogItemId = data.data._id;\n      this.isDisabled = data.data.isDisabled;\n\n      this.updateCatalogItemForm = this.fb.group({\n      //pass the values into the form\n        title: [this.title, Validators.required],\n        price: [this.price, Validators.required],\n        catalogItemId: [this.catalogItemId],\n        isDisabled: [this.isDisabled, Validators.required]\n      })\n    }\n\n  ngOnInit(): void {\n  }\n\n  updateCatalogItem(){\n    //get the current values from the form\n    const title = this.updateCatalogItemForm.controls.title.value;\n    const price = this.updateCatalogItemForm.controls.price.value;\n    const catalogItemId = this.updateCatalogItemForm.controls.catalogItemId.value;\n    const isDisabled = this.selected;\n\n    //call the service and pass updated form values into the service\n    this.catalogService.updateCatalogItem(catalogItemId, title, price, isDisabled).subscribe( res =>{\n      catalogItemId\n      title\n      price\n      isDisabled\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Item</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateCatalogItemForm\" (ngSubmit)=\"updateCatalogItem()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"Enter item name\"\n                               formControlName=\"title\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <input type=\"number\" \n                               matInput\n                               placeholder=\"Enter item price\"\n                               formControlName=\"price\">\n                    </mat-form-field>\n\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateCatalogItemForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: updateRoledialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for updating role\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RoleService } from '../../services/role.service';\nimport { MatSelectModule } from '@angular/material/select'\n\n@Component({\n  selector: 'app-update-role-dialog',\n  templateUrl: './update-role-dialog.component.html',\n  styleUrls: ['./update-role-dialog.component.css']\n})\nexport class UpdateRoleDialogComponent implements OnInit {\n  text;\n  roleId;\n  isDisabled;\n  updateRoleForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n  constructor(private roleServce: RoleService, private http: HttpClient, private fb: FormBuilder, private dialogRef: MatDialogRef<UpdateRoleDialogComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.text = data.data.text;\n    this.roleId = data.data._id;\n    this.isDisabled = data.data.isDisabled;\n    \n    this.updateRoleForm = this.fb.group({\n      text: [this.text, Validators.required],\n      roleId: [this.roleId],\n      isDisabled: [this.isDisabled, Validators.required]\n    });\n  }\n  \n\n  ngOnInit(): void {\n  }\n\nupdateRole(){\n  const text = this.updateRoleForm.controls.text.value;\n  const roleId = this.updateRoleForm.controls.roleId.value;\n  const isDisabled = this.selected;\n\n  this.roleServce.updateRole(roleId, text, isDisabled).subscribe( res => {\n    text\n    roleId\n    isDisabled\n  }, err => {\n    console.log(err);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Role</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateRoleForm\" (ngSubmit)=\"updateRole()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"text\" \n                               matInput\n                               placeholder=\"enter role name\"\n                               formControlName=\"text\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateRoleForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: rolemanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for managing the role management table\n * ================================\n * \n */\n\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { RoleService } from 'src/app/pages/administration/services/role.service';\nimport { Role } from '../interfaces/role.interface';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HttpClient } from '@angular/common/http';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { DeleteRecordDialogComponentComponent } from './delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from '../dialogs/create-role-dialog/create-role-dialog.component';\nimport { UpdateRoleDialogComponent } from '../dialogs/update-role-dialog/update-role-dialog.component';\n\n//todo create a taskDialogComponent\n\n\n@Component({\n  selector: 'app-rolemanagement',\n  templateUrl: './rolemanagement.component.html',\n  styleUrls: ['./rolemanagement.component.css']\n})\n\n\n\nexport class RolemanagementComponent implements OnInit {\n  roleDataSource: Role[];\n  displayedColumns: string[] = ['role', 'status', 'action'];\n  actions: string[] = ['update', 'disable'];\n\n  constructor(private http: HttpClient, private dialog: MatDialog, private roleServce: RoleService) { \n    \n    /**\n      * Find All Roles\n      */\n     this.roleServce.findAllRoles().subscribe(res => {\n       this.roleDataSource = res['data'];\n       //console.log(this.roleDataSource);\n     }, err => {\n       console.log(err);\n     })\n  }\n  ngOnInit(): void {\n  }\n\n  /**\n   * \n   * \n   * SECTION FOR ROLE API (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n \n   //createRoleDialog\n   createRole(){\n     const dialogRef = this.dialog.open(CreateRoleDialogComponent, {\n       data: {\n         \n       },\n       disableClose: true,\n       width: \"800px\"\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'create'){\n        //update the list\n        this.roleServce.findAllRoles().subscribe(res => {\n          this.roleDataSource = res['data'];\n          //console.log(this.roleDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }\n     })\n   }\n\n   \n   //updateRoleDialog\n   updateRole(data){\n     console.log(data);\n     const dialogRef = this.dialog.open(UpdateRoleDialogComponent, {\n       data: {\n         data,\n         dialogHeader: 'Updating Role'\n       },\n       disableClose: true,\n       width:'800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if(result === 'update') {\n        this.roleServce.findAllRoles().subscribe(res => {\n          this.roleDataSource = res['data'];\n          //console.log(this.roleDataSource);\n        }, err => {\n          console.log(err);\n        })\n       }\n     })\n   }\n\n   //deleteRoleDialog\n  deleteRole(roleId){\n     const dialogRef = this.dialog.open(DeleteRecordDialogComponentComponent, {\n       data: {\n         roleId,\n         dialogHeader: 'Disabling Role',\n         dialogBody: `Are you sure you want to disable role ${roleId}?`\n       },\n       disableClose: true,\n       width: '800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'confirm') {\n         this.roleServce.deleteRole(roleId).subscribe(res => {\n           //console.log('Role successfully deleted')\n           //make another call to update the list\n           this.roleServce.findAllRoles().subscribe(res => {\n            this.roleDataSource = res['data'];\n            console.log(this.roleDataSource);\n          }, err => {\n            console.log(err);\n          })\n         })\n       }\n     })\n  }\n\n\n   \n}\n","\n<p>Roles <button mat-button class=\"crudButton\"(click)=\"createRole()\"><mat-icon class=\"matieral-icons\">library_add</mat-icon></button></p> \n\n<table mat-table [dataSource]=\"roleDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"role\">\n      <th mat-header-cell *matHeaderCellDef> Role </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.text}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n      </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateRole(element)\" [disabled]=\"element.text === 'Admin'\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n            <button mat-menu-item (click)=\"deleteRole(element._id)\" [disabled]=\"element.text === 'Admin'\">\n              <mat-icon>delete</mat-icon>\n              <span>Disable</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: orderhistory.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for purchase history management.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Invoice } from '../../../shared/invoice.interface';\nimport { PurchasehistoryService } from '../../services/purchasehistory.service';\nimport { ViewAllTransactionsDialogComponent } from '../dialogs/orderhistory/view-all-transactions-dialog/view-all-transactions-dialog.component';\nimport { ViewtransactiondialogComponent } from '../dialogs/orderhistory/viewtransactiondialog/viewtransactiondialog.component';\n\n\n@Component({\n  selector: 'app-orderhistory',\n  templateUrl: './orderhistory.component.html',\n  styleUrls: ['./orderhistory.component.css']\n})\nexport class OrderhistoryComponent implements OnInit {\n  purchaseHistoryDataSource: any;\n  displayedColumns: string[] = ['date', 'amount', 'action'];\n  actions: string[] = ['update', 'disable'];\n  checked: any = false;\n  username: string = this.cookieService.get('sessionuser');\n  nonArchivedPurchaseHistoryDataSource: any;\n\n  constructor(\n    private cookieService: CookieService, \n    private purchaseHistoryService: PurchasehistoryService,\n    private dialog: MatDialog) {\n   \n  //populate all the transactions for a user, but we'll filter out the archived ones on the html side\n  this.purchaseHistoryService.findAllPurchasesByUserName(this.username).subscribe(res => {\n    \n    //pull back all transactions\n    this.purchaseHistoryDataSource = res['data'];\n\n    //filter out the archived transractions and push them into a new datasource array\n    this.nonArchivedPurchaseHistoryDataSource = [];\n    for(let item of this.purchaseHistoryDataSource){\n      if(item.isDisabled != true ){\n        this.nonArchivedPurchaseHistoryDataSource.push(item);\n      }\n    }\n    //console.log(this.purchaseHistoryDataSource);\n  }, err => {\n    console.log(err);\n  })\n   }\n\n\n  ngOnInit(): void {\n  }\n\n/*\nFunction that allows us to view transaction details for one transaction.\n*/\nviewTransactionDetails(transaction){\n  //console.log(transaction);\n  const dialogRef = this.dialog.open(ViewtransactiondialogComponent, {\n    data: transaction,\n    disableClose: true,\n    width: '800px'\n  })\n\n  dialogRef.afterClosed().subscribe(result => {\n   // console.log('closed');\n  })\n}\n\n\n/**\n * \n * Function that launches a dialog to show all the users transactions\n * \n */\nviewAllTransactions(){\n  const dialogRef = this.dialog.open(ViewAllTransactionsDialogComponent, {\n    disableClose: true,\n    width: '800px'\n  })\n\n  dialogRef.afterClosed().subscribe(result => {\n    //console.log('closed.')\n  })\n}\n\n\n/**\n * \n * Function that archives a transaction\n * \n */\narchiveTransraction(invoiceId){\n  console.log(invoiceId);\n  this.purchaseHistoryService.archiveTransaction(invoiceId).subscribe(res => {\n    //after patch refresh the data.\n    this.purchaseHistoryService.findAllPurchasesByUserName(this.username).subscribe( res => {\n      //pull back all transactions\n    this.purchaseHistoryDataSource = res['data'];\n\n    //filter out the archived transractions and push them into a new datasource array\n    this.nonArchivedPurchaseHistoryDataSource = [];\n    for(let item of this.purchaseHistoryDataSource){\n      if(item.isDisabled != true ){\n        this.nonArchivedPurchaseHistoryDataSource.push(item);\n      }\n    }\n    })\n    \n   \n  }, err => {\n    console.log(err);\n  })\n\n  \n}\n}\n","<p>Recent Orders<button mat-raised-button (click)=\"viewAllTransactions()\" class=\"crudButton\">View All</button></p>\n\n\n\n<table mat-table [dataSource]=\"nonArchivedPurchaseHistoryDataSource\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef>Date</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.orderDate | date}} </td>\n    </ng-container>\n\n    <!-- Status Column-->\n    <ng-container matColumnDef=\"amount\">\n        <th mat-header-cell *matHeaderCellDef> Amount </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.total | currency}} </td>\n      </ng-container>\n  \n    <!-- Action Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef></th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <!--Button For Actions-->\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"viewTransactionDetails(element)\">\n              <mat-icon>pageview</mat-icon>\n              <span>View Details</span>\n            </button>\n            <button mat-menu-item (click)=\"archiveTransraction(element._id)\">\n              <mat-icon>delete</mat-icon>\n              <span>Archive</span>\n            </button>\n          </mat-menu>\n    </td>\n    </ng-container>\n  \n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>","/**\n * \n * ================================\n * ; Title: updateContactDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for changin the user password in the profile page\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { MatSnackBar, \n  MatSnackBarVerticalPosition \n } from '@angular/material/snack-bar';\n import { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { SuccessComponent } from '../success/success.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport  { UserprofileService } from '../../../services/userprofile.service';\n\n@Component({\n  selector: 'app-update-contact-dialog',\n  templateUrl: './update-contact-dialog.component.html',\n  styleUrls: ['./update-contact-dialog.component.css']\n})\nexport class UpdateContactDialogComponent implements OnInit {\n\n  \n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n  user = this.cookieService.get('sessionuser');\n  userData: Object;\n  firstName: string;\n  lastName: string;\n  phone: string;\n  address: string;\n  email: string;\n  role: string;\n  updateContactForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder, \n    private http: HttpClient,\n    private _snackBar: MatSnackBar,\n    private cookieService: CookieService,\n    private dialog: MatDialog,\n    private userProfileService: UserprofileService ) {\n\n\n/**\n * \n * Initialize the form.\n * \n */\n    console.log(this.email);\n    this.updateContactForm = this.fb.group({\n      firstName: [{value: this.firstName, disabled: true}, Validators.required],\n      lastName: [{value: this.lastName, disabled: true}, Validators.required],\n      phone: [this.phone, Validators.required],\n      address: [this.address, Validators.required],\n      email: [this.email, Validators.required],\n      role: [{value: this.role, disabled: true}, Validators.required],\n    });\n\n   //make a call to get the user details and set are initialized form values\n   this.userProfileService.getUserDetails(this.user).subscribe( res => {\n    this.userData = res.data;\n    this.firstName = res.data.firstName;\n    this.lastName = res.data.lastName;\n    this.phone = res.data.phoneNumber;\n    this.address = res.data.address;\n    this.email = res.data.email;\n    this.role = res.data.role;\nconsole.log(res);\n    //map the values above into the form.\n    this.updateContactForm = this.fb.group({\n      firstName: [{value: this.firstName, disabled: true}, Validators.required],\n      lastName: [{value: this.lastName, disabled: true}, Validators.required],\n      phone: [this.phone, Validators.required],\n      address: [this.address, Validators.required],\n      email: [this.email, Validators.required],\n      role: [{value: this.role, disabled: true}, Validators.required],\n    });\n  });\n  \n     }\n\n\n  ngOnInit(): void {}\n\n\n  changeUserContactDetails(){\n    const userId = this.cookieService.get('userId');\n    const firstName = this.updateContactForm.controls.firstName.value;\n    const lastName = this.updateContactForm.controls.lastName.value;\n    const username = this.user; \n    const contactPhone = this.updateContactForm.controls.phone.value;\n    const contactAddress = this.updateContactForm.controls.address.value;\n    const contactEmail = this.updateContactForm.controls.email.value;\n    const role = this.updateContactForm.controls.role.value;\n  \n    this.userProfileService.updateUserContactDetails(\n                                                      userId,\n                                                      firstName,\n                                                      lastName,\n                                                      username,\n                                                      contactPhone,\n                                                      contactAddress,\n                                                      contactEmail,\n                                                      role).subscribe( res =>{\n                                                        //console.log(res);\n                                                        const dialogRef = this.dialog.open(SuccessComponent, {\n                                                          width: \"100px\"\n                                                        })\n                                                      }, err => {\n                                                        this.errorMessage = 'Something went wrong.';\n                                                        this.openSnackBar(this.errorMessage);\n                                                      });\n  }\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Updating Contact Information</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateContactForm\" (ngSubmit)=\"changeUserContactDetails()\">\n                      <mat-card-content>\n                          <div fxLayout=\"column\">\n                    <mat-form-field>\n                        <mat-label>First Name</mat-label>\n                        <input matInput \n                                formControlName=\"firstName\"\n                               [formControl]=\"updateContactForm.controls['firstName']\" \n                               placeholder=\"First Name\" >\n                      </mat-form-field>\n                      \n                      <mat-form-field>\n                        <mat-label>Last Name</mat-label>\n                        <input matInput \n                        formControlName=\"lastName\"\n                               [formControl]=\"updateContactForm.controls['lastName']\" \n                               placeholder=\"Last Name\" >\n                      </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>Phone</mat-label>\n                        <input matInput \n                        formControlName=\"phone\"\n                               [formControl]=\"updateContactForm.controls['phone']\" \n                               placeholder=\"phone\" >\n                      </mat-form-field>\n\n                      <mat-form-field>\n                        <mat-label>Address</mat-label>\n                        <input matInput \n                        formControlName=\"address\"\n                               [formControl]=\"updateContactForm.controls['address']\" \n                               placeholder=\"address\" >\n                      </mat-form-field>\n\n                      <mat-form-field>\n                        <mat-label>Email</mat-label>\n                        <input matInput \n                        formControlName=\"email\"\n                               [formControl]=\"updateContactForm.controls['email']\" \n                               placeholder=\"email\" >\n                      </mat-form-field>\n\n                      <mat-form-field>\n                        <mat-label>Role</mat-label>\n                        <input matInput \n                        formControlName=\"role\"\n                               [formControl]=\"updateContactForm.controls['role']\" \n                               placeholder=\"Role\" >\n                      </mat-form-field>\n                    \n\n                    </div>\n                    </mat-card-content>\n                      <mat-card-actions align=\"end\">\n                        <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                        <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateContactForm.valid\">Update Details</button>\n                      </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: update-securityquestion-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: Security Question Update Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SecurityQuestionService } from '../../services/security-question.service';\n\n\n\n@Component({\n  selector: 'app-update-securityquestion-dialog',\n  templateUrl: './update-securityquestion-dialog.component.html',\n  styleUrls: ['./update-securityquestion-dialog.component.css']\n})\nexport class UpdateSecurityquestionDialogComponent implements OnInit {\n\n  questionId;\n  securityQuestionId;\n  isDisabled;\n  updateSecurityQuestionForm: FormGroup;\n  enteredText:any [];\n  options: Boolean[] = [true, false];\n  selected;\n\n  constructor(private SecurityQuestionService: SecurityQuestionService, private http: HttpClient, private fb: FormBuilder, private dialogRef: MatDialogRef<UpdateSecurityquestionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) {\n\n      this.questionId = data.data.questionId;\n      this.securityQuestionId = data.data._id;\n      this.isDisabled = data.data.isDisabled;\n      this.updateSecurityQuestionForm = this.fb.group({\n        questionId: [this.questionId, Validators.required],\n        securityQuestionId: [this.securityQuestionId],\n        isDisabled: [this.isDisabled, Validators.required]\n      })\n     }\n\n  ngOnInit(): void {\n  }\n\n  updateSecurityQuestion() {\n    const questionId = this.updateSecurityQuestionForm.controls.questionId.value;\n    const securityQuestionId = this.updateSecurityQuestionForm.controls.securityQuestionId.value;\n    const isDisabled = this.selected;\n\n    this.SecurityQuestionService.updateSecurityQuestion(securityQuestionId, questionId, isDisabled).subscribe( res => {\n      securityQuestionId\n      questionId\n      isDisabled\n    }, err => {\n      console.log(err);\n    })\n  }\n\n}\n\n\n\n\n\n\n\n \n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Update Security Question</mat-card-title>\n        <br />\n        <form [formGroup]=\"updateSecurityQuestionForm\" (ngSubmit)=\"updateSecurityQuestion()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"questionId\" \n                               matInput\n                               placeholder=\"Enter security question\"\n                               formControlName=\"questionId\">\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>isDisabled?</mat-label>\n                        <mat-select [(value)]=\"selected\">\n                          <mat-option value=\"true\">True</mat-option>\n                          <mat-option value=\"false\">False</mat-option>\n                        </mat-select>\n    \n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!updateSecurityQuestionForm.valid\"\n                                >Update</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: role.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for interfacing with our apis for the role-management\n *  component\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Role } from '../interfaces/role.interface'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  //import http client\n  constructor(private http: HttpClient) { }\n\n\n  /**\n   * \n   * Find All Roles\n   * \n   */\n   findAllRoles(): Observable<any>{\n     return this.http.get(`/api/roles/`);\n   }\n\n   /**\n   * \n   * Find Role By ID\n   * \n   */\n  findRoleById(roleId: string): Observable<any>{\n    return this.http.get(`/api/roles/${roleId}`)\n  }\n\n\n   /**\n    * \n    * Create Role\n    * \n    */\ncreateRole(text: Role): Observable<any>{\n  return this.http.post(`/api/roles/`, {\n    text: text \n  })\n}\n\n\n  /**\n   * \n   * Update Role\n   * \n   */\nupdateRole(roleId: String, text: Role, isDisabled: Boolean): Observable<any>{\n  return this.http.put(`/api/roles/${roleId}/update`, {\n    text,\n    isDisabled\n  })\n}\n\n  /**\n   * \n   * Delete Role\n   * \n   */\n  deleteRole(roleId: String): Observable<any>{\n    return this.http.patch(`/api/roles/${roleId}`,{\n      roleId\n    })\n  }\n}\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``]\n})\nexport class AppComponent {\n  \n}\n","/**\n * \n * ================================\n * ; Title: userdetails.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/24/2020\n * ; Description: component responsible for populating the user details\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserprofileService } from '../../services/userprofile.service'\n\n@Component({\n  selector: 'app-userdetails',\n  templateUrl: './userdetails.component.html',\n  styleUrls: ['./userdetails.component.css']\n})\nexport class UserdetailsComponent implements OnInit {\n  username: string = this.cookieService.get('sessionuser');\n  userDetailsDataSource;\n  firstName;\n  lastName;\n  phone;\n  address;\n  email;\n  role;\n  dateCreated;\n  dateModified;\n\n\n  constructor(\n    private dialog: MatDialog, \n    private userProfileService: UserprofileService,\n    private cookieService: CookieService) {\n\n    /**\n     * \n     * Pull in the user details\n     * \n     */\n\n     this.userProfileService.getUserDetails(this.username).subscribe(res => {\n      this.userDetailsDataSource = res['data'];\n      this.firstName = this.userDetailsDataSource.firstName;\n      this.lastName = this.userDetailsDataSource.lastName;\n      this.phone = this.userDetailsDataSource.phoneNumber;\n      this.address = this.userDetailsDataSource.address;\n      this.email = this.userDetailsDataSource.email;\n      this.role = this.userDetailsDataSource.role;\n      this.dateCreated = this.userDetailsDataSource.date_created;\n\n      //console.log(this.userDetailsDataSource);\n     })\n   }\n\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"personalInfo\"> \n    <h1>Personal Details</h1>\n    <div class=\"innerPersonalDetails\">\n    <li style=\"padding-top: 10px;\">Username: {{username}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>First Name: {{firstName}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>Last Name: {{lastName}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>Phone: {{phone}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>Address: {{address}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>Email: {{email}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>Role: {{role}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li>Date Created: {{dateCreated | date}}</li>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <li style=\"padding-bottom: 10px;\">Date Modified: TODO</li>\n</div>\n<br />\n</div>","/**\n * \n * ================================\n * ; Title: signin.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling signin form\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, \n  MatSnackBarVerticalPosition \n } from '@angular/material/snack-bar'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n}\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  form: FormGroup;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(private router: Router, \n    private cookieService: CookieService, \n    private fb: FormBuilder, \n    private http: HttpClient,\n    private _snackBar: MatSnackBar) { \n\n  }\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      userName: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n  signin(){\n    const username = this.form.controls.userName.value;\n    const password = this.form.controls.password.value;\n\n    //console.log(username);\n    //console.log(password);\n    \n\n    this.http.post('/api/session/signin', {\n      username,\n      password\n    }).subscribe(res => {\n      //console.log(res['data']._id);\n      if (res['data'].username){\n        //user authenticated\n        //set the username and ID cookies, we'll use these all over the application\n        this.cookieService.set('sessionuser', res['data'].username, 1);\n        this.cookieService.set('userId', res['data']._id, 1);\n        this.router.navigate(['/']);\n      }\n    }, err => {\n      this.errorMessage = 'Invalid username or password. Try again.';\n        this.openSnackBar(this.errorMessage);\n    });\n  }\n\n\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n  }\n}\n","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n        <!--inner container-->\n        <div fxLayout=\"column\" class=\"singinInnerContainer\">\n            <!--LOGO-->\n            <div fxFlex>\n                <img src=\"./assets/logo.png\" class=\"logo\">\n            </div>\n\n            <!--SigninForm-->\n            <div fxFlex class=\"signInFormStuff\">\n                <form [formGroup]=\"form\" \n                      (ngSubmit)=\"signin(); form.reset()\" \n                      #loginForm=\"ngForm\">\n                    <mat-form-field>\n                        <mat-label>Username</mat-label>\n                        <input matInput \n                               [formControl]=\"form.controls['userName']\" \n                               placeholder=\"username\" >\n                      </mat-form-field><br />\n                      <mat-form-field>\n                        <mat-label>Password</mat-label>\n                        <input matInput \n                                type=\"password\"\n                               [formControl]=\"form.controls['password']\"\n                               placeholder=\"password\">\n                      </mat-form-field>\n                      <p>\n                        <button type=\"submit\" \n                                fxFlex \n                                mat-raised-button \n                                color=\"primary\"\n                                [disabled]=\"!form.valid\">Sign-in</button>\n                      </p>\n                </form>\n            </div>\n\n            <!--Forgot-->\n            <div fxFlex>\n               <a routerLink=\"/session/forgot/\">Forgot Password?</a>\n            </div>\n            \n\n            <!--Divider-->\n            <div fxFlex>\n                <hr class=\"divider\">\n            </div>\n\n             <!--Signup Password-->\n            <div fxFlex class=\"signUpSection\">\n                    <button type=\"submit\" \n                                fxFlex \n                                mat-raised-button \n                                color=\"primary\"\n                                routerLink=\"/session/createAccount\">Sign-Up</button>\n            </div>\n        </div>\n    </mat-card-content>\n    </mat-card>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: createOrder.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for creating new invoices/orders.\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { CatalogService } from '../../administration/services/catalog.service';\nimport { Catalog } from '../../administration/interfaces/catalog.interface';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { InvoiceReviewDialogComponent } from '../dialogs/invoice-review-dialog/invoice-review-dialog.component';\nimport { UserprofileService } from '../../services/userprofile.service';\nimport { SuccessComponent } from '../../profile/dialogs/success/success.component';\nimport { MatSnackBar, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-createorder',\n  templateUrl: './createorder.component.html',\n  styleUrls: ['./createorder.component.css']\n})\nexport class CreateorderComponent implements OnInit {\nform: FormGroup;\nuserName: string;\nallServices: []; //all the services (disabled and enabled)\nactiveServices: []; //only enabled services\nlineItems: any[];\ndiscount: string;\nerrorMessage: string;\nverticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n\n  constructor(\n    private catalogService: CatalogService,\n    private cookieService: CookieService,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private router: Router,\n    private userProfileService: UserprofileService\n    ) {\n\n    //get the username\n    this.userName = this.cookieService.get('sessionuser');\n\n    /**\n     * \n     * Find all catalog items\n     * \n     */\n    this.catalogService.findAllCatalogItems().subscribe(res => {\n      this.allServices = (res['data']);\n      \n      //filter out the archived transractions and push them into a new datasource array\n    this.activeServices = [];\n    for(let item of this.allServices){\n      if(item['isDisabled'] != true ){\n        this.activeServices.push(item);\n      }\n    }\n    //console.log(this.activeServices);\n    }, err => {\n      console.log(err);\n    })\n\n   }\n\n  ngOnInit(): void {}\n\n  logform(){\n    console.log(this.form);\n    this.router.navigate(['/']);\n  }\n\n  submit(form){\n    console.log(form);\n    //console.log('form just got logged')\n    const selectedServiceIds = [];\n\n    for(const[key, value] of Object.entries(form.checkGroup)) {\n      if(value) {\n        selectedServiceIds.push({\n          id: key\n        })\n      }\n    }\n    //console.log(selectedServiceIds);\n    this.lineItems = [];\n\n    /**\n     * \n     * Build the invoice object\n     * \n     */\n     for(const savedService of this.activeServices){\n       for(const selectedService of selectedServiceIds) {\n         if(savedService['_id'] === selectedService.id){\n          this.lineItems.push({\n            title: savedService['title'],\n            price: savedService['price']\n          });\n         }\n       }\n     }\n     //console.log(this.lineItems);\n \n     const partsAmount = parseFloat(form.parts);\n     console.log(partsAmount);\n     const laborAmount = form.labor * 50;\n     const lineItemTotal = this.lineItems.reduce((prev, cur) => prev + cur.price, 0);\n     const subTotal = partsAmount + laborAmount + lineItemTotal;\n     const discount = parseFloat(subTotal) * .10;\n     const total = subTotal - discount\n     //console.log(total);\n\n     const invoice = {\n       userName: this.userName,\n       lineItems: this.lineItems,\n       partsAmount: partsAmount,\n       laborAmount: laborAmount,\n       lineItemTotal: lineItemTotal,\n       total: total,\n       orderDate: new Date()\n     } \n\n     //console.log(invoice);\n     const dialogRef = this.dialog.open(InvoiceReviewDialogComponent, {\n       data: {\n         invoice: invoice,\n         discount: discount\n       },\n       disableClose: true,\n       width: '800px'\n     });\n\n     dialogRef.afterClosed().subscribe(result => {\n       if (result === 'confirm') {\n         console.log('Invoice saved');\n         this.userProfileService.createInvoice(invoice).subscribe(res => {\n           console.log(res);\n           if(res['message'] === 'Successful POST Request'){\n            this.router.navigate(['/']);\n           this.dialog.open(SuccessComponent, {\n            width: \"100px\"\n           }\n           \n           \n           )} else {\n             //do something\n             console.log('something went wrong.')\n           }\n\n           \n         }, err => {\n           console.log(err);\n         });\n       } else if (result === 'cancel'){\n        //do something\n       console.log(form.parts)\n       }  \n     })     \n  }\n}\n","<p>Create Order</p> \n\n<mat-card>\n        <form \n        #serviceRepairForm=\"ngForm\" \n        (ngSubmit)=\"submit(serviceRepairForm.value); serviceRepairForm.reset();\">\n            <mat-card-content>\n                <div fxLayout=\"column\">\n                    <h3>Services</h3>\n                    <div fxFlex>\n                            <div fxFlex ngModelGroup=\"checkGroup\">\n                                <ul>\n                            <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly\"\n                            >\n                                <li *ngFor=\"let service of activeServices\">\n                                    <mat-checkbox name=\"{{service._id}}\" ngModel color=\"accent\">\n                                        {{service.title}} ({{service.price | currency}})\n                                    </mat-checkbox>\n                                </li>\n                            </div>\n                        </ul>\n                            </div>\n                    </div>\n                </div>\n                <mat-divider></mat-divider>\n                <br />\n                <!--Parts and Labor-->\n                <div fxLayout=\"column\">\n                    <h4 fxFlex>Standard Fees</h4>\n                    <mat-form-field style=\"width: 300px !important;\">\n                        <input matInput name=\"parts\" ngModel=\"0\" placeholder=\"Parts\" type=\"number\" min=\"0\" required/>\n                    </mat-form-field>\n\n                    <mat-form-field style=\"width: 300px !important;\">\n                        <input matInput name=\"labor\" ngModel=\"0\" placeholder=\"Labor @ 50.00/hr\" type=\"number\" min=\"0\" required/>\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <!--Form actions-->\n            <mat-divider></mat-divider>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button type=\"reset\" color=\"warn\" (click)=\"serviceRepairForm.reset();\">Reset</button>\n                <button mat-raised-button color=\"primary\" [disabled]=\"!serviceRepairForm.valid\">Submit</button>\n            </mat-card-actions>\n        </form>\n</mat-card>","/**\n * \n * ================================\n * ; Title: put-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User put dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\nimport { UserCreationService } from '../../services/user-creation.service'\nimport { UserprofileService } from 'src/app/pages/services/userprofile.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n}\n\n@Component({\n  selector: 'app-put-dialog',\n  templateUrl: './put-dialog.component.html',\n  styleUrls: ['./put-dialog.component.css']\n})\nexport class PutDialogComponent implements OnInit {\n  updatedUserForm: FormGroup\n  user: any\n  roles: any\n  selected: any\n  rolesDataSource;\n  filteredRolesDataSource;\n\n  \n  constructor(private userCreationService: UserCreationService, private cookieService: CookieService, private http: HttpClient, private fb: FormBuilder, private userProfileService: UserprofileService) {\n\n   }\n  ngOnInit() {\n    this.userCreationService.get().subscribe(res => {\n      this.roles = res['data']\n      //console.log(this.roles);\n    });\n\n    \n    this.userCreationService.getAllUserRoles().subscribe(res =>{\n      console.log(res.data);\n      //get all the roles and set it to our initial data array\n      this.rolesDataSource = res.data;\n\n      //Initialize the new array, filter out the disabled ones, and pushed the active ones into the new array\n      this.filteredRolesDataSource = [];\n      for (let role of this.rolesDataSource){\n        if(role.isDisabled !== true){\n          this.filteredRolesDataSource.push(role);\n        }\n      }\n      //console.log(this.filteredSecurityQuestionsDataSource);\n    })\n\n\n    this.updatedUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])],\n      role: [null, Validators.required]\n    })\n   /* let id = this.cookieService.get('updateId')\n    this.http.get(`http://localhost:3000/api/user/${id}`).subscribe(user => {\n      this.user = user['data']\n    }) */\n  }\n  updateUser() {\n    let updatedUser = {\n      username: this.updatedUserForm.get('username').value,\n      password: this.updatedUserForm.get('password').value,\n      firstName: this.updatedUserForm.get('firstName').value,\n      lastName: this.updatedUserForm.get('lastName').value,\n      address: this.updatedUserForm.get('address').value,\n      email: this.updatedUserForm.get('email').value,\n      phoneNumber: this.updatedUserForm.get('phoneNumber').value,\n      role: this.updatedUserForm.controls.role.value\n    }\n    let id = this.cookieService.get('id')\n    this.userCreationService.put(id, updatedUser).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"UPDATE Success\")\n    })\n    this.updatedUserForm.reset();\n  }\n}\n","<mat-card class=\"text-center\">\n    <mat-card-content>\n        <form (ngSubmit)=\"updateUser()\" [formGroup]=\"updatedUserForm\">\n        <mat-card-title>\n            <h1>Update User</h1>\n        </mat-card-title>\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" formControlName=\"username\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. Jerry\" formControlName=\"lastName\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n            <br>\n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput class=\"text-center\" placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <div>\n                <mat-label>Role</mat-label>\n                <br>\n                <mat-select [formControl]=\"updatedUserForm.controls['role']\">\n                    <mat-option *ngFor=\"let role of filteredRolesDataSource\" [value]=\"role.text\">{{ role.text }}</mat-option>\n                </mat-select>\n            </div>\n            <mat-dialog-actions>\n                <button mat-button mat-dialog-close>Cancel</button>\n                <button type=\"submit\"mat-button mat-dialog-close>Update User</button>\n            </mat-dialog-actions>\n            <br>\n            <br>\n        </form>\n    </mat-card-content>\n    </mat-card>","/**\n * \n * ================================\n * ; Title: Invoice Dialog\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Component dialog responsible for invoice summary\n * ================================\n * \n */\n\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-invoice-review-dialog',\n  templateUrl: './invoice-review-dialog.component.html',\n  styleUrls: ['./invoice-review-dialog.component.css']\n})\nexport class InvoiceReviewDialogComponent implements OnInit {\ninvoice: any;  \ndiscount: any;\n\n  constructor(\n    private dialogRef: MatDialogRef<InvoiceReviewDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) { \n      this.invoice = data.invoice;\n      this.discount = data.discount;\n      console.log(this.discount);\n        }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-content>\n<p><span class=\"title\">Order Details</span><span style=\"float: right;\">Order Date:<br />{{invoice.orderDate | date:'medium'}}</span></p>\n<mat-divider></mat-divider>\n<br />\n      <div fxLayout=\"column\">\n              <div fxFlex>\n                <div fxLayout=\"row\">\n                  <div fxFlex>\n                <strong>Line Items:</strong>\n                <ul *ngFor=\"let item of invoice.lineItems\">\n                    <li>\n                    Title: {{item.title}}<br />Amount: {{item.price | currency}}\n                  </li>\n                  </ul>\n                  <strong>Line Item Total:</strong><br /> {{invoice.lineItemTotal | currency}}\n                </div>\n                <div fxFlex>\n                  <div fxFlex>\n                    <ul>\n                      <li><strong>Parts Amount:</strong><br /> {{invoice.partsAmount | currency}}</li>\n                      <li><strong>Labor @ $50 per/hour:</strong><br /> {{invoice.laborAmount | currency}}</li>\n                  </ul>\n                  </div>\n                </div>\n                </div>\n            </div>\n    </div><br />\n    <span style=\"text-align: center;\"><strong>10% off automatically applied!! </strong></span>\n    <div align=\"end\">\n      <ul>\n        <li><h3>----Summary----</h3></li>\n        <li><strong>Parts & Labor Total:</strong><br /> {{invoice.laborAmount + invoice.partsAmount | currency}}</li>\n        <li><strong>Line Item Total:</strong><br /> {{invoice.lineItemTotal | currency}}</li>\n        <li><strong>Subtotal:</strong><br /> {{invoice.lineItemTotal + invoice.laborAmount + invoice.partsAmount| currency}}</li>\n        <li><strong style=\"color: green;\">Discount:</strong><br />-{{discount | currency}}\n        </li>\n      </ul>\n    </div>\n<h3 align=\"end\" style=\"font-weight: 600; text-decoration: underline;\">Grand Total: {{invoice.total | currency}}</h3>\n\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n  <button mat-raised-button matDialogClose=\"confirm\" color=\"primary\" cdkFocusInitial>Submit Order</button>\n</mat-dialog-actions>\n</mat-card-content>\n</mat-card>\n","/**\n * \n * ================================\n * ; Title: contact.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for contact page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"outerContainer\">\n    <div fxFlex>\n        <img src=\"./assets/contact2.png\" class=\"logo\">\n        <h1>Contact Us</h1><br />\n     <!--Image source for royaltyFreeImg.png\n        Black Line Background - Unlimited Download. cleanpng.com. (n.d.). Retrieved September 07, 2020, from https://www.cleanpng.com/png-computer-icons-certified-financial-planner-wrenche-2330581/\n      -->\n    </div>\n<div fxFlex>\n<mat-card>\n<mat-card-content>\n<div fxLayout=\"row\" fxLayoutGap=\"10px\">\n    <div fxFlex >\n       <mat-card>\n           <mat-card-content>\n               <h2>Options</h2>\n               <ul>\n                   <li>\n                    <span class=\"material-icons\">\n                        phone\n                        </span>\n                   </li>\n                   <li class=\"strong\">\n                       Phone:\n                   </li>\n                   <li>\n                    <a href=\"tel:402-555-3535\">402-555-4545</a>\n                   </li><br />\n\n                   <li>\n                    <span class=\"material-icons\">\n                        email\n                        </span>\n                   </li>\n                   <li class=\"strong\">\n                       Email:\n                   </li>\n                   <li>\n                    <a href = \"mailto: bob@bcrs.com\">bob@bcrs.com</a>\n                   </li>\n               </ul>\n           </mat-card-content>\n       </mat-card>\n    </div>\n    <div fxFlex>\n       <mat-card>\n           <mat-card-content>\n               <h2>Location</h2>\n               <ul>\n                   <li><span class=\"material-icons\">\n                    storefront\n                    </span></li>\n                   <li class=\"strong\">Address</li>\n                   <a href=\"https://goo.gl/maps/bN2ek2FugCCSoBAc8\">\n                   <li>123 test st</li>\n                   <li>Omaha, NE 68104</li>\n                   <li>Unidted States</li>\n                </a>\n               </ul>\n           </mat-card-content>\n       </mat-card>\n    </div>\n</div>\n</mat-card-content>\n</mat-card>\n</div>\n</div><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","/**\n * \n * ================================\n * ; Title: security-question.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/24/2020\n * ; Description: component responsible for interfacing with our apis for the security-question\n *  component\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SecurityQuestionService {\n\n  constructor(private http: HttpClient) { }\n\n  \n  /**\n   * \n   * Find All Security Questions\n   * \n   */\n    findAllSecurityQuestions(): Observable<any> {\n      return this.http.get(`/api/securityQuestions/`);\n    }\n   /**\n   * \n   * Find Security Question by ID\n   * \n   */\n\n  findSecurityQuestionById(_id: string): Observable<any> {\n    return this.http.get('/api/securityQuestions/' + _id);\n  }\n  \n\n   /**\n    * \n    * Create Security Question\n    * \n    */\n\n createSecurityQuestion(questionId: string): Observable<any> {\n  return this.http.post('/api/securityQuestions/', {\n    questionId\n  })\n}\n\n  /**\n   * \n   * Update Security Question\n   * \n   */\n\n   updateSecurityQuestion(_id: string, questionId: string, isDisabled: boolean): Observable<any> {\n   return this.http.put('/api/securityQuestions/'+ _id, {\n    questionId,\n    isDisabled\n    })\n  }\n\n\n\n\n  /**\n   * \n   * Delete Security Question\n   * \n   */\n\n   deleteSecurityQuestion(questionId: string): Observable<any> {\n     return this.http.patch('/api/securityQuestions/' + questionId, {\n       //isDisabled: true\n       questionId\n     });\n   }\n\n}\n\n\n","/**\n * \n * ================================\n * ; Title: not-found.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for not found page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"./assets/profile.png\">\n<!--Royalty free image obtained from here, then altered by James. https://www.google.com/search?q=profile+placeholder+logo&tbm=isch&ved=2ahUKEwjBypCa4OTsAhUIOK0KHVHaDswQ2-cCegQIABAA&oq=profile+placeholder+logo&gs_lcp=CgNpbWcQAzoECCMQJzoGCAAQBRAeOgYIABAIEB46AggAUNpxWKR6YNN8aABwAHgAgAGOAYgBjQSSAQM1LjKYAQCgAQGqAQtnd3Mtd2l6LWltZ8ABAQ&sclient=img&ei=CHOgX8GmHYjwtAXRtLvgDA&bih=879&biw=1813#imgrc=8K7kbUE95iuy1M-->\n    <h1>Profile </h1>\n<div fxLayout=\"column\" class=\"outerContainer\">\n    <mat-card>\n        <mat-card-content>\n            <div fxFlex class=\"childColumnContainers\">\n                <div fxLayout=\"row wrap\" fxLayoutGap=\"10px\">\n                    <div fxFlex>\n                        <mat-card>\n                            <mat-card-content>\n                                <app-userdetails></app-userdetails>\n                            </mat-card-content>\n                    </mat-card>\n                    </div>\n                    <div fxFlex>\n                        <mat-card>\n                            <mat-card-content>\n                                <app-update-account></app-update-account>\n                            </mat-card-content>\n                        </mat-card>\n                    </div>\n                </div>\n            </div>\n        </mat-card-content>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material/list';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { PostDialogComponent } from '../app/pages/administration/dialogs/user-admin-post-dialog/post-dialog.component';\nimport { PutDialogComponent } from '../app/pages/administration/dialogs/user-admin-put-dialog/put-dialog.component';\nimport { PatchDialogComponent } from '../app/pages/administration/dialogs/user-admin-patch-dialog/patch-dialog.component';\nimport { RolemanagementComponent } from './pages/administration/rolemanagement/rolemanagement.component';\nimport { CatalogmanagementComponent } from './pages/administration/catalogmanagement/catalogmanagement.component';\nimport { PurchasegraphComponent } from './pages/administration/purchasegraph/purchasegraph.component';\nimport { SecurityquestionmanagementComponent } from './pages/administration/securityquestionmanagement/securityquestionmanagement.component';\nimport { UserManagementComponent } from '../app/pages/administration/usermanagement/usermanagement.component';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DeleteRecordDialogComponentComponent } from './pages/administration/rolemanagement/delete-record-dialog-component/delete-record-dialog-component.component';\nimport { CreateRoleDialogComponent } from './pages/administration/dialogs/create-role-dialog/create-role-dialog.component';\nimport { CreateSecurityquestionDialogComponent } from './pages/administration/dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component';\nimport { DeleteSecurityquestionDialogComponent } from './pages/administration/dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component';\nimport { UpdateRoleDialogComponent } from './pages/administration/dialogs/update-role-dialog/update-role-dialog.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MoreVertDialogComponent } from './pages/administration/dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { CreateCatalogItemComponent } from './pages/administration/dialogs/create-catalog-item/create-catalog-item.component';\nimport { UpdateCatalogItemComponent } from './pages/administration/dialogs/update-catalog-item/update-catalog-item.component';\nimport { DeleteCatalogItemComponent } from './pages/administration/dialogs/delete-catalog-item/delete-catalog-item.component';\nimport { UpdateSecurityquestionDialogComponent } from './pages/administration/dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component';\nimport { CreateAccountComponent } from './pages/create-account/create-account.component';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { ErrorInterceptor } from './shared/error.interceptor';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport { CreateorderComponent } from './pages/home/createorder/createorder.component';\nimport { OrderhistoryComponent } from './pages/home/orderhistory/orderhistory.component';\nimport { DatePipe } from '@angular/common';\nimport { VerifyUsernameComponent } from './pages/reset-password/verify-username/verify-username.component';\nimport { VerifySecurityQuestionsComponent } from './pages/reset-password/verify-security-questions/verify-security-questions.component'; \nimport { ResetPasswordComponent } from './pages/reset-password/reset-password/reset-password.component';\nimport { ViewtransactiondialogComponent } from './pages/home/dialogs/orderhistory/viewtransactiondialog/viewtransactiondialog.component';\nimport { ViewAllTransactionsDialogComponent } from './pages/home/dialogs/orderhistory/view-all-transactions-dialog/view-all-transactions-dialog.component';\nimport { ResetPasswordProcessComponent } from './pages/reset-password/reset-password-process/reset-password-process.component';\nimport { UserdetailsComponent } from './pages/profile/userdetails/userdetails.component';\nimport { UpdateAccountComponent } from './pages/profile/update-account/update-account.component';\nimport { ChangePasswordComponent } from './pages/profile/dialogs/change-password/change-password.component';\nimport { SuccessComponent } from './pages/profile/dialogs/success/success.component';\nimport { ChangeSecurityQuestionsComponent } from './pages/profile/dialogs/change-security-questions/change-security-questions.component';\nimport { UpdateContactDialogComponent } from './pages/profile/dialogs/update-contact-dialog/update-contact-dialog.component';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { InvoiceReviewDialogComponent } from './pages/home/dialogs/invoice-review-dialog/invoice-review-dialog.component';\nimport { PurchaseHistoryGraphComponent } from './pages/home/purchase-history-graph/purchase-history-graph.component';\nimport { ChartModule } from 'primeng/chart';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    BaseLayoutComponent,\n    AuthLayoutComponent,\n    SigninComponent,\n    AdministrationComponent,\n    ProfileComponent,\n    ContactComponent,\n    AboutComponent,\n    PostDialogComponent,\n    PutDialogComponent,\n    PatchDialogComponent,\n    RolemanagementComponent,\n    CatalogmanagementComponent,\n    PurchasegraphComponent,\n    SecurityquestionmanagementComponent,\n    UserManagementComponent,\n    DeleteRecordDialogComponentComponent,\n    CreateRoleDialogComponent,\n    CreateSecurityquestionDialogComponent,\n    DeleteSecurityquestionDialogComponent,\n    UpdateRoleDialogComponent,\n    MoreVertDialogComponent,\n    CreateCatalogItemComponent,\n    UpdateCatalogItemComponent,\n    DeleteCatalogItemComponent,\n    UpdateSecurityquestionDialogComponent,\n    CreateAccountComponent,\n    ErrorComponent,\n    NotfoundComponent,\n    CreateorderComponent,\n    OrderhistoryComponent,\n    VerifyUsernameComponent,\n    VerifySecurityQuestionsComponent,\n    ResetPasswordComponent,\n    ViewtransactiondialogComponent,\n    ViewAllTransactionsDialogComponent,\n    ResetPasswordProcessComponent,\n    UserdetailsComponent,\n    UpdateAccountComponent,\n    ChangePasswordComponent,\n    SuccessComponent,\n    ChangeSecurityQuestionsComponent,\n    UpdateContactDialogComponent,\n    InvoiceReviewDialogComponent,\n    PurchaseHistoryGraphComponent\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatMenuModule,\n    MatListModule,\n    MatTableModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatStepperModule,\n    ScrollingModule,\n    MatCheckboxModule,\n    ChartModule\n  ],\n  providers: [ {\n    provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true\n  },\n  CookieService,\n  DatePipe  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * \n * ================================\n * ; Title: notfound.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling 400 errors\n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n    <div fxFlex>\n        <img src=\"./assets/404.png\" class=\"logo\" routerLink=\"/\">\n    </div><br /><br />\n    <div fxFlex>\n        <p>\n            The link you followed is probably broken or this page has been removed.\n        </p><br />\n        <p>\n            Click on the 404 to go home\n        </p>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: Error Interceptor.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: file is resopnsible for intercepting 500 server errors that are \n * returned to the client.\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private router: Router){\n\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(catchError(err => {\n            if ([404].indexOf(err.status) !== -1) {\n                this.router.navigate(['/session/404']);\n            }\n\n            if ([500].indexOf(err.status) !== -1){\n                this.router.navigate(['/session/500']);\n            }\n\n            //otherwise, catch error and trhow\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","/**\n * \n * ================================\n * ; Title: user admin service\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Brendan Mulhern\n * ; Date: 11/9/2020\n * ; Description: User Admin Service\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../interfaces/user.interface'\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserSignUpService {\n\n  constructor(private http: HttpClient) { }\n  getSecurityQuestions(): Observable<User[]> {\n    return this.http.get<User[]>('/api/securityQuestions')\n  }  \n  postUsers(newUser): Observable<User> {\n    return this.http.post<User>('/api/users', newUser)\n  }\n  signIn(data): Observable<User> {\n    return this.http.post<User>('/api/session/signin', data)\n  }\n}\n","/**\n * \n * ================================\n * ; Title: purchasegraph.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 11/6/2020\n * ; Description: component responsible for admin purchase graph\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { PurchasehistoryService } from '../../services/purchasehistory.service';\nimport { CatalogService } from './../services/catalog.service';\n\n@Component({\n  selector: 'app-purchasegraph',\n  templateUrl: './purchasegraph.component.html',\n  styleUrls: ['./purchasegraph.component.css']\n})\nexport class PurchasegraphComponent implements OnInit {\n  purchases: any;\n  data: any;\n  itemCount = [];\n  labels = [];\n\n  constructor(private PurchasehistoryService: PurchasehistoryService) { \n\n    this.PurchasehistoryService.findPurchasesbyServiceGraph().subscribe(res=> {\n      this.purchases = res['data'];\n      console.log(this.purchases);\n  \n  for (const item of this.purchases) {\n    this.labels.push(item._id.title);\n    this.itemCount.push(item.count);\n  }\n\n  this.data = {\n    labels: this.labels,\n    datasets: [\n      {\n      backgroundColor: [\n        '#ED0A3F',\n        '#FF8833',\n        '#5FA777',\n        '#0066CC',\n        '#6B3FA0',\n        '#AF593E',\n        '#6CDAE7',\n        '#F1B60E'\n      ],\n      hoverBackgroundColor: [\n        '#ED0A3F',\n        '#FF8833',\n        '#5FA777',\n        '#0066CC',\n        '#6B3FA0',\n        '#AF593E',\n        '#6CDAE7',\n        '#F1B60E'\n      ],\n      data: this.itemCount\n    },\n    ]\n  };\n\n  console.log('Data object');\n  console.log(this.data);\n  })\n}\n\n    /**\n       * Find All purchases\n       */\n  \n\n  ngOnInit(): void {\n  }\n\n   /**\n   * \n   * SECTION FOR PURCHASES APIS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n  \n\n}\n","<mat-card>\n    <mat-card-content>\n        <h1 style=\"font-weight: lighter; text-align: center\">Purchases by Service</h1>\n        <p-chart type='pie' [data]='data'></p-chart>\n    </mat-card-content>\n</mat-card>\n","/**\n * \n * ================================\n * ; Title: role.guard.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 11/5/2020\n * ; Description: Role Guard\n * ================================\n * \n */\n\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Observable } from 'rxjs';\n//import { RoleService} from '../pages/administration/services/role.service';\nimport { UserprofileService } from '../pages/services/userprofile.service';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  \n  //constructor(private router: Router, private cookieService: CookieService, private roleService: RoleService) {}\n  constructor(private router: Router, private cookieService: CookieService, private UserprofileService: UserprofileService) {}\n  \n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot)\n    {\n     // return this.roleService.findUserRole(this.cookieService.get('sessionuser')).pipe(map(res =>\n     return this.UserprofileService.getUserRole(this.cookieService.get('sessionuser')).pipe(map(res =>\n        {\n          if (res['data'].role === 'admin')\n          {\n            return true;\n          }\n          else{\n            //this.router.navigate(['/']);\n            return false;\n          }\n    }));\n  }\n  \n}\n\n","/**\n * \n * ================================\n * ; Title: post-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User post dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { UserCreationService } from '../../services/user-creation.service'\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n  createUserForm: any\n  roles: any\n  selected: any\n  role: any\n  rolesDataSource;\n  filteredRolesDataSource;\n\n  constructor(private userCreationService: UserCreationService, private fb: FormBuilder, private http: HttpClient) { }\n\n\n  ngOnInit() {\n    this.userCreationService.get().subscribe(res => {\n      this.roles = res['data']\n    })\n\n\n    this.userCreationService.getAllUserRoles().subscribe(res =>{\n      console.log(res.data);\n      //get all the roles and set it to our initial data array\n      this.rolesDataSource = res.data;\n\n      //Initialize the new array, filter out the disabled ones, and pushed the active ones into the new array\n      this.filteredRolesDataSource = [];\n      for (let role of this.rolesDataSource){\n        if(role.isDisabled !== true){\n          this.filteredRolesDataSource.push(role);\n        }\n      }\n      //console.log(this.filteredSecurityQuestionsDataSource);\n    })\n\n\n    this.createUserForm = this.fb.group({\n      username: [null, Validators.compose([Validators.required])],\n      password:  [null, Validators.compose([Validators.required])],\n      firstName: [null, Validators.compose([Validators.required])],\n      lastName: [null, Validators.compose([Validators.required])],\n      address: [null, Validators.compose([Validators.required])],\n      email: [null, Validators.compose([Validators.required])],\n      phoneNumber: [null, Validators.compose([Validators.required])],\n      role: [null, Validators.required]\n    })\n  }\n  createUser() {\n    let newUser = {\n      username: this.createUserForm.get('username').value,\n      password: this.createUserForm.get('password').value,\n      firstName: this.createUserForm.get('firstName').value,\n      lastName: this.createUserForm.get('lastName').value,\n      address: this.createUserForm.get('address').value,\n      email: this.createUserForm.get('email').value,\n      phoneNumber: this.createUserForm.get('phoneNumber').value,\n      role: this.createUserForm.controls.role.value\n    }\n    this.userCreationService.post(newUser).subscribe(err => {\n      if (err) console.log(err)\n      else console.log(\"POST SUCCESS\")\n    }) \n    this.createUserForm.reset();\n  }\n  cancel() {\n\n  }\n}\n","<div fxLayout=\"column\">\n<mat-card class=\"mat-elevation-z8\">\n    <mat-card-title>Create User</mat-card-title>\n    <br />\n        <form (ngSubmit)=\"createUser()\" [formGroup]=\"createUserForm\">\n        <mat-card-content>\n            <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n\n            <mat-form-field>\n                <mat-label>Username: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. rjackson25\" formControlName=\"username\" />\n            </mat-form-field>\n     \n            <mat-form-field>\n                <mat-label>Password: </mat-label>\n            \n                <input matInput placeholder=\"Always Encrypted\" formControlName=\"password\" />\n            </mat-form-field>\n      \n            <mat-form-field>\n                <mat-label>First Name: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. Tom\" formControlName=\"firstName\" />\n            </mat-form-field>\n        \n            <mat-form-field>\n                <mat-label>Last Name: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. Jerry\" formControlName=\"lastName\" />\n            </mat-form-field>\n       \n            <mat-form-field>\n                <mat-label>Address: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. 123 Test Street\" formControlName=\"address\" />\n            </mat-form-field>\n         \n            <mat-form-field>\n                <mat-label>Email: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. hello@google.com\" formControlName=\"email\" />\n            </mat-form-field>\n       \n            <mat-form-field>\n                <mat-label>Phone Number: </mat-label>\n                <br>\n                <input matInput placeholder=\"Ex. (555) 555-5555\" formControlName=\"phoneNumber\" />\n            </mat-form-field>\n            <br>\n            <div>\n                <mat-label>Role</mat-label>\n                <br>\n                <mat-select [value]=\"selected\" [formControl]=\"createUserForm.controls['role']\">\n                    <mat-option *ngFor=\"let role of filteredRolesDataSource\" [value]=\"role.text\">{{ role.text }}</mat-option>\n                </mat-select>\n            </div>\n        </div>\n        </mat-card-content>\n       \n            <mat-dialog-actions align=\"end\">\n                <button mat-raised-button (click)=\"cancel()\" color=\"primary\" mat-dialog-close>Cancel</button>\n                <button type=\"submit\" mat-raised-button color=\"primary\" mat-dialog-close>Create User</button>\n            </mat-dialog-actions>\n            <br />\n        </form>\n    </mat-card>\n\n</div>","/**\n * \n * ================================\n * ; Title: deleteRecordDialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: component for creating role\n * ================================\n * \n */\n\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete-record-dialog-component',\n  templateUrl: './delete-record-dialog-component.component.html',\n  styleUrls: ['./delete-record-dialog-component.component.css']\n})\nexport class DeleteRecordDialogComponentComponent implements OnInit {\n\n  recordId: string;\n  dialogHeader: string;\n  dialogBody: string;\n\n  constructor(private dialogRef: MatDialogRef<DeleteRecordDialogComponentComponent>, @Inject(MAT_DIALOG_DATA) data) { \n    this.recordId = data._id;\n    this.dialogHeader = data.dialogHeader;\n    this.dialogBody = data.dialogBody;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 mat-dialog-title>{{ dialogHeader }}</h2>\n<div mat-dialog-content>\n    <p> {{ dialogBody }}</p>\n\n</div>\n\n\n<hr /> \n\n<div mat-dialog-actions align=\"end\">\n    <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n    <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\">Confirm</button>\n</div>","/**\n * \n * ================================\n * ; Title: securityquestionmanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/25/2020\n * ; Description: component responsible for admin security question page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { SecurityQuestionService } from '../services/security-question.service';\nimport { SecurityQuestion } from '../interfaces/security-question.interface';\nimport { FormGroup } from '@angular/forms';\nimport { DeleteSecurityquestionDialogComponent } from '../dialogs/delete-securityquestion-dialog/delete-securityquestion-dialog.component';\nimport { CreateSecurityquestionDialogComponent } from '../dialogs/create-securityquestion-dialog/create-securityquestion-dialog.component';\nimport { UpdateSecurityquestionDialogComponent } from '../dialogs/update-securityquestion-dialog/update-securityquestion-dialog.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-securityquestionmanagement\",\n  templateUrl: \"./securityquestionmanagement.component.html\",\n  styleUrls: [\"./securityquestionmanagement.component.css\"],\n})\nexport class SecurityquestionmanagementComponent implements OnInit {\n  securityQuestions: SecurityQuestion[];\n  questionId: string;\n  displayedColumns: string[] = [\"question\", \"status\", \"action\"];\n\n  constructor(\n    private http: HttpClient,\n    private dialog: MatDialog,\n    private securityQuestionService: SecurityQuestionService\n  ) {\n    /**\n     * Find all Security Questions\n     */\n\n    this.securityQuestionService.findAllSecurityQuestions().subscribe(\n      (res) => {\n        this.securityQuestions = res[\"data\"];\n        //console.log(res);\n        //console.log(this.securityQuestionService);\n      },\n      (err) => {\n       // console.log(err);\n      }\n    );\n  }\n\n  ngOnInit(): void {}\n\n  /**\n   *\n   * SECTION FOR SECURITY QUESTION API CALLS (create, update, delete)\n   * You'll need to import http client and the related service\n   */\n\n  //createSecurityQuestionDialog\n  createSecurityQuestion(){\n    const dialogRef = this.dialog.open(CreateSecurityquestionDialogComponent, {\n      data: {\n        \n      },\n      disableClose: true,\n      width: \"800px\"\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'create'){\n\n       this.securityQuestionService.findAllSecurityQuestions().subscribe(res => {\n         this.securityQuestions = res['data'];\n         //console.log(this.securityQuestions);\n       }, err => {\n         console.log(err);\n       })\n      }\n    })\n  }\n\n\n\n  //updateSecurityQuestionDialog\n\n updateSecurityQuestion(data){\n  console.log(data);\n  const dialogRef = this.dialog.open(UpdateSecurityquestionDialogComponent, {\n    data: {\n      data,\n      dialogHeader: 'Update Security Question'\n    },\n    disableClose: true,\n    width: '800px'\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    if(result === 'update'){\n      \n      this.securityQuestionService.findAllSecurityQuestions().subscribe(res => {\n        this.securityQuestions = res['data'];\n        console.log(this.securityQuestions);\n      }, err => {\n        console.log(err);\n      })\n    }\n  })\n}\n\n\n\n  //deleteSecurityQuestionDialog\n\n  deleteSecurityQuestion(questionId){\n  const dialogRef = this.dialog.open(DeleteSecurityquestionDialogComponent, {\n    data: {\n      questionId,\n      dialogHeader: 'Disabling Question',\n      dialogBody: `Are you sure you want to disable security question ${questionId}?`\n    },\n    disableClose: true,\n    width: '800px'\n  });\n\n  dialogRef.afterClosed().subscribe(result => {\n    if (result == 'confirm') {\n      console.log(questionId)\n      this.securityQuestionService.deleteSecurityQuestion(questionId).subscribe(res => {\n        console.log('Security question successfully disabled')\n        this.securityQuestionService.findAllSecurityQuestions().subscribe(res=> {\n          this.securityQuestions = res['data'];\n          console.log(this.securityQuestions);\n        }, err => {\n          console.log(err);\n        })\n      })\n    }\n  })\n\n}\n  \n}\n","<!--JB moved this p tag and button in here for grouping purposes-->\n<p>Security Questions<button mat-button class=\"crudButton\" (click)=\"createSecurityQuestion()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p> \n\n\n<table mat-table [dataSource]=\"securityQuestions\" class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"question\">\n    <th mat-header-cell *matHeaderCellDef> Question </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.questionId}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"status\">\n    <th mat-header-cell *matHeaderCellDef> isDisabled? </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.isDisabled}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"action\">\n    <th mat-header-cell *matHeaderCellDef></th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Actions button\">\n        <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item (click)=\"updateSecurityQuestion(element)\">\n          <mat-icon>edit</mat-icon>\n          <span>Edit</span>\n        </button>\n        <button mat-menu-item (click)=\"deleteSecurityQuestion(element._id)\">\n          <mat-icon>delete</mat-icon>\n          <span>Disable</span>\n        </button>\n      </mat-menu>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","/**\n * \n * ================================\n * ; Title: patch-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User patch dialog component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { CookieService } from 'ngx-cookie-service'\nimport { UserCreationService } from '../../services/user-creation.service'\nimport { User } from '../../interfaces/user.interface'\n\n@Component({\n  selector: 'app-patch-dialog',\n  templateUrl: './patch-dialog.component.html',\n  styleUrls: ['./patch-dialog.component.css']\n})\nexport class PatchDialogComponent implements OnInit {\n  user: User\n  constructor(private userCreationService: UserCreationService, private cookieService: CookieService, private http: HttpClient) { }\n\n  ngOnInit() { }\n  cancel() {\n\n  }\n  delete() {\n    let id = this.cookieService.get('id')\n    this.userCreationService.getUserById(id).subscribe(res => {\n      if (res) {\n        this.user = res['data']\n      } else {\n        console.log(\"No User Found\")\n      }\n    })\n    this.userCreationService.patch(id, this.user).subscribe(err => {\n      if (err) console.log(err)\n     else console.log(\"DELETE Success\")\n   }) \n  }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title class=\"text-center\">\n            <h1>Delete User</h1>\n        </mat-card-title>\n        <mat-card-actions>\n            <button mat-button (click)=\"cancel()\" mat-dialog-close>Cancel</button>\n            <button mat-button (click)=\"delete()\" mat-dialog-close>Delete User</button>\n        </mat-card-actions>\n    </mat-card-content>\n</mat-card>","/**\n * \n * ================================\n * ; Title: usermanagement.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/14/2020\n * ; Description: User mgmt component\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\nimport { MatDialog } from '@angular/material/dialog'\nimport { PostDialogComponent } from '../dialogs/user-admin-post-dialog/post-dialog.component'\nimport { PutDialogComponent } from '../dialogs/user-admin-put-dialog/put-dialog.component'\nimport { PatchDialogComponent } from '../dialogs/user-admin-patch-dialog/patch-dialog.component'\nimport { RoleService } from '../services/role.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MoreVertDialogComponent } from '../dialogs/user-options-dialog/dialogs/more-vert-dialog/more-vert-dialog.component'\nimport { UserCreationService } from '../services/user-creation.service'\n@Component({\n  selector: 'app-usermanagement',\n  templateUrl: './usermanagement.component.html',\n  styleUrls: ['./usermanagement.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  \n  //Variable Declaration\n  users: any\n  displayedColumns: any = [ 'username', 'fistName', 'lastName', 'phoneNumber', 'address','isDisabled', 'actions', 'roles']\n\n  constructor(private userCreationService: UserCreationService, public dialog: MatDialog, private http: HttpClient, private roleService: RoleService, private cookieService: CookieService) { }\n\n\n  ngOnInit() {\n    //Begin Brendans code\n    this.userCreationService.get().subscribe(data => {\n      this.users = data['data'];\n    })\n    //end Brendans code\n   }\n\n   /**Begin Brendans code */\n   post() {\n     const dialogRef = this.dialog.open(PostDialogComponent, {\n      disableClose: true,\n      width:'800px'});\n      //added by JB 10/28. After user is submitted, refresh the user list.\n      dialogRef.afterClosed().subscribe(result => {\n        this.userCreationService.get().subscribe(data => {\n      this.users = data['data'];\n    })\n      })\n   }\n  options(user) {\n    this.cookieService.set('id', user._id)\n    this.dialog.open(MoreVertDialogComponent)\n  }\n  }","<p>User Management\n        <button mat-button id=\"post\" (click)=\"post()\"><mat-icon class=\"material-icons\">library_add</mat-icon></button></p>\n    <!--- Username Column -->\n    <table mat-table [dataSource]=\"users\" class=\"mat-elevation-z8\" >\n        <ng-container matColumnDef=\"username\">\n            <th mat-header-cell *matHeaderCellDef>Username</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.username }}\n            </td>\n        </ng-container>\n        <!--- First Name Column -->\n        <ng-container matColumnDef=\"fistName\">\n            <th mat-header-cell *matHeaderCellDef>First Name</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.firstName }}\n            </td>\n        </ng-container>\n        <!--- Last Name Column -->\n        <ng-container matColumnDef=\"lastName\">\n            <th mat-header-cell *matHeaderCellDef>Last Name</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.lastName }}\n            </td>\n        </ng-container>\n        <!--- Phone Number Column -->\n        <ng-container matColumnDef=\"phoneNumber\">\n            <th mat-header-cell *matHeaderCellDef>Phone Number</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.phoneNumber }}\n            </td>\n        </ng-container>\n        <!--- Address Column -->\n        <ng-container matColumnDef=\"address\">\n            <th mat-header-cell *matHeaderCellDef>Address</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.address }}\n            </td>\n        </ng-container>\n        <!--- isDisabled Column -->\n        <ng-container matColumnDef=\"isDisabled\">\n            <th mat-header-cell *matHeaderCellDef>isDisabled?</th>\n            <td mat-cell *matCellDef=\"let user\">\n                {{ user.isDisabled }}\n            </td>\n        </ng-container>\n        <!--- Roles Column -->\n        <ng-container matColumnDef=\"roles\">\n            <th mat-header-cell *matHeaderCellDef>Role</th>\n            <td mat-cell *matCellDef=\"let user\">{{ user.role }}</td>\n        </ng-container>\n        <!--- Actions Column -->\n        <ng-contaoner matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef></th>\n                <td mat-cell *matCellDef=\"let user\">\n                    <button mat-button (click)=\"options(user)\"><mat-icon>more_vert</mat-icon></button>\n                </td>\n        </ng-contaoner>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>","/**\n * \n * ================================\n * ; Title: verify-username.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/31/2020\n * ; Description: component for managing the verify username\n * ================================\n * \n */\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { VerifySecurityQuestionsComponent } from '../verify-security-questions/verify-security-questions.component';\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\nimport { ViewChild } from '@angular/core';  //add\n\n\n@Component({\n  selector: 'app-verify-username',\n  templateUrl: './verify-username.component.html',\n  styleUrls: ['./verify-username.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class VerifyUsernameComponent implements OnInit {\n  form1: FormGroup;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n /*\n//begin add\n  @ViewChild(VerifyUsernameComponent) stepOneComponent: VerifyUsernameComponent;\n  @ViewChild(VerifySecurityQuestionsComponent) stepTwoComponent: VerifySecurityQuestionsComponent;\n  @ViewChild(ResetPasswordComponent) stepThreeComponent: ResetPasswordComponent;\n\n  get frmStepOne() {\n     return this.stepOneComponent ? this.stepOneComponent.form1 : null;\n  }\n\n  get frmStepTwo() {\n     return this.stepTwoComponent ? this.stepTwoComponent.form2 : null;\n  }\n\n  get frmStepThree() {\n     return this.stepThreeComponent ? this.stepThreeComponent.form3 : null;\n  }\n//end add\n*/\n\n\n  constructor(private http: HttpClient, private fb: FormBuilder, private router: Router, private _snackBar: MatSnackBar) { \n  }\n  \n  ngOnInit() {\n\n    this.form1=this.fb.group({\n      username: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n\n\n  validateUsername() {\n    const username = this.form1.controls['username'].value;\n    console.log(username);\n\n    this.http.get('/api/session/verify/users/' + username).subscribe (res => {\n      //console.log(res['data'].username);\n      console.log(res);\n      //if we get data back, route to the next step\n      if (res['data']) {\n        this.router.navigate(['/session/verify-security-questions'], {queryParams: {username: username}, skipLocationChange: true});\n        //else if there is not res data or its null, we'll handle it here and in the err\n      } else if(!res['data']){\n        this.errorMessage = 'Invalid username or password. Try again.';\n      this.openSnackBar(this.errorMessage);\n      console.log('first error fired');\n      }\n    }, err => {\n      this.errorMessage = 'Invalid username or password. Try again.';\n      this.openSnackBar(this.errorMessage);\n      console.log(err);\n    });\n  }\n\n  \n    openSnackBar(errorMessage: string) {\n      this._snackBar.open(errorMessage, 'Close', {\n        duration: 7000,\n        verticalPosition: 'top',\n        panelClass: 'error'\n      });\n    \n    }\n\n}\n","<!--Outer container-->\n\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <h1>Reset Password</h1>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n                <!--inner container-->\n                <div fxLayout=\"column\" class=\"singinInnerContainer\">\n                    <!--LOGO-->\n                    <div fxFlex>\n                        <img src=\"./assets/logo.png\" class=\"logo\">\n                    </div>\n                    <h2>Enter Username</h2>\n                    <!--Stepper\n                    <mat-horizontal-stepper #stepper>\n                        <mat-step [stepControl]=\"form1\">-->\n\n                    <!--form-->    \n                    <form [formGroup]=\"form1\" (ngSubmit)=\"validateUsername()\" #validateUsernameForm>\n                      <!--  <ng-template matStepLabel>Verify Username</ng-template>-->\n\n                        <mat-card-content fxLayout=\"column\">\n                            <mat-form-field fxFlex>\n                                <input matInput type=\"text\" [formControl]=\"form1.controls['username']\"\n                                    placeholder=\"Example: bobsmith\">\n                            </mat-form-field>\n                            <br><br>\n                            <div fxLayoutAlign=\"end\" fxLayoutGap=\"10px\">\n                                <button type=\"button\" mat-raised-button color=\"primary\" routerLink=\"/session/signin\">Cancel</button>\n                                <button type=\"submit\" \n                                [disabled]=\"!form1.valid\"\n                                mat-raised-button color=\"primary\">Next</button>\n                            </div>\n                        </mat-card-content>\n                    </form>\n\n              <!--  </mat-step>\n            </mat-horizontal-stepper>-->\n\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n\n\n","/**\n * \n * ================================\n * ; Title: about.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for about page\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\" class=\"outerContainer\">\n        <div fxFlex>\n            <img src=\"./assets/about2.png\" class=\"logo\">\n            <h1>About Us</h1><br />\n            <!--Original royalty free image provided from https://www.pinclipart.com/picdir/middle/2-24114_wheel-clip-art-download-gear-icon-royalty-free.png-->\n        </div>\n    <div fxFlex>\n<mat-card>\n<mat-card-content>\n    <div fxLayout=\"column\">\n        <div fxFlex>\n            <img src=\"./assets/bob.jpg\" style=\"float: left; width: 200px; padding-right: 10px;\">\n            <img src=\"./assets/index.jpg\"style=\"float: right; width: 200px;  padding-left: 10px;\">\n            <!--Royalty Free Images From https://www.dreamstime.com-->\n            <br />\n            <p><strong>Bob's Computer Repair Shop has been in existence since 2020.</strong> It was founded primary for the reason being that people needed their computers fixed. Bob has the technical training requisite to be able to deliver a quality computer fix. Services offered include the fixing of broken computers; fixing of broken routers and phones. Bob really has a great skill of fixing things and is able to help you today! If you ever are in need of a computer fix or find yourself in a computer bind Bob will be there to save you time and money! Bob has the requisite skills in order to fix your computer!</p>\n            <mat-divider [inset]=\"true\"></mat-divider>\n            <p>How did Bob get into this business? It all started when Bob set out to build his own computer for online gaming. During this process, he sourced parts online and compiled the computer, piece by piece. It was during this project that Bob realized that he really enjoyed creating and repairing hardware. Since Bob enjoyed this activity so much, he began to repair all his friends devices. It got to the point where Bob was repairing devices almost 7 days a week. At this point, Bob came to the realization that he needed to make this business legitimate.  Fast forward a few years later, Bob now has his own company, Bob's Computer Repair Shop. </p>\n            <mat-divider [inset]=\"true\"></mat-divider>\n            <p>Bob has been in the Technology Business for 10 Years and has seen the times evolve as technology has changed. Not many people have the skills Bob has in order to fix computers. Bob has a degree in Computer Fixing from a renowned university. <strong>Bob has fixed over 1000 computers in his time as a Computer Technician.</strong></p>\n        </div>\n    </div>\n</mat-card-content>\n</mat-card>\n</div>\n</div><br /><br /><br /><br /><br /><br /><br /><br /><br /><br />","/**\n * \n * ================================\n * ; Title: create-securityquestion-dialog.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/26/2020\n * ; Description: Create Security Question Dialog Component\n * ================================\n * \n */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SecurityQuestionService } from '../../services/security-question.service';\n\n\n\n@Component({\n  selector: 'app-create-securityquestion-dialog',\n  templateUrl: './create-securityquestion-dialog.component.html',\n  styleUrls: ['./create-securityquestion-dialog.component.css']\n})\nexport class CreateSecurityquestionDialogComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, private SecurityQuestionService: SecurityQuestionService, private http: HttpClient, private dialogRef: MatDialogRef<CreateSecurityquestionDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) { }\n\n    questionId: string;\n    createSecurityQuestionForm: FormGroup;\n    enteredQuestionId: any [];\n\n\n  ngOnInit(): void {\n    this.createSecurityQuestionForm = this.fb.group({\n      questionId: ['', Validators.required]\n    })\n  }\n\n createSecurityQuestion(){\n  \n  const questionId = this.createSecurityQuestionForm.controls.questionId.value;\n\n  console.log(questionId);\n  this.SecurityQuestionService.createSecurityQuestion(questionId).subscribe( res => {\n    questionId\n  }, err => {\n    console.log(err)\n    alert(`There was an issue creating the security question. Please ensure the question doesn't already exist. If this issue is reoccurring, please contact the system admin.`);\n  })\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Create Security Question</mat-card-title>\n        <br />\n        <form [formGroup]=\"createSecurityQuestionForm\" (ngSubmit)=\"createSecurityQuestion()\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\n                    <mat-form-field>\n                        <input type=\"questionId\" \n                               matInput\n                               placeholder=\"Example: What was your first pet?\"\n                               formControlName=\"questionId\">\n                    </mat-form-field>\n                </div>\n            </mat-card-content>\n            <mat-card-actions align=\"end\">\n                <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"create\"\n                                color=\"primary\"\n                                [disabled]=\"!createSecurityQuestionForm.valid\"\n                                >Create</button>\n            </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: catalog.service.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: Sarah Kovar\n * ; Date: 10/27/2020\n * ; Description: service for catalog api requests\n * ================================\n * \n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Catalog } from '../interfaces/catalog.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n     * \n     * Find All Items\n     * \n     */\n    findAllCatalogItems(): Observable<any>{\n      return this.http.get('/api/catalog/');\n    }\n\n    /**\n     * \n     * Find Item By Id\n     * \n     */\n    findCatalogItemById(catalogId: string): Observable<any>{\n      return this.http.get(`/api/catalog/${catalogId}`)\n    }\n\n    /**\n     * \n     * Create Item\n     * \n     */\n    createCatalogItem(title: string, price: number): Observable<any>{\n      return this.http.post('/api/catalog/',{\n        title,\n        price\n      })\n    }\n\n    /**\n     * \n     * Update Item\n     * \n     */\n    updateCatalogItem(catalogItemId: string, title: string, price:number, isDisabled: boolean): Observable<any>{\n      return this.http.put(`/api/catalog/${catalogItemId}/update`,{\n        title,\n        price,\n        isDisabled\n      })\n    }\n\n    /**\n     * \n     * Delete Item\n     * \n     */\n    deleteCatalogItem(catalogId: string): Observable<any>{\n      return this.http.patch(`/api/catalog/${catalogId}`,{\n        //nothing needs to be passed since we have the disable written at the api level\n      })\n    }\n}\n","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserprofileService } from '../../pages/services/userprofile.service';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  year: number = Date.now();  \n\n  username: any = this.cookieService.get('sessionuser');\n  role: any;\n  isVisible: Boolean;\n  \n  constructor(private cookieService: CookieService, private router: Router, private userProfileService: UserprofileService) { \n\n    this.userProfileService.getUserRole(this.username).subscribe(res => {\n      this.username = res['data'];\n      console.log(this.username.role);\n\n      if(this.username.role === \"admin\"){\n        this.isVisible = true;\n        console.log(this.isVisible);\n        \n       } else {\n       this.isVisible = false;\n       console.log(this.isVisible);\n       }\n    })\n\n\n\n\n}\n  ngOnInit(): void {\n  }\n\n  singOut(){\n    this.cookieService.deleteAll();\n    this.router.navigate(['/session/signin']);\n  }\n\n  /*\n  hideAdminNav(){\n    if(this.username.role === \"admin\"){\n      // console.log('i fired first');\n      this.isVisible = true;\n      console.log(this.isVisible);\n      \n     } else if (this.username.role === \"standard\"){\n     this.isVisible = false;\n     console.log(this.isVisible);\n     \n     }\n*/\n\n  }\n\n\n//}\n","<div fxLayout=\"column\" class=\"pageContainer\">\n\n  <!-- navigation -->\n  <nav fxFlex> \n    <mat-toolbar fxFlex>\n      <img src=\"./assets/logo2.png\" class=\"brandLogo\" routerLink=\"/\">\n      <a class=\"navbar-link\" routerLink=\"/\">Home</a>\n      <a class=\"navbar-link\" routerLink=\"/about\">About</a>\n      <a class=\"navbar-link\" routerLink=\"/contact\">Contact Us</a>\n      <a class=\"navbar-link\" routerLink=\"/profile\">Profile</a>\n      <div class=\"navbar-link\" *ngIf = \"this.isVisible\">\n      <a class=\"navbar-link\" routerLink=\"/admin\">Administration</a>\n      </div>\n      <span></span>\n      <span class=\"example-spacer\"></span>\n      <a class=\"navbar-link\" routerLink=\"/\" (click)=\"singOut()\">Sign Out</a>\n    </mat-toolbar>\n  </nav>\n\n  <!-- main content -->\n  <div fxFlex>\n    <main class=\"main-content\" fxFlex=\"100%;\">\n      <br /><br />\n      <router-outlet></router-outlet>\n      <br /><br /><br />\n    </main>\n  </div>\n  <!-- footer -->\n  <div fxFlex >\n    <footer class=\"footer\">\n      <mat-toolbar class=\"footer-content footerStyle\">\n        <p>\n          &copy; {{year | date: 'yyyy'}} - Bob's Computer Repair Shop\n        </p>\n      </mat-toolbar>\n    </footer>\n  </div>\n</div>\n","/**\n * \n * ================================\n * ; Title: reset-password-process.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/31/2020\n * ; Description: component for managing mat stepper\n * ================================\n * \n */\n\nimport { Component, ViewChild, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\n\n//import { StepOneComponent } from './step-one.component';\nimport { VerifyUsernameComponent } from '../verify-username/verify-username.component';\n\n//import { StepTwoComponent } from './step-two.component';\nimport { VerifySecurityQuestionsComponent } from '../verify-security-questions/verify-security-questions.component';\n\n//import { StepThreeComponent } from './step-three.component';\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\n\n\n@Component({\n  selector: 'app-reset-password-process',\n  templateUrl: './reset-password-process.component.html',\n  styleUrls: ['./reset-password-process.component.css']\n})\nexport class ResetPasswordProcessComponent {\n\n  @ViewChild(VerifyUsernameComponent) stepOneComponent: VerifyUsernameComponent;\n  @ViewChild(VerifySecurityQuestionsComponent) stepTwoComponent: VerifySecurityQuestionsComponent;\n  @ViewChild(ResetPasswordComponent) stepThreeComponent: ResetPasswordComponent;\n\n  get form1() {\n     return this.stepOneComponent ? this.stepOneComponent.form1 : null;\n  }\n\n  get form2() {\n     return this.stepTwoComponent ? this.stepTwoComponent.form2 : null;\n  }\n\n  get form3() {\n     return this.stepThreeComponent ? this.stepThreeComponent.form3 : null;\n  }\n\n  constructor(private fb: FormBuilder) { }\n\n\n}\n\n\n\n\n\n","<div fxLayout=\"column\" class=\"singinOuterContainer\">\n    <div fxFlex>\n        <h1>Reset Password</h1>\n        <mat-card class=\"mat-elevation-z8\">\n            <mat-card-content>\n                <!--inner container-->\n                <div fxLayout=\"column\" class=\"singinInnerContainer\">\n                    <!--LOGO-->\n                    <div fxFlex>\n                        <img src=\"./assets/logo.png\" class=\"logo\">\n                    </div>\n\n<mat-horizontal-stepper linear #stepper>\n\t<mat-step [stepControl]=\"form1\">\n\t\t<ng-template matStepLabel>Verify Username</ng-template>\n\t\t<app-verify-username></app-verify-username>\n\t</mat-step>\n\t<mat-step [stepControl]=\"form2\">\n\t\t<ng-template matStepLabel>Verify Security Questions</ng-template>\n\t\t<app-verify-security-questions></app-verify-security-questions>\n\t</mat-step>\n\t<mat-step [stepControl]=\"form3\">\n\t\t<ng-template matStepLabel>Create New Password</ng-template>\n\t\t<app-reset-password></app-reset-password>\n\t</mat-step>\n</mat-horizontal-stepper>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { HomeComponent } from './pages/home/home.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { AuthGuard } from './shared/auth.guard';\nimport { AdministrationComponent } from './pages/administration/administration.component';\nimport { ContactComponent } from './pages/contact/contact.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { CreateAccountComponent } from './pages/create-account/create-account.component';\nimport { ErrorComponent } from './pages/error/error.component';\nimport { NotfoundComponent } from './pages/notfound/notfound.component';\nimport { VerifyUsernameComponent } from './pages/reset-password/verify-username/verify-username.component';\nimport { VerifySecurityQuestionsComponent } from './pages/reset-password/verify-security-questions/verify-security-questions.component';\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password/reset-password.component';\nimport { ResetPasswordProcessComponent } from './pages/reset-password/reset-password-process/reset-password-process.component';\nimport { PurchasegraphComponent } from './pages/administration/purchasegraph/purchasegraph.component';\nimport { RoleGuard } from './shared/role.guard';\n\nconst routes: Routes = [\n  {//path for logged in users\n    path: '',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent\n      },\n      {\n        path: 'about',\n        component: AboutComponent\n      },\n      {\n        path: 'contact',\n        component: ContactComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: 'admin',\n        component: AdministrationComponent,\n        canActivate: [RoleGuard]\n      },\n      {\n        path: 'not-found',\n        component: NotfoundComponent\n      }\n    ],\n        canActivate: [AuthGuard]\n  },\n  {//path for not logged in users\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'signin',\n        component: SigninComponent\n      },\n      {\n        path:'createAccount',\n        component: CreateAccountComponent\n      },\n      {\n        path: 'resetProcess',\n        component: ResetPasswordProcessComponent\n      },\n      {\n        path: 'forgot',\n        component: VerifyUsernameComponent\n      }, \n      {\n        path: 'verify-security-questions',\n        component: VerifySecurityQuestionsComponent\n      },\n      {\n        path: 'reset-password',\n        component: ResetPasswordComponent\n      },\n      {\n        path: '404',\n        component: NotfoundComponent\n      },\n      {\n        path: '500',\n        component: ErrorComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'session/404'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled'})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/**\n * \n * ================================\n * ; Title: error.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for handling 500 server errors\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n    <div fxFlex>\n        <img src=\"./assets/500.png\" class=\"logo\" routerLink=\"/\">\n    </div><br /><br />\n    <div fxFlex>\n        <p>\n            Screeeeech!  The server has crashed.  \n        </p><br />\n        <p>\n            Click on the 500 to go home\n        </p>\n    </div>\n</div>","/**\n * \n * ================================\n * ; Title: verify-security-questions.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Date: 10/31/2020\n * ; Description: component for managing security question verification\n * ================================\n * \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { MatSnackBar, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { ViewChild } from '@angular/core';\nimport { VerifyUsernameComponent } from '../verify-username/verify-username.component';  //add\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component'; //add\n\n//import { SecurityQuestion } from '../../administration/interfaces/security-question.interface';\n//import { SelectedSecurityQuestionSchema } from '../../../../../server/schemas/SelectedSecurityQuestionSchema';\n\nimport { Securityquestionpwdreset } from '../../../shared/securityquestionpwdreset.interface';\n\n@Component({\n  selector: 'app-verify-security-questions',\n  templateUrl: './verify-security-questions.component.html',\n  styleUrls: ['./verify-security-questions.component.css'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { displayDefaultIndicatorType: false }\n  }]\n})\nexport class VerifySecurityQuestionsComponent implements OnInit {\n\n  securityQuestions: Securityquestionpwdreset[];\n  question1: string;\n  question2: string;\n  question3: string;\n  username: string;\n  form2: FormGroup;\n  questions;\n  errorMessage: string;\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  //begin add\n // @ViewChild(VerifyUsernameComponent) stepOneComponent: VerifyUsernameComponent;\n  //@ViewChild(VerifySecurityQuestionsComponent) stepTwoComponent: VerifySecurityQuestionsComponent;\n  //@ViewChild(ResetPasswordComponent) stepThreeComponent: ResetPasswordComponent;\n\n  //get frmStepOne() {\n  //   return this.stepOneComponent ? this.stepOneComponent.form1 : null;\n // }\n\n  //get frmStepTwo() {\n  //   return this.stepTwoComponent ? this.stepTwoComponent.form2 : null;\n  //}\n\n  //get frmStepThree() {\n //    return this.stepThreeComponent ? this.stepThreeComponent.form3 : null;\n // }\n//end add\n\n  constructor(private route: ActivatedRoute, private router: Router, private http: HttpClient, private fb: FormBuilder, private _snackBar: MatSnackBar) {\n    this.username=this.route.snapshot.queryParamMap.get('username');\n    console.log(this.username);\n\n    this.http.get('api/users/' + this.username + '/security-questions').subscribe(res => {\n      this.questions = res['data'];\n      //console.log(this.securityQuestions);\n      console.log(res);\n    }, err => {\n      console.log(err);\n    }, () => {\n      //console.log('i fired')\n      //console.log(this.questions.securityQuestions[0].questionText);\n      this.question1 = this.questions.securityQuestions[0].questionText;  \n      this.question2 = this.questions.securityQuestions[1].questionText;\n      this.question3 = this.questions.securityQuestions[2].questionText;\n\n/*\n      console.log(this.question1);\n      console.log(this.question2);\n      console.log(this.question3);*/\n    });\n   }\n\n  ngOnInit(): void {\n    this.form2 = this.fb.group({\n      answerToSecurityQuestion1: [null, Validators.compose([Validators.required])],\n      answerToSecurityQuestion2: [null, Validators.compose([Validators.required])],\n      answerToSecurityQuestion3: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n   verifySecurityQuestions() {\n    const answerToSecurityQuestion1 = this.form2.controls['answerToSecurityQuestion1'].value.trim();\n    const answerToSecurityQuestion2 = this.form2.controls['answerToSecurityQuestion2'].value.trim();\n    const answerToSecurityQuestion3 = this.form2.controls['answerToSecurityQuestion3'].value.trim();\n\n    console.log(answerToSecurityQuestion1 + answerToSecurityQuestion2 + answerToSecurityQuestion3);\n\n    this.http.post('/api/session/verify/users/' + this.username + '/security-questions', {\n      questionText1: this.question1,\n      questionText2: this.question2,\n      questionText3: this.question3,\n      answerText1: answerToSecurityQuestion1,\n      answerText2: answerToSecurityQuestion2,\n      answerText3: answerToSecurityQuestion3\n    }).subscribe( res => {\n      console.log(res);\n      if(res['message'] === 'Success!') {\n        this.router.navigate(['/session/reset-password'], {queryParams: {isAuthenticated: 'true', username: this.username}, skipLocationChange: true})\n      } else {\n        console.log('Unable to verify security question responses.')\n        this.errorMessage = 'Invalid security question answers. Try again.';\n        this.openSnackBar(this.errorMessage);\n\n      }\n    });\n  }\n\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n  }}","<!--Outer container-->\n<div fxLayout=\"column\" class=\"singinOuterContainer\">\n  <div fxFlex>\n      <h1>Reset Password</h1>\n      <mat-card class=\"mat-elevation-z8\">\n          <mat-card-content>\n              <!--inner container-->\n              <div fxLayout=\"column\" class=\"singinInnerContainer\">\n                  <!--LOGO-->\n                  <div fxFlex>\n                      <img src=\"./assets/logo.png\" class=\"logo\">\n                  </div>\n                  <h2>Verify Security Questions</h2>\n  <!--\n                  <mat-horizontal-stepper #stepper>\n                    <mat-step [stepControl]=\"form2\">-->\n  \n        <form *ngIf=\"questions\" [formGroup]=\"form2\" (ngSubmit)=\"verifySecurityQuestions()\" #usernameForm>\n\n       <!--   <ng-template matStepLabel>Verify Security Questions</ng-template>-->\n\n          <mat-card-content fxFlex fxLayout=\"column\">\n            <mat-list>\n              <mat-list-item>\n                {{ question1 }} &nbsp; &nbsp; &nbsp; &nbsp;\n                <mat-form-field fxFlex>\n                  <input matInput [formControl]=\"form2.controls['answerToSecurityQuestion1']\" placeholder=\"Answer 1\" />\n                </mat-form-field>\n              </mat-list-item>\n  \n              <mat-list-item>\n                {{ question2 }} &nbsp; &nbsp; &nbsp; &nbsp;\n                <mat-form-field fxFlex>\n                  <input matInput [formControl]=\"form2.controls['answerToSecurityQuestion2']\" placeholder=\"Answer 2\" />\n                </mat-form-field>\n              </mat-list-item>\n  \n              <mat-list-item>\n                {{ question3 }} &nbsp; &nbsp; &nbsp; &nbsp;\n                <mat-form-field fxFlex>\n                  <input matInput [formControl]=\"form2.controls['answerToSecurityQuestion3']\" placeholder=\"Answer 3\" />\n                </mat-form-field>\n              </mat-list-item>\n            </mat-list>\n            <br/><br/>\n  \n            <div fxFlex fxLayoutAlign=\"end\" fxLayoutGap=\"10px\">\n              <a fxFlex fxLayoutAlign=\"start\" routerLink=\"/session/forgot\">\n                <mat-icon>west</mat-icon>\n                </a>\n              <button type=\"button\" mat-raised-button color=\"primary\" routerLink=\"/session/signin\">Cancel</button>\n              <button type=\"submit\" \n              [disabled]=\"!form2.valid\"\n              mat-raised-button \n              color=\"primary\">Next</button>\n            </div>\n            \n          </mat-card-content>\n        </form>\n<!--\n      </mat-step>\n    </mat-horizontal-stepper>-->\n\n    </div>\n\n","/**\n * \n * ================================\n * ; Title: changeSecurityQuestions.component.ts\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for changin the user security questions in the profile page\n * ================================\n * \n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar, MatSnackBarVerticalPosition } from '@angular/material/snack-bar';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserprofileService } from 'src/app/pages/services/userprofile.service';\nimport { SuccessComponent } from '../success/success.component';\n\n@Component({\n  selector: 'app-change-security-questions',\n  templateUrl: './change-security-questions.component.html',\n  styleUrls: ['./change-security-questions.component.css']\n})\nexport class ChangeSecurityQuestionsComponent implements OnInit {\n\nsecurityQuestionsDataSource: any[];\nfilteredSecurityQuestionsDataSource: any[];\nform: FormGroup;\nerrorMessage: string;\nverticalPosition: MatSnackBarVerticalPosition = 'bottom';\nusername: string =  this.cookieService.get('sessionuser');;\nuserId: string = this.cookieService.get('userId');;\n\n\n  constructor(\n    private userProfileService: UserprofileService,\n    private fb: FormBuilder, \n    private _snackBar: MatSnackBar,\n    private cookieService: CookieService,\n    private dialog: MatDialog,\n    private http: HttpClient) {\n    this.userProfileService.getAllSecurityQuestions().subscribe(res =>{\n      //console.log(res.data);\n      //get all the security questions and set it to our initial data array\n      this.securityQuestionsDataSource = res.data;\n\n      //Initialize the new array, filter out the disabled ones, and pushed the active ones into the new array\n      this.filteredSecurityQuestionsDataSource = [];\n      for (let question of this.securityQuestionsDataSource){\n        if(question.isDisabled !== true){\n          this.filteredSecurityQuestionsDataSource.push(question);\n        }\n      }\n      //console.log(this.filteredSecurityQuestionsDataSource);\n    })\n   }\n\n  ngOnInit(): void {\n    //set the form up so we can get access to the selected questions and entered answers\n    this.form = this.fb.group({\n      securityQuestionSeletedOne: [null, Validators.compose([Validators.required])],\n      securityQuestionOneAnswer: [null, Validators.compose([Validators.required])],\n      securityQuestionSeletedTwo: [null, Validators.compose([Validators.required])],\n      securityQuestionTwoAnswer: [null, Validators.compose([Validators.required])],\n      securityQuestionSeletedThree: [null, Validators.compose([Validators.required])],\n      securityQuestionThreeAnswer: [null, Validators.compose([Validators.required])],\n    });\n  }\n\n  changeSecurityQuestions(){\n    const securityQuestionSeletedOne = this.form.controls.securityQuestionSeletedOne.value;\n    const securityQuestionOneAnswer =  this.form.controls.securityQuestionOneAnswer.value;\n    const securityQuestionSeletedTwo = this.form.controls.securityQuestionSeletedTwo.value;\n    const securityQuestionTwoAnswer = this.form.controls.securityQuestionTwoAnswer.value;\n    const securityQuestionSeletedThree = this.form.controls.securityQuestionSeletedThree.value;\n    const securityQuestionThreeAnswer = this.form.controls.securityQuestionThreeAnswer.value;\n\n    /*\n    console.log(securityQuestionOneAnswer);\n    console.log(securityQuestionSeletedOne);\n    console.log(securityQuestionSeletedTwo);\n    console.log(securityQuestionTwoAnswer);\n    console.log(securityQuestionSeletedThree);\n    console.log(securityQuestionThreeAnswer);\n    */\n\n    /**\n     * \n     * Make the post request to update the questions\n     * \n     */\n    this.http.put(`api/users/${this.username}/security-questions`, {\n      securityQuestions: [\n        {\n          questionText: securityQuestionSeletedOne,\n          answerText: securityQuestionOneAnswer\n        },\n        {\n          questionText: securityQuestionSeletedTwo,\n          answerText: securityQuestionTwoAnswer\n        },\n        {\n          questionText: securityQuestionSeletedThree,\n          answerText: securityQuestionThreeAnswer\n        }\n      ]\n    }).subscribe(res => {\n      //console.log(res);\n      if(res['message'] === 'Success!'){\n        //open new dialog\n        const dialogRef = this.dialog.open(SuccessComponent, {\n          width: \"100px\"\n        })\n  \n      } else {\n        //call snackbar and display failure\n   //call snackbar and display failure\n   this.errorMessage = 'Something went wrong.';\n   this.openSnackBar(this.errorMessage);\n  \n      }\n    })\n    \n  }\n  openSnackBar(errorMessage: string) {\n    this._snackBar.open(errorMessage, 'Close', {\n      duration: 7000,\n      verticalPosition: 'top',\n      panelClass: 'error'\n    });\n}\n}\n","<div fxLayout=\"column\">\n    <mat-card class=\"mat-elevation-z8\">\n        <mat-card-title>Change Security Questions</mat-card-title>\n        <br />\n        <form [formGroup]=\"form\" \n                      (ngSubmit)=\"changeSecurityQuestions(); form.reset()\" \n                      #updateQuestionsform=\"ngForm\">\n                      <mat-card-content>\n                          <div fxLayout=\"column\">\n<!--Question 1-->\n<h3>Question 1</h3>\n                    <mat-form-field>\n                        <mat-label>Available Questions</mat-label>\n                            <mat-select name=\"question\" [formControl]=\"form.controls['securityQuestionSeletedOne']\">\n                                <mat-option *ngFor=\"let question of filteredSecurityQuestionsDataSource\" [value]=\"question.questionId\">\n                                      {{question.questionId}}\n                                    </mat-option>\n                            </mat-select>\n                    </mat-form-field>\n                 \n                    \n<!--Answer 1-->\n                    <mat-form-field>\n                        <mat-label>Enter Answer</mat-label>\n                        <input matInput placeholder=\"Question Answer\" [formControl]=\"form.controls['securityQuestionOneAnswer']\">\n                      </mat-form-field>\n\n                      <br />\n\n\n<!--Question 2-->\n<h3>Question 2</h3>\n                    <mat-form-field>\n                        <mat-label>Available Questions</mat-label>\n                            <mat-select name=\"question\" [formControl]=\"form.controls['securityQuestionSeletedTwo']\">\n                                <mat-option *ngFor=\"let question of filteredSecurityQuestionsDataSource\" [value]=\"question.questionId\">\n                                      {{question.questionId}}\n                                    </mat-option>\n                            </mat-select>\n                    </mat-form-field>\n                 \n                    \n<!--Answer 2-->\n                    <mat-form-field>\n                        <mat-label>Enter Answer</mat-label>\n                        <input matInput placeholder=\"Question Answer\" [formControl]=\"form.controls['securityQuestionTwoAnswer']\">\n                      </mat-form-field>\n\n                      <br />\n\n\n\n\n\n<!--Question 3-->\n<h3>Question 3</h3>\n                    <mat-form-field>\n                        <mat-label>Available Questions</mat-label>\n                            <mat-select name=\"question\" [formControl]=\"form.controls['securityQuestionSeletedThree']\">\n                                <mat-option *ngFor=\"let question of filteredSecurityQuestionsDataSource\" [value]=\"question.questionId\">\n                                      {{question.questionId}}\n                                    </mat-option>\n                            </mat-select>\n                    </mat-form-field>\n                 \n                    \n<!--Answer 3-->\n                    <mat-form-field>\n                        <mat-label>Enter Answer</mat-label>\n                        <input matInput placeholder=\"Question Answer\" [formControl]=\"form.controls['securityQuestionThreeAnswer']\">\n                      </mat-form-field>\n\n                    </div>\n<!--Buttons to submit/cancel the form-->\n                    </mat-card-content>\n                      <mat-card-actions align=\"end\">\n                        <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">Cancel</button>\n                        <button type=\"submit\" \n                                mat-raised-button \n                                matDialogClose=\"update\"\n                                color=\"primary\"\n                                [disabled]=\"!form.valid\">Update Questions</button>\n                      </mat-card-actions>\n        </form>\n    </mat-card>\n</div>","/**\n * \n * ================================\n * ; Title: BCRS PROJECT\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: Application for Bobs Computer Repair Shop.\n * ================================\n * \n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/**\n * \n * ================================\n * ; Title: Purchase-history-graph\n * ; Authors: Sarah Kovar; James Brown; Brendan Mulhern\n * ; Modified by: James Brown\n * ; Date: 10/14/2020\n * ; Description: component responsible for purchase history graph \n * ================================\n * \n */\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { UserprofileService } from '../../services/userprofile.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Component({\n  selector: 'app-purchase-history-graph',\n  templateUrl: './purchase-history-graph.component.html',\n  styleUrls: ['./purchase-history-graph.component.css']\n})\nexport class PurchaseHistoryGraphComponent implements OnInit {\n\n  purchases: any;\n  data: any;\n  itemCount = [];\n  labels = [];\n  username: any = this.cookieService.get('sessionuser');\n\n  constructor(\n    private userProfileService: UserprofileService,\n    private cookieService: CookieService) {\n\n    //call the purchaseGraph api\n    //console.log('i fired')\n    //console.log(this.username);\n      this.userProfileService.getUserPurchasesByGraph(this.username).subscribe(res => {\n        this.purchases = res['data'];\n        console.log(this.purchases);\n        //set a cookie that we'll grab from the parent component to hide the graph if no data is present.\n        //this is helpful for new users.\n        if(this.purchases.length === 0){\n          this.cookieService.set('hidegraph', 'nodata', 1);\n          //console.log('i fired');\n        } else {\n          this.cookieService.set('showGraph', 'true', 1);\n        }\n\n        //loop the purchases\n        for (const item of this.purchases){\n          this.labels.push(item._id.title);\n          this.itemCount.push(item.count);\n        }\n\n        this.data = {\n          labels: this.labels,\n          datasets: [\n            //graph object\n            {\n              data: this.itemCount,\n              backgroundColor: [\n                '#ED0A3F',\n                '#FF8833',\n                '#5FA777',\n                '#0066CC',\n                '#6B3FA0',\n                '#AF593E',\n                '#6CDAE7',\n                '#F1B60E'\n              ],\n              hoverBackgroundColor: [\n                '#ED0A3F',\n                '#FF8833',\n                '#5FA777',\n                '#0066CC',\n                '#6B3FA0',\n                '#AF593E',\n                '#6CDAE7',\n                '#F1B60E'\n              ],\n            }\n          ]\n        };\n      })\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-content>\n        <h1 style=\"font-weight: lighter; text-align: center\">Your Purchases</h1>\n        <p-chart type='pie' [data]='data'></p-chart>\n    </mat-card-content>\n</mat-card>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}